{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _token = require(\"./token\");\nvar _colmetadataTokenParser = _interopRequireDefault(require(\"./colmetadata-token-parser\"));\nvar _doneTokenParser = require(\"./done-token-parser\");\nvar _envChangeTokenParser = _interopRequireDefault(require(\"./env-change-token-parser\"));\nvar _infoerrorTokenParser = require(\"./infoerror-token-parser\");\nvar _fedauthInfoParser = _interopRequireDefault(require(\"./fedauth-info-parser\"));\nvar _featureExtAckParser = _interopRequireDefault(require(\"./feature-ext-ack-parser\"));\nvar _loginackTokenParser = _interopRequireDefault(require(\"./loginack-token-parser\"));\nvar _orderTokenParser = _interopRequireDefault(require(\"./order-token-parser\"));\nvar _returnstatusTokenParser = _interopRequireDefault(require(\"./returnstatus-token-parser\"));\nvar _returnvalueTokenParser = _interopRequireDefault(require(\"./returnvalue-token-parser\"));\nvar _rowTokenParser = _interopRequireDefault(require(\"./row-token-parser\"));\nvar _nbcrowTokenParser = _interopRequireDefault(require(\"./nbcrow-token-parser\"));\nvar _sspiTokenParser = _interopRequireDefault(require(\"./sspi-token-parser\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst tokenParsers = {\n  [_token.TYPE.DONE]: _doneTokenParser.doneParser,\n  [_token.TYPE.DONEINPROC]: _doneTokenParser.doneInProcParser,\n  [_token.TYPE.DONEPROC]: _doneTokenParser.doneProcParser,\n  [_token.TYPE.ENVCHANGE]: _envChangeTokenParser.default,\n  [_token.TYPE.ERROR]: _infoerrorTokenParser.errorParser,\n  [_token.TYPE.FEDAUTHINFO]: _fedauthInfoParser.default,\n  [_token.TYPE.FEATUREEXTACK]: _featureExtAckParser.default,\n  [_token.TYPE.INFO]: _infoerrorTokenParser.infoParser,\n  [_token.TYPE.LOGINACK]: _loginackTokenParser.default,\n  [_token.TYPE.ORDER]: _orderTokenParser.default,\n  [_token.TYPE.RETURNSTATUS]: _returnstatusTokenParser.default,\n  [_token.TYPE.RETURNVALUE]: _returnvalueTokenParser.default,\n  [_token.TYPE.SSPI]: _sspiTokenParser.default\n};\nclass StreamBuffer {\n  constructor(iterable) {\n    this.iterator = void 0;\n    this.buffer = void 0;\n    this.position = void 0;\n    this.iterator = (iterable[Symbol.asyncIterator] || iterable[Symbol.iterator]).call(iterable);\n    this.buffer = Buffer.alloc(0);\n    this.position = 0;\n  }\n  waitForChunk() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const result = yield _this.iterator.next();\n      if (result.done) {\n        throw new Error('unexpected end of data');\n      }\n      if (_this.position === _this.buffer.length) {\n        _this.buffer = result.value;\n      } else {\n        _this.buffer = Buffer.concat([_this.buffer.slice(_this.position), result.value]);\n      }\n      _this.position = 0;\n    })();\n  }\n}\nclass Parser {\n  static parseTokens(iterable, debug, options, colMetadata = []) {\n    return _wrapAsyncGenerator(function* () {\n      let token;\n      const onDoneParsing = t => {\n        token = t;\n      };\n      const streamBuffer = new StreamBuffer(iterable);\n      const parser = new Parser(streamBuffer, debug, options);\n      parser.colMetadata = colMetadata;\n      while (true) {\n        try {\n          yield _awaitAsyncGenerator(streamBuffer.waitForChunk());\n        } catch (err) {\n          if (streamBuffer.position === streamBuffer.buffer.length) {\n            return;\n          }\n          throw err;\n        }\n        if (parser.suspended) {\n          // Unsuspend and continue from where ever we left off.\n          parser.suspended = false;\n          const next = parser.next;\n          next(); // Check if a new token was parsed after unsuspension.\n\n          if (!parser.suspended && token) {\n            if (token instanceof _token.ColMetadataToken) {\n              parser.colMetadata = token.columns;\n            }\n            yield token;\n          }\n        }\n        while (!parser.suspended && parser.position + 1 <= parser.buffer.length) {\n          const type = parser.buffer.readUInt8(parser.position);\n          parser.position += 1;\n          if (type === _token.TYPE.COLMETADATA) {\n            const token = yield _awaitAsyncGenerator((0, _colmetadataTokenParser.default)(parser));\n            parser.colMetadata = token.columns;\n            yield token;\n          } else if (type === _token.TYPE.ROW) {\n            yield (0, _rowTokenParser.default)(parser);\n          } else if (type === _token.TYPE.NBCROW) {\n            yield (0, _nbcrowTokenParser.default)(parser);\n          } else if (tokenParsers[type]) {\n            tokenParsers[type](parser, parser.options, onDoneParsing); // Check if a new token was parsed after unsuspension.\n\n            if (!parser.suspended && token) {\n              if (token instanceof _token.ColMetadataToken) {\n                parser.colMetadata = token.columns;\n              }\n              yield token;\n            }\n          } else {\n            throw new Error('Unknown type: ' + type);\n          }\n        }\n      }\n    })();\n  }\n  constructor(streamBuffer, debug, options) {\n    this.debug = void 0;\n    this.colMetadata = void 0;\n    this.options = void 0;\n    this.suspended = void 0;\n    this.next = void 0;\n    this.streamBuffer = void 0;\n    this.debug = debug;\n    this.colMetadata = [];\n    this.options = options;\n    this.streamBuffer = streamBuffer;\n    this.suspended = false;\n    this.next = undefined;\n  }\n  get buffer() {\n    return this.streamBuffer.buffer;\n  }\n  get position() {\n    return this.streamBuffer.position;\n  }\n  set position(value) {\n    this.streamBuffer.position = value;\n  }\n  suspend(next) {\n    this.suspended = true;\n    this.next = next;\n  }\n  awaitData(length, callback) {\n    if (this.position + length <= this.buffer.length) {\n      callback();\n    } else {\n      this.suspend(() => {\n        this.awaitData(length, callback);\n      });\n    }\n  }\n  readInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n  readUInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readUInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n  readInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n  readInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n  readUInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n  readUInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n  readInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n  readInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n  readUInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n  readUInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n  readBigInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readBigInt64LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n  readInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32LE(this.position + 4) + ((this.buffer[this.position + 4] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n  readInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32BE(this.position) + ((this.buffer[this.position] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n  readBigUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readBigUInt64LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n  readUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32LE(this.position + 4) + this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n  readUInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32BE(this.position) + this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n  readFloatLE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatLE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n  readFloatBE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatBE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n  readDoubleLE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleLE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n  readDoubleBE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleBE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n  readUInt24LE(callback) {\n    this.awaitData(3, () => {\n      const low = this.buffer.readUInt16LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 2);\n      this.position += 3;\n      callback(low | high << 16);\n    });\n  }\n  readUInt40LE(callback) {\n    this.awaitData(5, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 4);\n      this.position += 5;\n      callback(0x100000000 * high + low);\n    });\n  }\n  readUNumeric64LE(callback) {\n    this.awaitData(8, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt32LE(this.position + 4);\n      this.position += 8;\n      callback(0x100000000 * high + low);\n    });\n  }\n  readUNumeric96LE(callback) {\n    this.awaitData(12, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      this.position += 12;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3);\n    });\n  }\n  readUNumeric128LE(callback) {\n    this.awaitData(16, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      const dword4 = this.buffer.readUInt32LE(this.position + 12);\n      this.position += 16;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3 + 0x100000000 * 0x100000000 * 0x100000000 * dword4);\n    });\n  } // Variable length data\n\n  readBuffer(length, callback) {\n    this.awaitData(length, () => {\n      const data = this.buffer.slice(this.position, this.position + length);\n      this.position += length;\n      callback(data);\n    });\n  } // Read a Unicode String (BVARCHAR)\n\n  readBVarChar(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read a Unicode String (USVARCHAR)\n\n  readUsVarChar(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read binary data (BVARBYTE)\n\n  readBVarByte(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length, callback);\n    });\n  } // Read binary data (USVARBYTE)\n\n  readUsVarByte(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length, callback);\n    });\n  }\n}\nvar _default = Parser;\nexports.default = _default;\nmodule.exports = Parser;","map":{"version":3,"names":["_asyncToGenerator","require","default","_awaitAsyncGenerator","_wrapAsyncGenerator","Object","defineProperty","exports","value","_token","_colmetadataTokenParser","_interopRequireDefault","_doneTokenParser","_envChangeTokenParser","_infoerrorTokenParser","_fedauthInfoParser","_featureExtAckParser","_loginackTokenParser","_orderTokenParser","_returnstatusTokenParser","_returnvalueTokenParser","_rowTokenParser","_nbcrowTokenParser","_sspiTokenParser","obj","__esModule","tokenParsers","TYPE","DONE","doneParser","DONEINPROC","doneInProcParser","DONEPROC","doneProcParser","ENVCHANGE","ERROR","errorParser","FEDAUTHINFO","FEATUREEXTACK","INFO","infoParser","LOGINACK","ORDER","RETURNSTATUS","RETURNVALUE","SSPI","StreamBuffer","constructor","iterable","iterator","buffer","position","Symbol","asyncIterator","call","Buffer","alloc","waitForChunk","_this","result","next","done","Error","length","concat","slice","Parser","parseTokens","debug","options","colMetadata","token","onDoneParsing","t","streamBuffer","parser","err","suspended","ColMetadataToken","columns","type","readUInt8","COLMETADATA","ROW","NBCROW","undefined","suspend","awaitData","callback","readInt8","data","readInt16LE","readInt16BE","readUInt16LE","readUInt16BE","readInt32LE","readInt32BE","readUInt32LE","readUInt32BE","readBigInt64LE","readInt64LE","Math","pow","readInt64BE","readBigUInt64LE","readUInt64LE","readUInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","readUInt24LE","low","high","readUInt40LE","readUNumeric64LE","readUNumeric96LE","dword1","dword2","dword3","readUNumeric128LE","dword4","readBuffer","readBVarChar","toString","readUsVarChar","readBVarByte","readUsVarByte","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/token/stream-parser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nvar _colmetadataTokenParser = _interopRequireDefault(require(\"./colmetadata-token-parser\"));\n\nvar _doneTokenParser = require(\"./done-token-parser\");\n\nvar _envChangeTokenParser = _interopRequireDefault(require(\"./env-change-token-parser\"));\n\nvar _infoerrorTokenParser = require(\"./infoerror-token-parser\");\n\nvar _fedauthInfoParser = _interopRequireDefault(require(\"./fedauth-info-parser\"));\n\nvar _featureExtAckParser = _interopRequireDefault(require(\"./feature-ext-ack-parser\"));\n\nvar _loginackTokenParser = _interopRequireDefault(require(\"./loginack-token-parser\"));\n\nvar _orderTokenParser = _interopRequireDefault(require(\"./order-token-parser\"));\n\nvar _returnstatusTokenParser = _interopRequireDefault(require(\"./returnstatus-token-parser\"));\n\nvar _returnvalueTokenParser = _interopRequireDefault(require(\"./returnvalue-token-parser\"));\n\nvar _rowTokenParser = _interopRequireDefault(require(\"./row-token-parser\"));\n\nvar _nbcrowTokenParser = _interopRequireDefault(require(\"./nbcrow-token-parser\"));\n\nvar _sspiTokenParser = _interopRequireDefault(require(\"./sspi-token-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst tokenParsers = {\n  [_token.TYPE.DONE]: _doneTokenParser.doneParser,\n  [_token.TYPE.DONEINPROC]: _doneTokenParser.doneInProcParser,\n  [_token.TYPE.DONEPROC]: _doneTokenParser.doneProcParser,\n  [_token.TYPE.ENVCHANGE]: _envChangeTokenParser.default,\n  [_token.TYPE.ERROR]: _infoerrorTokenParser.errorParser,\n  [_token.TYPE.FEDAUTHINFO]: _fedauthInfoParser.default,\n  [_token.TYPE.FEATUREEXTACK]: _featureExtAckParser.default,\n  [_token.TYPE.INFO]: _infoerrorTokenParser.infoParser,\n  [_token.TYPE.LOGINACK]: _loginackTokenParser.default,\n  [_token.TYPE.ORDER]: _orderTokenParser.default,\n  [_token.TYPE.RETURNSTATUS]: _returnstatusTokenParser.default,\n  [_token.TYPE.RETURNVALUE]: _returnvalueTokenParser.default,\n  [_token.TYPE.SSPI]: _sspiTokenParser.default\n};\n\nclass StreamBuffer {\n  constructor(iterable) {\n    this.iterator = void 0;\n    this.buffer = void 0;\n    this.position = void 0;\n    this.iterator = (iterable[Symbol.asyncIterator] || iterable[Symbol.iterator]).call(iterable);\n    this.buffer = Buffer.alloc(0);\n    this.position = 0;\n  }\n\n  async waitForChunk() {\n    const result = await this.iterator.next();\n\n    if (result.done) {\n      throw new Error('unexpected end of data');\n    }\n\n    if (this.position === this.buffer.length) {\n      this.buffer = result.value;\n    } else {\n      this.buffer = Buffer.concat([this.buffer.slice(this.position), result.value]);\n    }\n\n    this.position = 0;\n  }\n\n}\n\nclass Parser {\n  static async *parseTokens(iterable, debug, options, colMetadata = []) {\n    let token;\n\n    const onDoneParsing = t => {\n      token = t;\n    };\n\n    const streamBuffer = new StreamBuffer(iterable);\n    const parser = new Parser(streamBuffer, debug, options);\n    parser.colMetadata = colMetadata;\n\n    while (true) {\n      try {\n        await streamBuffer.waitForChunk();\n      } catch (err) {\n        if (streamBuffer.position === streamBuffer.buffer.length) {\n          return;\n        }\n\n        throw err;\n      }\n\n      if (parser.suspended) {\n        // Unsuspend and continue from where ever we left off.\n        parser.suspended = false;\n        const next = parser.next;\n        next(); // Check if a new token was parsed after unsuspension.\n\n        if (!parser.suspended && token) {\n          if (token instanceof _token.ColMetadataToken) {\n            parser.colMetadata = token.columns;\n          }\n\n          yield token;\n        }\n      }\n\n      while (!parser.suspended && parser.position + 1 <= parser.buffer.length) {\n        const type = parser.buffer.readUInt8(parser.position);\n        parser.position += 1;\n\n        if (type === _token.TYPE.COLMETADATA) {\n          const token = await (0, _colmetadataTokenParser.default)(parser);\n          parser.colMetadata = token.columns;\n          yield token;\n        } else if (type === _token.TYPE.ROW) {\n          yield (0, _rowTokenParser.default)(parser);\n        } else if (type === _token.TYPE.NBCROW) {\n          yield (0, _nbcrowTokenParser.default)(parser);\n        } else if (tokenParsers[type]) {\n          tokenParsers[type](parser, parser.options, onDoneParsing); // Check if a new token was parsed after unsuspension.\n\n          if (!parser.suspended && token) {\n            if (token instanceof _token.ColMetadataToken) {\n              parser.colMetadata = token.columns;\n            }\n\n            yield token;\n          }\n        } else {\n          throw new Error('Unknown type: ' + type);\n        }\n      }\n    }\n  }\n\n  constructor(streamBuffer, debug, options) {\n    this.debug = void 0;\n    this.colMetadata = void 0;\n    this.options = void 0;\n    this.suspended = void 0;\n    this.next = void 0;\n    this.streamBuffer = void 0;\n    this.debug = debug;\n    this.colMetadata = [];\n    this.options = options;\n    this.streamBuffer = streamBuffer;\n    this.suspended = false;\n    this.next = undefined;\n  }\n\n  get buffer() {\n    return this.streamBuffer.buffer;\n  }\n\n  get position() {\n    return this.streamBuffer.position;\n  }\n\n  set position(value) {\n    this.streamBuffer.position = value;\n  }\n\n  suspend(next) {\n    this.suspended = true;\n    this.next = next;\n  }\n\n  awaitData(length, callback) {\n    if (this.position + length <= this.buffer.length) {\n      callback();\n    } else {\n      this.suspend(() => {\n        this.awaitData(length, callback);\n      });\n    }\n  }\n\n  readInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readUInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readUInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readBigInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readBigInt64LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32LE(this.position + 4) + ((this.buffer[this.position + 4] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32BE(this.position) + ((this.buffer[this.position] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readBigUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readBigUInt64LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32LE(this.position + 4) + this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32BE(this.position) + this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readFloatLE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatLE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readFloatBE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatBE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readDoubleLE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleLE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readDoubleBE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleBE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt24LE(callback) {\n    this.awaitData(3, () => {\n      const low = this.buffer.readUInt16LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 2);\n      this.position += 3;\n      callback(low | high << 16);\n    });\n  }\n\n  readUInt40LE(callback) {\n    this.awaitData(5, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 4);\n      this.position += 5;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric64LE(callback) {\n    this.awaitData(8, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt32LE(this.position + 4);\n      this.position += 8;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric96LE(callback) {\n    this.awaitData(12, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      this.position += 12;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3);\n    });\n  }\n\n  readUNumeric128LE(callback) {\n    this.awaitData(16, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      const dword4 = this.buffer.readUInt32LE(this.position + 12);\n      this.position += 16;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3 + 0x100000000 * 0x100000000 * 0x100000000 * dword4);\n    });\n  } // Variable length data\n\n\n  readBuffer(length, callback) {\n    this.awaitData(length, () => {\n      const data = this.buffer.slice(this.position, this.position + length);\n      this.position += length;\n      callback(data);\n    });\n  } // Read a Unicode String (BVARCHAR)\n\n\n  readBVarChar(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read a Unicode String (USVARCHAR)\n\n\n  readUsVarChar(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read binary data (BVARBYTE)\n\n\n  readBVarByte(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length, callback);\n    });\n  } // Read binary data (USVARBYTE)\n\n\n  readUsVarByte(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length, callback);\n    });\n  }\n\n}\n\nvar _default = Parser;\nexports.default = _default;\nmodule.exports = Parser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}