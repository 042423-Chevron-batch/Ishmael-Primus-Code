{"ast":null,"code":"/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { Authority } from './Authority.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar AuthorityFactory = /** @class */function () {\n  function AuthorityFactory() {}\n  /**\r\n   * Create an authority object of the correct type based on the url\r\n   * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n   *\r\n   * Also performs endpoint discovery.\r\n   *\r\n   * @param authorityUri\r\n   * @param networkClient\r\n   * @param protocolMode\r\n   */\n  AuthorityFactory.createDiscoveredInstance = function (authorityUri, networkClient, cacheManager, authorityOptions, proxyUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      var acquireTokenAuthority, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            acquireTokenAuthority = AuthorityFactory.createInstance(authorityUri, networkClient, cacheManager, authorityOptions, proxyUrl);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\n          case 2:\n            _a.sent();\n            return [2 /*return*/, acquireTokenAuthority];\n          case 3:\n            e_1 = _a.sent();\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Create an authority object of the correct type based on the url\r\n   * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n   *\r\n   * Does not perform endpoint discovery.\r\n   *\r\n   * @param authorityUrl\r\n   * @param networkInterface\r\n   * @param protocolMode\r\n   */\n  AuthorityFactory.createInstance = function (authorityUrl, networkInterface, cacheManager, authorityOptions, proxyUrl) {\n    // Throw error if authority url is empty\n    if (StringUtils.isEmpty(authorityUrl)) {\n      throw ClientConfigurationError.createUrlEmptyError();\n    }\n    return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions, proxyUrl);\n  };\n  return AuthorityFactory;\n}();\nexport { AuthorityFactory };","map":{"version":3,"names":["__awaiter","__generator","Authority","ClientConfigurationError","StringUtils","ClientAuthError","AuthorityFactory","createDiscoveredInstance","authorityUri","networkClient","cacheManager","authorityOptions","proxyUrl","acquireTokenAuthority","e_1","_a","label","createInstance","trys","push","resolveEndpointsAsync","sent","createEndpointDiscoveryIncompleteError","authorityUrl","networkInterface","isEmpty","createUrlEmptyError"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-common/dist/authority/AuthorityFactory.js"],"sourcesContent":["/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { Authority } from './Authority.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Also performs endpoint discovery.\r\n     *\r\n     * @param authorityUri\r\n     * @param networkClient\r\n     * @param protocolMode\r\n     */\r\n    AuthorityFactory.createDiscoveredInstance = function (authorityUri, networkClient, cacheManager, authorityOptions, proxyUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = AuthorityFactory.createInstance(authorityUri, networkClient, cacheManager, authorityOptions, proxyUrl);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, acquireTokenAuthority];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Does not perform endpoint discovery.\r\n     *\r\n     * @param authorityUrl\r\n     * @param networkInterface\r\n     * @param protocolMode\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface, cacheManager, authorityOptions, proxyUrl) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions, proxyUrl);\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\nexport { AuthorityFactory };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,EAAEC,WAAW,QAAQ,uBAAuB;AAC9D,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,wBAAwB,QAAQ,sCAAsC;AAC/E,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,eAAe,QAAQ,6BAA6B;;AAE7D;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,aAAe,YAAY;EAC9C,SAASA,gBAAgBA,CAAA,EAAG,CAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,gBAAgB,CAACC,wBAAwB,GAAG,UAAUC,YAAY,EAAEC,aAAa,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,QAAQ,EAAE;IACzH,OAAOZ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIa,qBAAqB,EAAEC,GAAG;MAC9B,OAAOb,WAAW,CAAC,IAAI,EAAE,UAAUc,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACFH,qBAAqB,GAAGP,gBAAgB,CAACW,cAAc,CAACT,YAAY,EAAEC,aAAa,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,QAAQ,CAAC;YAC9HG,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFD,EAAE,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAWN,qBAAqB,CAACO,qBAAqB,EAAE,CAAC;UACvE,KAAK,CAAC;YACFL,EAAE,CAACM,IAAI,EAAE;YACT,OAAO,CAAC,CAAC,CAAC,YAAYR,qBAAqB,CAAC;UAChD,KAAK,CAAC;YACFC,GAAG,GAAGC,EAAE,CAACM,IAAI,EAAE;YACf,MAAMhB,eAAe,CAACiB,sCAAsC,CAACR,GAAG,CAAC;UACrE,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QAAC;MAEtC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIR,gBAAgB,CAACW,cAAc,GAAG,UAAUM,YAAY,EAAEC,gBAAgB,EAAEd,YAAY,EAAEC,gBAAgB,EAAEC,QAAQ,EAAE;IAClH;IACA,IAAIR,WAAW,CAACqB,OAAO,CAACF,YAAY,CAAC,EAAE;MACnC,MAAMpB,wBAAwB,CAACuB,mBAAmB,EAAE;IACxD;IACA,OAAO,IAAIxB,SAAS,CAACqB,YAAY,EAAEC,gBAAgB,EAAEd,YAAY,EAAEC,gBAAgB,EAAEC,QAAQ,CAAC;EAClG,CAAC;EACD,OAAON,gBAAgB;AAC3B,CAAC,EAAG;AAEJ,SAASA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}