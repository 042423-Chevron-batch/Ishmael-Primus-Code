{"ast":null,"code":"/*! @azure/msal-common v13.1.0 2023-06-07 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { ThrottlingUtils } from './ThrottlingUtils.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar NetworkManager = /** @class */function () {\n  function NetworkManager(networkClient, cacheManager) {\n    this.networkClient = networkClient;\n    this.cacheManager = cacheManager;\n  }\n  /**\r\n   * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n   * @param thumbprint\r\n   * @param tokenEndpoint\r\n   * @param options\r\n   */\n  NetworkManager.prototype.sendPostRequest = function (thumbprint, tokenEndpoint, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, options)];\n          case 2:\n            response = _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _a.sent();\n            if (e_1 instanceof AuthError) {\n              throw e_1;\n            } else {\n              throw ClientAuthError.createNetworkError(tokenEndpoint, e_1);\n            }\n          case 4:\n            ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  return NetworkManager;\n}();\nexport { NetworkManager };","map":{"version":3,"names":["__awaiter","__generator","ThrottlingUtils","AuthError","ClientAuthError","NetworkManager","networkClient","cacheManager","prototype","sendPostRequest","thumbprint","tokenEndpoint","options","response","e_1","_a","label","preProcess","trys","push","sendPostRequestAsync","sent","createNetworkError","postProcess"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/node_modules/@azure/msal-common/dist/network/NetworkManager.js"],"sourcesContent":["/*! @azure/msal-common v13.1.0 2023-06-07 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { ThrottlingUtils } from './ThrottlingUtils.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar NetworkManager = /** @class */ (function () {\r\n    function NetworkManager(networkClient, cacheManager) {\r\n        this.networkClient = networkClient;\r\n        this.cacheManager = cacheManager;\r\n    }\r\n    /**\r\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n     * @param thumbprint\r\n     * @param tokenEndpoint\r\n     * @param options\r\n     */\r\n    NetworkManager.prototype.sendPostRequest = function (thumbprint, tokenEndpoint, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, options)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        if (e_1 instanceof AuthError) {\r\n                            throw e_1;\r\n                        }\r\n                        else {\r\n                            throw ClientAuthError.createNetworkError(tokenEndpoint, e_1);\r\n                        }\r\n                    case 4:\r\n                        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return NetworkManager;\r\n}());\n\nexport { NetworkManager };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,EAAEC,WAAW,QAAQ,uBAAuB;AAC9D,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,eAAe,QAAQ,6BAA6B;;AAE7D;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAG,aAAe,YAAY;EAC5C,SAASA,cAAcA,CAACC,aAAa,EAAEC,YAAY,EAAE;IACjD,IAAI,CAACD,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,YAAY,GAAGA,YAAY;EACpC;EACA;AACJ;AACA;AACA;AACA;AACA;EACIF,cAAc,CAACG,SAAS,CAACC,eAAe,GAAG,UAAUC,UAAU,EAAEC,aAAa,EAAEC,OAAO,EAAE;IACrF,OAAOZ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIa,QAAQ,EAAEC,GAAG;MACjB,OAAOb,WAAW,CAAC,IAAI,EAAE,UAAUc,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACFd,eAAe,CAACe,UAAU,CAAC,IAAI,CAACV,YAAY,EAAEG,UAAU,CAAC;YACzDK,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFD,EAAE,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACb,aAAa,CAACc,oBAAoB,CAACT,aAAa,EAAEC,OAAO,CAAC,CAAC;UACzF,KAAK,CAAC;YACFC,QAAQ,GAAGE,EAAE,CAACM,IAAI,EAAE;YACpB,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YACFP,GAAG,GAAGC,EAAE,CAACM,IAAI,EAAE;YACf,IAAIP,GAAG,YAAYX,SAAS,EAAE;cAC1B,MAAMW,GAAG;YACb,CAAC,MACI;cACD,MAAMV,eAAe,CAACkB,kBAAkB,CAACX,aAAa,EAAEG,GAAG,CAAC;YAChE;UACJ,KAAK,CAAC;YACFZ,eAAe,CAACqB,WAAW,CAAC,IAAI,CAAChB,YAAY,EAAEG,UAAU,EAAEG,QAAQ,CAAC;YACpE,OAAO,CAAC,CAAC,CAAC,YAAYA,QAAQ,CAAC;QAAC;MAE5C,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,OAAOR,cAAc;AACzB,CAAC,EAAG;AAEJ,SAASA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}