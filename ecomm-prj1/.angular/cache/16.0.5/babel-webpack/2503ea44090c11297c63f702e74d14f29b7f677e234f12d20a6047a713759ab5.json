{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _collation = require(\"../collation\");\nvar _token = require(\"./token\");\nconst types = {\n  1: {\n    name: 'DATABASE',\n    event: 'databaseChange'\n  },\n  2: {\n    name: 'LANGUAGE',\n    event: 'languageChange'\n  },\n  3: {\n    name: 'CHARSET',\n    event: 'charsetChange'\n  },\n  4: {\n    name: 'PACKET_SIZE',\n    event: 'packetSizeChange'\n  },\n  7: {\n    name: 'SQL_COLLATION',\n    event: 'sqlCollationChange'\n  },\n  8: {\n    name: 'BEGIN_TXN',\n    event: 'beginTransaction'\n  },\n  9: {\n    name: 'COMMIT_TXN',\n    event: 'commitTransaction'\n  },\n  10: {\n    name: 'ROLLBACK_TXN',\n    event: 'rollbackTransaction'\n  },\n  13: {\n    name: 'DATABASE_MIRRORING_PARTNER',\n    event: 'partnerNode'\n  },\n  17: {\n    name: 'TXN_ENDED'\n  },\n  18: {\n    name: 'RESET_CONNECTION',\n    event: 'resetConnection'\n  },\n  20: {\n    name: 'ROUTING_CHANGE',\n    event: 'routingChange'\n  }\n};\nfunction readNewAndOldValue(parser, length, type, callback) {\n  switch (type.name) {\n    case 'DATABASE':\n    case 'LANGUAGE':\n    case 'CHARSET':\n    case 'PACKET_SIZE':\n    case 'DATABASE_MIRRORING_PARTNER':\n      return parser.readBVarChar(newValue => {\n        parser.readBVarChar(oldValue => {\n          switch (type.name) {\n            case 'PACKET_SIZE':\n              return callback(new _token.PacketSizeEnvChangeToken(parseInt(newValue), parseInt(oldValue)));\n            case 'DATABASE':\n              return callback(new _token.DatabaseEnvChangeToken(newValue, oldValue));\n            case 'LANGUAGE':\n              return callback(new _token.LanguageEnvChangeToken(newValue, oldValue));\n            case 'CHARSET':\n              return callback(new _token.CharsetEnvChangeToken(newValue, oldValue));\n            case 'DATABASE_MIRRORING_PARTNER':\n              return callback(new _token.DatabaseMirroringPartnerEnvChangeToken(newValue, oldValue));\n          }\n        });\n      });\n    case 'SQL_COLLATION':\n    case 'BEGIN_TXN':\n    case 'COMMIT_TXN':\n    case 'ROLLBACK_TXN':\n    case 'RESET_CONNECTION':\n      return parser.readBVarByte(newValue => {\n        parser.readBVarByte(oldValue => {\n          switch (type.name) {\n            case 'SQL_COLLATION':\n              {\n                const newCollation = newValue.length ? _collation.Collation.fromBuffer(newValue) : undefined;\n                const oldCollation = oldValue.length ? _collation.Collation.fromBuffer(oldValue) : undefined;\n                return callback(new _token.CollationChangeToken(newCollation, oldCollation));\n              }\n            case 'BEGIN_TXN':\n              return callback(new _token.BeginTransactionEnvChangeToken(newValue, oldValue));\n            case 'COMMIT_TXN':\n              return callback(new _token.CommitTransactionEnvChangeToken(newValue, oldValue));\n            case 'ROLLBACK_TXN':\n              return callback(new _token.RollbackTransactionEnvChangeToken(newValue, oldValue));\n            case 'RESET_CONNECTION':\n              return callback(new _token.ResetConnectionEnvChangeToken(newValue, oldValue));\n          }\n        });\n      });\n    case 'ROUTING_CHANGE':\n      return parser.readUInt16LE(valueLength => {\n        // Routing Change:\n        // Byte 1: Protocol (must be 0)\n        // Bytes 2-3 (USHORT): Port number\n        // Bytes 4-5 (USHORT): Length of server data in unicode (2byte chars)\n        // Bytes 6-*: Server name in unicode characters\n        parser.readBuffer(valueLength, routePacket => {\n          const protocol = routePacket.readUInt8(0);\n          if (protocol !== 0) {\n            throw new Error('Unknown protocol byte in routing change event');\n          }\n          const port = routePacket.readUInt16LE(1);\n          const serverLen = routePacket.readUInt16LE(3); // 2 bytes per char, starting at offset 5\n\n          const server = routePacket.toString('ucs2', 5, 5 + serverLen * 2);\n          const newValue = {\n            protocol: protocol,\n            port: port,\n            server: server\n          };\n          parser.readUInt16LE(oldValueLength => {\n            parser.readBuffer(oldValueLength, oldValue => {\n              callback(new _token.RoutingEnvChangeToken(newValue, oldValue));\n            });\n          });\n        });\n      });\n    default:\n      console.error('Tedious > Unsupported ENVCHANGE type ' + type.name); // skip unknown bytes\n\n      parser.readBuffer(length - 1, () => {\n        callback(undefined);\n      });\n  }\n}\nfunction envChangeParser(parser, _options, callback) {\n  parser.readUInt16LE(length => {\n    parser.readUInt8(typeNumber => {\n      const type = types[typeNumber];\n      if (!type) {\n        console.error('Tedious > Unsupported ENVCHANGE type ' + typeNumber); // skip unknown bytes\n\n        return parser.readBuffer(length - 1, () => {\n          callback(undefined);\n        });\n      }\n      readNewAndOldValue(parser, length, type, token => {\n        callback(token);\n      });\n    });\n  });\n}\nvar _default = envChangeParser;\nexports.default = _default;\nmodule.exports = envChangeParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_collation","require","_token","types","name","event","readNewAndOldValue","parser","length","type","callback","readBVarChar","newValue","oldValue","PacketSizeEnvChangeToken","parseInt","DatabaseEnvChangeToken","LanguageEnvChangeToken","CharsetEnvChangeToken","DatabaseMirroringPartnerEnvChangeToken","readBVarByte","newCollation","Collation","fromBuffer","undefined","oldCollation","CollationChangeToken","BeginTransactionEnvChangeToken","CommitTransactionEnvChangeToken","RollbackTransactionEnvChangeToken","ResetConnectionEnvChangeToken","readUInt16LE","valueLength","readBuffer","routePacket","protocol","readUInt8","Error","port","serverLen","server","toString","oldValueLength","RoutingEnvChangeToken","console","error","envChangeParser","_options","typeNumber","token","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/token/env-change-token-parser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _collation = require(\"../collation\");\n\nvar _token = require(\"./token\");\n\nconst types = {\n  1: {\n    name: 'DATABASE',\n    event: 'databaseChange'\n  },\n  2: {\n    name: 'LANGUAGE',\n    event: 'languageChange'\n  },\n  3: {\n    name: 'CHARSET',\n    event: 'charsetChange'\n  },\n  4: {\n    name: 'PACKET_SIZE',\n    event: 'packetSizeChange'\n  },\n  7: {\n    name: 'SQL_COLLATION',\n    event: 'sqlCollationChange'\n  },\n  8: {\n    name: 'BEGIN_TXN',\n    event: 'beginTransaction'\n  },\n  9: {\n    name: 'COMMIT_TXN',\n    event: 'commitTransaction'\n  },\n  10: {\n    name: 'ROLLBACK_TXN',\n    event: 'rollbackTransaction'\n  },\n  13: {\n    name: 'DATABASE_MIRRORING_PARTNER',\n    event: 'partnerNode'\n  },\n  17: {\n    name: 'TXN_ENDED'\n  },\n  18: {\n    name: 'RESET_CONNECTION',\n    event: 'resetConnection'\n  },\n  20: {\n    name: 'ROUTING_CHANGE',\n    event: 'routingChange'\n  }\n};\n\nfunction readNewAndOldValue(parser, length, type, callback) {\n  switch (type.name) {\n    case 'DATABASE':\n    case 'LANGUAGE':\n    case 'CHARSET':\n    case 'PACKET_SIZE':\n    case 'DATABASE_MIRRORING_PARTNER':\n      return parser.readBVarChar(newValue => {\n        parser.readBVarChar(oldValue => {\n          switch (type.name) {\n            case 'PACKET_SIZE':\n              return callback(new _token.PacketSizeEnvChangeToken(parseInt(newValue), parseInt(oldValue)));\n\n            case 'DATABASE':\n              return callback(new _token.DatabaseEnvChangeToken(newValue, oldValue));\n\n            case 'LANGUAGE':\n              return callback(new _token.LanguageEnvChangeToken(newValue, oldValue));\n\n            case 'CHARSET':\n              return callback(new _token.CharsetEnvChangeToken(newValue, oldValue));\n\n            case 'DATABASE_MIRRORING_PARTNER':\n              return callback(new _token.DatabaseMirroringPartnerEnvChangeToken(newValue, oldValue));\n          }\n        });\n      });\n\n    case 'SQL_COLLATION':\n    case 'BEGIN_TXN':\n    case 'COMMIT_TXN':\n    case 'ROLLBACK_TXN':\n    case 'RESET_CONNECTION':\n      return parser.readBVarByte(newValue => {\n        parser.readBVarByte(oldValue => {\n          switch (type.name) {\n            case 'SQL_COLLATION':\n              {\n                const newCollation = newValue.length ? _collation.Collation.fromBuffer(newValue) : undefined;\n                const oldCollation = oldValue.length ? _collation.Collation.fromBuffer(oldValue) : undefined;\n                return callback(new _token.CollationChangeToken(newCollation, oldCollation));\n              }\n\n            case 'BEGIN_TXN':\n              return callback(new _token.BeginTransactionEnvChangeToken(newValue, oldValue));\n\n            case 'COMMIT_TXN':\n              return callback(new _token.CommitTransactionEnvChangeToken(newValue, oldValue));\n\n            case 'ROLLBACK_TXN':\n              return callback(new _token.RollbackTransactionEnvChangeToken(newValue, oldValue));\n\n            case 'RESET_CONNECTION':\n              return callback(new _token.ResetConnectionEnvChangeToken(newValue, oldValue));\n          }\n        });\n      });\n\n    case 'ROUTING_CHANGE':\n      return parser.readUInt16LE(valueLength => {\n        // Routing Change:\n        // Byte 1: Protocol (must be 0)\n        // Bytes 2-3 (USHORT): Port number\n        // Bytes 4-5 (USHORT): Length of server data in unicode (2byte chars)\n        // Bytes 6-*: Server name in unicode characters\n        parser.readBuffer(valueLength, routePacket => {\n          const protocol = routePacket.readUInt8(0);\n\n          if (protocol !== 0) {\n            throw new Error('Unknown protocol byte in routing change event');\n          }\n\n          const port = routePacket.readUInt16LE(1);\n          const serverLen = routePacket.readUInt16LE(3); // 2 bytes per char, starting at offset 5\n\n          const server = routePacket.toString('ucs2', 5, 5 + serverLen * 2);\n          const newValue = {\n            protocol: protocol,\n            port: port,\n            server: server\n          };\n          parser.readUInt16LE(oldValueLength => {\n            parser.readBuffer(oldValueLength, oldValue => {\n              callback(new _token.RoutingEnvChangeToken(newValue, oldValue));\n            });\n          });\n        });\n      });\n\n    default:\n      console.error('Tedious > Unsupported ENVCHANGE type ' + type.name); // skip unknown bytes\n\n      parser.readBuffer(length - 1, () => {\n        callback(undefined);\n      });\n  }\n}\n\nfunction envChangeParser(parser, _options, callback) {\n  parser.readUInt16LE(length => {\n    parser.readUInt8(typeNumber => {\n      const type = types[typeNumber];\n\n      if (!type) {\n        console.error('Tedious > Unsupported ENVCHANGE type ' + typeNumber); // skip unknown bytes\n\n        return parser.readBuffer(length - 1, () => {\n          callback(undefined);\n        });\n      }\n\n      readNewAndOldValue(parser, length, type, token => {\n        callback(token);\n      });\n    });\n  });\n}\n\nvar _default = envChangeParser;\nexports.default = _default;\nmodule.exports = envChangeParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}