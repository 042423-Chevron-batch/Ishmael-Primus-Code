{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar BrowserPerformanceMeasurement = /** @class */function () {\n  function BrowserPerformanceMeasurement(name, correlationId) {\n    this.correlationId = correlationId;\n    this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\n    this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\n    this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\n  }\n  BrowserPerformanceMeasurement.makeMeasureName = function (name, correlationId) {\n    return \"msal.measure.\" + name + \".\" + correlationId;\n  };\n  BrowserPerformanceMeasurement.makeStartMark = function (name, correlationId) {\n    return \"msal.start.\" + name + \".\" + correlationId;\n  };\n  BrowserPerformanceMeasurement.makeEndMark = function (name, correlationId) {\n    return \"msal.end.\" + name + \".\" + correlationId;\n  };\n  BrowserPerformanceMeasurement.supportsBrowserPerformance = function () {\n    return typeof window !== \"undefined\" && typeof window.performance !== \"undefined\" && typeof window.performance.mark === \"function\" && typeof window.performance.measure === \"function\" && typeof window.performance.clearMarks === \"function\" && typeof window.performance.clearMeasures === \"function\" && typeof window.performance.getEntriesByName === \"function\";\n  };\n  /**\r\n   * Flush browser marks and measurements.\r\n   * @param {string} correlationId\r\n   * @param {SubMeasurement} measurements\r\n   */\n  BrowserPerformanceMeasurement.flushMeasurements = function (correlationId, measurements) {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        measurements.forEach(function (measurement) {\n          var measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\n          var entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\n          if (entriesForMeasurement.length > 0) {\n            window.performance.clearMeasures(measureName);\n            window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\n            window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\n          }\n        });\n      } catch (e) {\n        // Silently catch and return null\n      }\n    }\n  };\n  BrowserPerformanceMeasurement.prototype.startMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        window.performance.mark(this.startMark);\n      } catch (e) {\n        // Silently catch\n      }\n    }\n  };\n  BrowserPerformanceMeasurement.prototype.endMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        window.performance.mark(this.endMark);\n        window.performance.measure(this.measureName, this.startMark, this.endMark);\n      } catch (e) {\n        // Silently catch\n      }\n    }\n  };\n  BrowserPerformanceMeasurement.prototype.flushMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        var entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n        if (entriesForMeasurement.length > 0) {\n          var durationMs = entriesForMeasurement[0].duration;\n          window.performance.clearMeasures(this.measureName);\n          window.performance.clearMarks(this.startMark);\n          window.performance.clearMarks(this.endMark);\n          return durationMs;\n        }\n      } catch (e) {\n        // Silently catch and return null\n      }\n    }\n    return null;\n  };\n  return BrowserPerformanceMeasurement;\n}();\nexport { BrowserPerformanceMeasurement };","map":{"version":3,"names":["BrowserPerformanceMeasurement","name","correlationId","measureName","makeMeasureName","startMark","makeStartMark","endMark","makeEndMark","supportsBrowserPerformance","window","performance","mark","measure","clearMarks","clearMeasures","getEntriesByName","flushMeasurements","measurements","forEach","measurement","entriesForMeasurement","length","e","prototype","startMeasurement","endMeasurement","flushMeasurement","durationMs","duration"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar BrowserPerformanceMeasurement = /** @class */ (function () {\r\n    function BrowserPerformanceMeasurement(name, correlationId) {\r\n        this.correlationId = correlationId;\r\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\r\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\r\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\r\n    }\r\n    BrowserPerformanceMeasurement.makeMeasureName = function (name, correlationId) {\r\n        return \"msal.measure.\" + name + \".\" + correlationId;\r\n    };\r\n    BrowserPerformanceMeasurement.makeStartMark = function (name, correlationId) {\r\n        return \"msal.start.\" + name + \".\" + correlationId;\r\n    };\r\n    BrowserPerformanceMeasurement.makeEndMark = function (name, correlationId) {\r\n        return \"msal.end.\" + name + \".\" + correlationId;\r\n    };\r\n    BrowserPerformanceMeasurement.supportsBrowserPerformance = function () {\r\n        return typeof window !== \"undefined\" &&\r\n            typeof window.performance !== \"undefined\" &&\r\n            typeof window.performance.mark === \"function\" &&\r\n            typeof window.performance.measure === \"function\" &&\r\n            typeof window.performance.clearMarks === \"function\" &&\r\n            typeof window.performance.clearMeasures === \"function\" &&\r\n            typeof window.performance.getEntriesByName === \"function\";\r\n    };\r\n    /**\r\n     * Flush browser marks and measurements.\r\n     * @param {string} correlationId\r\n     * @param {SubMeasurement} measurements\r\n     */\r\n    BrowserPerformanceMeasurement.flushMeasurements = function (correlationId, measurements) {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                measurements.forEach(function (measurement) {\r\n                    var measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\r\n                    var entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\r\n                    if (entriesForMeasurement.length > 0) {\r\n                        window.performance.clearMeasures(measureName);\r\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\r\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n    };\r\n    BrowserPerformanceMeasurement.prototype.startMeasurement = function () {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.startMark);\r\n            }\r\n            catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    };\r\n    BrowserPerformanceMeasurement.prototype.endMeasurement = function () {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.endMark);\r\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\r\n            }\r\n            catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    };\r\n    BrowserPerformanceMeasurement.prototype.flushMeasurement = function () {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                var entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\r\n                if (entriesForMeasurement.length > 0) {\r\n                    var durationMs = entriesForMeasurement[0].duration;\r\n                    window.performance.clearMeasures(this.measureName);\r\n                    window.performance.clearMarks(this.startMark);\r\n                    window.performance.clearMarks(this.endMark);\r\n                    return durationMs;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return BrowserPerformanceMeasurement;\r\n}());\n\nexport { BrowserPerformanceMeasurement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}