{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst MAX = (1 << 16) - 1;\nconst UNKNOWN_PLP_LEN = Buffer.from([0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]);\nconst PLP_TERMINATOR = Buffer.from([0x00, 0x00, 0x00, 0x00]);\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst MAX_NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);\nconst VarBinary = {\n  id: 0xA5,\n  type: 'BIGVARBIN',\n  name: 'VarBinary',\n  maximumLength: 8000,\n  declaration: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    let length;\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n    if (length <= this.maximumLength) {\n      return 'varbinary(' + length + ')';\n    } else {\n      return 'varbinary(max)';\n    }\n  },\n  resolveLength: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (value != null) {\n      return value.length;\n    } else {\n      return this.maximumLength;\n    }\n  },\n  generateTypeInfo: function (parameter) {\n    const buffer = Buffer.alloc(3);\n    buffer.writeUInt8(this.id, 0);\n    if (parameter.length <= this.maximumLength) {\n      buffer.writeUInt16LE(parameter.length, 1);\n    } else {\n      buffer.writeUInt16LE(MAX, 1);\n    }\n    return buffer;\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      if (parameter.length <= this.maximumLength) {\n        return NULL_LENGTH;\n      } else {\n        return MAX_NULL_LENGTH;\n      }\n    }\n    let value = parameter.value;\n    if (!Buffer.isBuffer(value)) {\n      value = value.toString();\n    }\n    const length = Buffer.byteLength(value, 'ucs2');\n    if (parameter.length <= this.maximumLength) {\n      const buffer = Buffer.alloc(2);\n      buffer.writeUInt16LE(length, 0);\n      return buffer;\n    } else {\n      // writePLPBody\n      return UNKNOWN_PLP_LEN;\n    }\n  },\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n    let value = parameter.value;\n    if (parameter.length <= this.maximumLength) {\n      if (Buffer.isBuffer(value)) {\n        yield value;\n      } else {\n        yield Buffer.from(value.toString(), 'ucs2');\n      }\n    } else {\n      // writePLPBody\n      if (!Buffer.isBuffer(value)) {\n        value = value.toString();\n      }\n      const length = Buffer.byteLength(value, 'ucs2');\n      if (length > 0) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeUInt32LE(length, 0);\n        yield buffer;\n        if (Buffer.isBuffer(value)) {\n          yield value;\n        } else {\n          yield Buffer.from(value, 'ucs2');\n        }\n      }\n      yield PLP_TERMINATOR;\n    }\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n    return value;\n  }\n};\nvar _default = VarBinary;\nexports.default = _default;\nmodule.exports = VarBinary;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","MAX","UNKNOWN_PLP_LEN","Buffer","from","PLP_TERMINATOR","NULL_LENGTH","MAX_NULL_LENGTH","VarBinary","id","type","name","maximumLength","declaration","parameter","length","output","resolveLength","generateTypeInfo","buffer","alloc","writeUInt8","writeUInt16LE","generateParameterLength","options","isBuffer","toString","byteLength","generateParameterData","writeUInt32LE","validate","TypeError","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/data-types/varbinary.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst MAX = (1 << 16) - 1;\nconst UNKNOWN_PLP_LEN = Buffer.from([0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]);\nconst PLP_TERMINATOR = Buffer.from([0x00, 0x00, 0x00, 0x00]);\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst MAX_NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);\nconst VarBinary = {\n  id: 0xA5,\n  type: 'BIGVARBIN',\n  name: 'VarBinary',\n  maximumLength: 8000,\n  declaration: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    let length;\n\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    if (length <= this.maximumLength) {\n      return 'varbinary(' + length + ')';\n    } else {\n      return 'varbinary(max)';\n    }\n  },\n  resolveLength: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (value != null) {\n      return value.length;\n    } else {\n      return this.maximumLength;\n    }\n  },\n  generateTypeInfo: function (parameter) {\n    const buffer = Buffer.alloc(3);\n    buffer.writeUInt8(this.id, 0);\n\n    if (parameter.length <= this.maximumLength) {\n      buffer.writeUInt16LE(parameter.length, 1);\n    } else {\n      buffer.writeUInt16LE(MAX, 1);\n    }\n\n    return buffer;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      if (parameter.length <= this.maximumLength) {\n        return NULL_LENGTH;\n      } else {\n        return MAX_NULL_LENGTH;\n      }\n    }\n\n    let value = parameter.value;\n\n    if (!Buffer.isBuffer(value)) {\n      value = value.toString();\n    }\n\n    const length = Buffer.byteLength(value, 'ucs2');\n\n    if (parameter.length <= this.maximumLength) {\n      const buffer = Buffer.alloc(2);\n      buffer.writeUInt16LE(length, 0);\n      return buffer;\n    } else {\n      // writePLPBody\n      return UNKNOWN_PLP_LEN;\n    }\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    let value = parameter.value;\n\n    if (parameter.length <= this.maximumLength) {\n      if (Buffer.isBuffer(value)) {\n        yield value;\n      } else {\n        yield Buffer.from(value.toString(), 'ucs2');\n      }\n    } else {\n      // writePLPBody\n      if (!Buffer.isBuffer(value)) {\n        value = value.toString();\n      }\n\n      const length = Buffer.byteLength(value, 'ucs2');\n\n      if (length > 0) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeUInt32LE(length, 0);\n        yield buffer;\n\n        if (Buffer.isBuffer(value)) {\n          yield value;\n        } else {\n          yield Buffer.from(value, 'ucs2');\n        }\n      }\n\n      yield PLP_TERMINATOR;\n    }\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n\n    return value;\n  }\n};\nvar _default = VarBinary;\nexports.default = _default;\nmodule.exports = VarBinary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}