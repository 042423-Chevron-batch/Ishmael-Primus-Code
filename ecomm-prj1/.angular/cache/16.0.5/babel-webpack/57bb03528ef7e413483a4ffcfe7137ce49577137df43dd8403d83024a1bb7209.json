{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { EventType } from './EventType.js';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar EventMessageUtils = /** @class */function () {\n  function EventMessageUtils() {}\n  /**\r\n   * Gets interaction status from event message\r\n   * @param message\r\n   * @param currentStatus\r\n   */\n  EventMessageUtils.getInteractionStatusFromEvent = function (message, currentStatus) {\n    switch (message.eventType) {\n      case EventType.LOGIN_START:\n        return InteractionStatus.Login;\n      case EventType.SSO_SILENT_START:\n        return InteractionStatus.SsoSilent;\n      case EventType.ACQUIRE_TOKEN_START:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.AcquireToken;\n        }\n        break;\n      case EventType.HANDLE_REDIRECT_START:\n        return InteractionStatus.HandleRedirect;\n      case EventType.LOGOUT_START:\n        return InteractionStatus.Logout;\n      case EventType.SSO_SILENT_SUCCESS:\n      case EventType.SSO_SILENT_FAILURE:\n        if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\n          // Prevent this event from clearing any status other than ssoSilent\n          break;\n        }\n        return InteractionStatus.None;\n      case EventType.LOGOUT_END:\n        if (currentStatus && currentStatus !== InteractionStatus.Logout) {\n          // Prevent this event from clearing any status other than logout\n          break;\n        }\n        return InteractionStatus.None;\n      case EventType.HANDLE_REDIRECT_END:\n        if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\n          // Prevent this event from clearing any status other than handleRedirect\n          break;\n        }\n        return InteractionStatus.None;\n      case EventType.LOGIN_SUCCESS:\n      case EventType.LOGIN_FAILURE:\n      case EventType.ACQUIRE_TOKEN_SUCCESS:\n      case EventType.ACQUIRE_TOKEN_FAILURE:\n      case EventType.RESTORE_FROM_BFCACHE:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\n            // Prevent this event from clearing any status other than login or acquireToken\n            break;\n          }\n          return InteractionStatus.None;\n        }\n        break;\n    }\n    return null;\n  };\n  return EventMessageUtils;\n}();\nexport { EventMessageUtils };","map":{"version":3,"names":["EventType","InteractionType","InteractionStatus","EventMessageUtils","getInteractionStatusFromEvent","message","currentStatus","eventType","LOGIN_START","Login","SSO_SILENT_START","SsoSilent","ACQUIRE_TOKEN_START","interactionType","Redirect","Popup","AcquireToken","HANDLE_REDIRECT_START","HandleRedirect","LOGOUT_START","Logout","SSO_SILENT_SUCCESS","SSO_SILENT_FAILURE","None","LOGOUT_END","HANDLE_REDIRECT_END","LOGIN_SUCCESS","LOGIN_FAILURE","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE","RESTORE_FROM_BFCACHE"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/event/EventMessage.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { EventType } from './EventType.js';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar EventMessageUtils = /** @class */ (function () {\r\n    function EventMessageUtils() {\r\n    }\r\n    /**\r\n     * Gets interaction status from event message\r\n     * @param message\r\n     * @param currentStatus\r\n     */\r\n    EventMessageUtils.getInteractionStatusFromEvent = function (message, currentStatus) {\r\n        switch (message.eventType) {\r\n            case EventType.LOGIN_START:\r\n                return InteractionStatus.Login;\r\n            case EventType.SSO_SILENT_START:\r\n                return InteractionStatus.SsoSilent;\r\n            case EventType.ACQUIRE_TOKEN_START:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.AcquireToken;\r\n                }\r\n                break;\r\n            case EventType.HANDLE_REDIRECT_START:\r\n                return InteractionStatus.HandleRedirect;\r\n            case EventType.LOGOUT_START:\r\n                return InteractionStatus.Logout;\r\n            case EventType.SSO_SILENT_SUCCESS:\r\n            case EventType.SSO_SILENT_FAILURE:\r\n                if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\r\n                    // Prevent this event from clearing any status other than ssoSilent\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.LOGOUT_END:\r\n                if (currentStatus && currentStatus !== InteractionStatus.Logout) {\r\n                    // Prevent this event from clearing any status other than logout\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.HANDLE_REDIRECT_END:\r\n                if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\r\n                    // Prevent this event from clearing any status other than handleRedirect\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.LOGIN_SUCCESS:\r\n            case EventType.LOGIN_FAILURE:\r\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\r\n            case EventType.ACQUIRE_TOKEN_FAILURE:\r\n            case EventType.RESTORE_FROM_BFCACHE:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\r\n                        // Prevent this event from clearing any status other than login or acquireToken\r\n                        break;\r\n                    }\r\n                    return InteractionStatus.None;\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    };\r\n    return EventMessageUtils;\r\n}());\n\nexport { EventMessageUtils };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,8BAA8B;;AAEjF;AACA;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,aAAe,YAAY;EAC/C,SAASA,iBAAiBA,CAAA,EAAG,CAC7B;EACA;AACJ;AACA;AACA;AACA;EACIA,iBAAiB,CAACC,6BAA6B,GAAG,UAAUC,OAAO,EAAEC,aAAa,EAAE;IAChF,QAAQD,OAAO,CAACE,SAAS;MACrB,KAAKP,SAAS,CAACQ,WAAW;QACtB,OAAON,iBAAiB,CAACO,KAAK;MAClC,KAAKT,SAAS,CAACU,gBAAgB;QAC3B,OAAOR,iBAAiB,CAACS,SAAS;MACtC,KAAKX,SAAS,CAACY,mBAAmB;QAC9B,IAAIP,OAAO,CAACQ,eAAe,KAAKZ,eAAe,CAACa,QAAQ,IAAIT,OAAO,CAACQ,eAAe,KAAKZ,eAAe,CAACc,KAAK,EAAE;UAC3G,OAAOb,iBAAiB,CAACc,YAAY;QACzC;QACA;MACJ,KAAKhB,SAAS,CAACiB,qBAAqB;QAChC,OAAOf,iBAAiB,CAACgB,cAAc;MAC3C,KAAKlB,SAAS,CAACmB,YAAY;QACvB,OAAOjB,iBAAiB,CAACkB,MAAM;MACnC,KAAKpB,SAAS,CAACqB,kBAAkB;MACjC,KAAKrB,SAAS,CAACsB,kBAAkB;QAC7B,IAAIhB,aAAa,IAAIA,aAAa,KAAKJ,iBAAiB,CAACS,SAAS,EAAE;UAChE;UACA;QACJ;QACA,OAAOT,iBAAiB,CAACqB,IAAI;MACjC,KAAKvB,SAAS,CAACwB,UAAU;QACrB,IAAIlB,aAAa,IAAIA,aAAa,KAAKJ,iBAAiB,CAACkB,MAAM,EAAE;UAC7D;UACA;QACJ;QACA,OAAOlB,iBAAiB,CAACqB,IAAI;MACjC,KAAKvB,SAAS,CAACyB,mBAAmB;QAC9B,IAAInB,aAAa,IAAIA,aAAa,KAAKJ,iBAAiB,CAACgB,cAAc,EAAE;UACrE;UACA;QACJ;QACA,OAAOhB,iBAAiB,CAACqB,IAAI;MACjC,KAAKvB,SAAS,CAAC0B,aAAa;MAC5B,KAAK1B,SAAS,CAAC2B,aAAa;MAC5B,KAAK3B,SAAS,CAAC4B,qBAAqB;MACpC,KAAK5B,SAAS,CAAC6B,qBAAqB;MACpC,KAAK7B,SAAS,CAAC8B,oBAAoB;QAC/B,IAAIzB,OAAO,CAACQ,eAAe,KAAKZ,eAAe,CAACa,QAAQ,IAAIT,OAAO,CAACQ,eAAe,KAAKZ,eAAe,CAACc,KAAK,EAAE;UAC3G,IAAIT,aAAa,IAAIA,aAAa,KAAKJ,iBAAiB,CAACO,KAAK,IAAIH,aAAa,KAAKJ,iBAAiB,CAACc,YAAY,EAAE;YAChH;YACA;UACJ;UACA,OAAOd,iBAAiB,CAACqB,IAAI;QACjC;QACA;IAAM;IAEd,OAAO,IAAI;EACf,CAAC;EACD,OAAOpB,iBAAiB;AAC5B,CAAC,EAAG;AAEJ,SAASA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}