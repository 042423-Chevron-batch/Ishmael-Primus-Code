{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Converts a base64 string into a byte array.\n * @param content - The base64 string to convert.\n * @internal\n */\nexport function base64ToBytes(content) {\n  if (typeof atob !== \"function\") {\n    throw new Error(`Your browser environment is missing the global \"atob\" function.`);\n  }\n  const binary = atob(content);\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  return bytes;\n}\n/**\n * Converts an ArrayBuffer to base64 string.\n * @param buffer - Raw binary data.\n * @internal\n */\nexport function bufferToBase64(buffer) {\n  if (typeof btoa !== \"function\") {\n    throw new Error(`Your browser environment is missing the global \"btoa\" function.`);\n  }\n  const bytes = new Uint8Array(buffer);\n  let binary = \"\";\n  for (const byte of bytes) {\n    binary += String.fromCharCode(byte);\n  }\n  return btoa(binary);\n}","map":{"version":3,"names":["base64ToBytes","content","atob","Error","binary","bytes","Uint8Array","length","i","charCodeAt","bufferToBase64","buffer","btoa","byte","String","fromCharCode"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/core-util/dist-esm/src/base64.browser.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Converts a base64 string into a byte array.\n * @param content - The base64 string to convert.\n * @internal\n */\nexport function base64ToBytes(content) {\n    if (typeof atob !== \"function\") {\n        throw new Error(`Your browser environment is missing the global \"atob\" function.`);\n    }\n    const binary = atob(content);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\n/**\n * Converts an ArrayBuffer to base64 string.\n * @param buffer - Raw binary data.\n * @internal\n */\nexport function bufferToBase64(buffer) {\n    if (typeof btoa !== \"function\") {\n        throw new Error(`Your browser environment is missing the global \"btoa\" function.`);\n    }\n    const bytes = new Uint8Array(buffer);\n    let binary = \"\";\n    for (const byte of bytes) {\n        binary += String.fromCharCode(byte);\n    }\n    return btoa(binary);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAaA,CAACC,OAAO,EAAE;EACnC,IAAI,OAAOC,IAAI,KAAK,UAAU,EAAE;IAC5B,MAAM,IAAIC,KAAK,CAAE,iEAAgE,CAAC;EACtF;EACA,MAAMC,MAAM,GAAGF,IAAI,CAACD,OAAO,CAAC;EAC5B,MAAMI,KAAK,GAAG,IAAIC,UAAU,CAACF,MAAM,CAACG,MAAM,CAAC;EAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACG,MAAM,EAAEC,CAAC,EAAE,EAAE;IACpCH,KAAK,CAACG,CAAC,CAAC,GAAGJ,MAAM,CAACK,UAAU,CAACD,CAAC,CAAC;EACnC;EACA,OAAOH,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,cAAcA,CAACC,MAAM,EAAE;EACnC,IAAI,OAAOC,IAAI,KAAK,UAAU,EAAE;IAC5B,MAAM,IAAIT,KAAK,CAAE,iEAAgE,CAAC;EACtF;EACA,MAAME,KAAK,GAAG,IAAIC,UAAU,CAACK,MAAM,CAAC;EACpC,IAAIP,MAAM,GAAG,EAAE;EACf,KAAK,MAAMS,IAAI,IAAIR,KAAK,EAAE;IACtBD,MAAM,IAAIU,MAAM,CAACC,YAAY,CAACF,IAAI,CAAC;EACvC;EACA,OAAOD,IAAI,CAACR,MAAM,CAAC;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}