{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __awaiter, __generator, __spread, __assign } from '../_virtual/_tslib.js';\nimport { AccountEntity, AuthenticationScheme, ClientConfigurationError, StringUtils, PerformanceEvents, UrlString, ServerTelemetryManager, AuthorityFactory } from '@azure/msal-common';\nimport { version } from '../packageMetadata.js';\nimport { BrowserConstants } from '../utils/BrowserConstants.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar BaseInteractionClient = /** @class */function () {\n  function BaseInteractionClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\n    this.config = config;\n    this.browserStorage = storageImpl;\n    this.browserCrypto = browserCrypto;\n    this.networkClient = this.config.system.networkClient;\n    this.eventHandler = eventHandler;\n    this.navigationClient = navigationClient;\n    this.nativeMessageHandler = nativeMessageHandler;\n    this.correlationId = correlationId || this.browserCrypto.createNewGuid();\n    this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\n    this.performanceClient = performanceClient;\n  }\n  BaseInteractionClient.prototype.clearCacheOnLogout = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!account) return [3 /*break*/, 5];\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\n              this.logger.verbose(\"Setting active account to null\");\n              this.browserStorage.setActiveAccount(null);\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account))];\n          case 2:\n            _a.sent();\n            this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\n            return [3 /*break*/, 4];\n          case 3:\n            _a.sent();\n            this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\n            return [3 /*break*/, 4];\n          case 4:\n            return [3 /*break*/, 9];\n          case 5:\n            _a.trys.push([5, 8,, 9]);\n            this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\n            // Clear all accounts and tokens\n            return [4 /*yield*/, this.browserStorage.clear()];\n          case 6:\n            // Clear all accounts and tokens\n            _a.sent();\n            // Clear any stray keys from IndexedDB\n            return [4 /*yield*/, this.browserCrypto.clearKeystore()];\n          case 7:\n            // Clear any stray keys from IndexedDB\n            _a.sent();\n            return [3 /*break*/, 9];\n          case 8:\n            _a.sent();\n            this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\n            return [3 /*break*/, 9];\n          case 9:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Initializer function for all request APIs\r\n   * @param request\r\n   */\n  BaseInteractionClient.prototype.initializeBaseRequest = function (request, account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authority, scopes, validatedRequest, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeBaseRequest, request.correlationId);\n            this.logger.verbose(\"Initializing BaseAuthRequest\");\n            authority = request.authority || this.config.auth.authority;\n            if (!account) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.validateRequestAuthority(authority, account)];\n          case 1:\n            _b.sent();\n            _b.label = 2;\n          case 2:\n            scopes = __spread(request && request.scopes || []);\n            validatedRequest = __assign(__assign({}, request), {\n              correlationId: this.correlationId,\n              authority: authority,\n              scopes: scopes\n            });\n            // Set authenticationScheme to BEARER if not explicitly set in the request\n            if (!validatedRequest.authenticationScheme) {\n              validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n              this.logger.verbose(\"Authentication Scheme wasn't explicitly set in request, defaulting to \\\"Bearer\\\" request\");\n            } else {\n              if (validatedRequest.authenticationScheme === AuthenticationScheme.SSH) {\n                if (!request.sshJwk) {\n                  throw ClientConfigurationError.createMissingSshJwkError();\n                }\n                if (!request.sshKid) {\n                  throw ClientConfigurationError.createMissingSshKidError();\n                }\n              }\n              this.logger.verbose(\"Authentication Scheme set to \\\"\" + validatedRequest.authenticationScheme + \"\\\" as configured in Auth request\");\n            }\n            if (!(request.claims && !StringUtils.isEmpty(request.claims))) return [3 /*break*/, 4];\n            _a = validatedRequest;\n            return [4 /*yield*/, this.browserCrypto.hashString(request.claims)];\n          case 3:\n            _a.requestedClaimsHash = _b.sent();\n            _b.label = 4;\n          case 4:\n            return [2 /*return*/, validatedRequest];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * Use to get the redirect uri configured in MSAL or null.\r\n   * @param requestRedirectUri\r\n   * @returns Redirect URL\r\n   *\r\n   */\n  BaseInteractionClient.prototype.getRedirectUri = function (requestRedirectUri) {\n    this.logger.verbose(\"getRedirectUri called\");\n    var redirectUri = requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\n    return UrlString.getAbsoluteUrl(redirectUri, BrowserUtils.getCurrentUri());\n  };\n  /*\r\n   * If authority provided in the request does not match environment/authority specified\r\n   * in the account or MSAL config, we throw an error.\r\n   */\n  BaseInteractionClient.prototype.validateRequestAuthority = function (authority, account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var discoveredAuthority;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getDiscoveredAuthority(authority)];\n          case 1:\n            discoveredAuthority = _a.sent();\n            if (!discoveredAuthority.isAlias(account.environment)) {\n              throw ClientConfigurationError.createAuthorityMismatchError();\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param apiId\r\n   * @param correlationId\r\n   * @param forceRefresh\r\n   */\n  BaseInteractionClient.prototype.initializeServerTelemetryManager = function (apiId, forceRefresh) {\n    this.logger.verbose(\"initializeServerTelemetryManager called\");\n    var telemetryPayload = {\n      clientId: this.config.auth.clientId,\n      correlationId: this.correlationId,\n      apiId: apiId,\n      forceRefresh: forceRefresh || false,\n      wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n      wrapperVer: this.browserStorage.getWrapperMetadata()[1]\n    };\n    return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\n  };\n  /**\r\n   * Used to get a discovered version of the default authority.\r\n   * @param requestAuthority\r\n   * @param requestCorrelationId\r\n   */\n  BaseInteractionClient.prototype.getDiscoveredAuthority = function (requestAuthority) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authorityOptions;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"getDiscoveredAuthority called\");\n            authorityOptions = {\n              protocolMode: this.config.auth.protocolMode,\n              knownAuthorities: this.config.auth.knownAuthorities,\n              cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n              authorityMetadata: this.config.auth.authorityMetadata\n            };\n            if (!requestAuthority) return [3 /*break*/, 2];\n            this.logger.verbose(\"Creating discovered authority with request authority\");\n            return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            this.logger.verbose(\"Creating discovered authority with configured authority\");\n            return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger)];\n          case 3:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  return BaseInteractionClient;\n}();\nexport { BaseInteractionClient };","map":{"version":3,"names":["__awaiter","__generator","__spread","__assign","AccountEntity","AuthenticationScheme","ClientConfigurationError","StringUtils","PerformanceEvents","UrlString","ServerTelemetryManager","AuthorityFactory","version","BrowserConstants","BrowserUtils","BaseInteractionClient","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","performanceClient","nativeMessageHandler","correlationId","browserStorage","networkClient","system","createNewGuid","clone","MSAL_SKU","prototype","clearCacheOnLogout","account","_a","label","accountInfoIsEqual","getActiveAccount","verbose","setActiveAccount","trys","push","removeAccount","generateAccountCacheKey","sent","error","clear","clearKeystore","initializeBaseRequest","request","authority","scopes","validatedRequest","_b","addQueueMeasurement","InitializeBaseRequest","auth","validateRequestAuthority","authenticationScheme","BEARER","SSH","sshJwk","createMissingSshJwkError","sshKid","createMissingSshKidError","claims","isEmpty","hashString","requestedClaimsHash","getRedirectUri","requestRedirectUri","redirectUri","getCurrentUri","getAbsoluteUrl","discoveredAuthority","getDiscoveredAuthority","isAlias","environment","createAuthorityMismatchError","initializeServerTelemetryManager","apiId","forceRefresh","telemetryPayload","clientId","wrapperSKU","getWrapperMetadata","wrapperVer","requestAuthority","authorityOptions","protocolMode","knownAuthorities","cloudDiscoveryMetadata","authorityMetadata","createDiscoveredInstance"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __awaiter, __generator, __spread, __assign } from '../_virtual/_tslib.js';\nimport { AccountEntity, AuthenticationScheme, ClientConfigurationError, StringUtils, PerformanceEvents, UrlString, ServerTelemetryManager, AuthorityFactory } from '@azure/msal-common';\nimport { version } from '../packageMetadata.js';\nimport { BrowserConstants } from '../utils/BrowserConstants.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar BaseInteractionClient = /** @class */ (function () {\r\n    function BaseInteractionClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\r\n        this.config = config;\r\n        this.browserStorage = storageImpl;\r\n        this.browserCrypto = browserCrypto;\r\n        this.networkClient = this.config.system.networkClient;\r\n        this.eventHandler = eventHandler;\r\n        this.navigationClient = navigationClient;\r\n        this.nativeMessageHandler = nativeMessageHandler;\r\n        this.correlationId = correlationId || this.browserCrypto.createNewGuid();\r\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    BaseInteractionClient.prototype.clearCacheOnLogout = function (account) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!account) return [3 /*break*/, 5];\r\n                        if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\r\n                            this.logger.verbose(\"Setting active account to null\");\r\n                            this.browserStorage.setActiveAccount(null);\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [3 /*break*/, 9];\r\n                    case 5:\r\n                        _a.trys.push([5, 8, , 9]);\r\n                        this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\r\n                        // Clear all accounts and tokens\r\n                        return [4 /*yield*/, this.browserStorage.clear()];\r\n                    case 6:\r\n                        // Clear all accounts and tokens\r\n                        _a.sent();\r\n                        // Clear any stray keys from IndexedDB\r\n                        return [4 /*yield*/, this.browserCrypto.clearKeystore()];\r\n                    case 7:\r\n                        // Clear any stray keys from IndexedDB\r\n                        _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        _a.sent();\r\n                        this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\r\n                        return [3 /*break*/, 9];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initializer function for all request APIs\r\n     * @param request\r\n     */\r\n    BaseInteractionClient.prototype.initializeBaseRequest = function (request, account) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authority, scopes, validatedRequest, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeBaseRequest, request.correlationId);\r\n                        this.logger.verbose(\"Initializing BaseAuthRequest\");\r\n                        authority = request.authority || this.config.auth.authority;\r\n                        if (!account) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.validateRequestAuthority(authority, account)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        scopes = __spread(((request && request.scopes) || []));\r\n                        validatedRequest = __assign(__assign({}, request), { correlationId: this.correlationId, authority: authority,\r\n                            scopes: scopes });\r\n                        // Set authenticationScheme to BEARER if not explicitly set in the request\r\n                        if (!validatedRequest.authenticationScheme) {\r\n                            validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\r\n                            this.logger.verbose(\"Authentication Scheme wasn't explicitly set in request, defaulting to \\\"Bearer\\\" request\");\r\n                        }\r\n                        else {\r\n                            if (validatedRequest.authenticationScheme === AuthenticationScheme.SSH) {\r\n                                if (!request.sshJwk) {\r\n                                    throw ClientConfigurationError.createMissingSshJwkError();\r\n                                }\r\n                                if (!request.sshKid) {\r\n                                    throw ClientConfigurationError.createMissingSshKidError();\r\n                                }\r\n                            }\r\n                            this.logger.verbose(\"Authentication Scheme set to \\\"\" + validatedRequest.authenticationScheme + \"\\\" as configured in Auth request\");\r\n                        }\r\n                        if (!(request.claims && !StringUtils.isEmpty(request.claims))) return [3 /*break*/, 4];\r\n                        _a = validatedRequest;\r\n                        return [4 /*yield*/, this.browserCrypto.hashString(request.claims)];\r\n                    case 3:\r\n                        _a.requestedClaimsHash = _b.sent();\r\n                        _b.label = 4;\r\n                    case 4: return [2 /*return*/, validatedRequest];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @param requestRedirectUri\r\n     * @returns Redirect URL\r\n     *\r\n     */\r\n    BaseInteractionClient.prototype.getRedirectUri = function (requestRedirectUri) {\r\n        this.logger.verbose(\"getRedirectUri called\");\r\n        var redirectUri = requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\r\n        return UrlString.getAbsoluteUrl(redirectUri, BrowserUtils.getCurrentUri());\r\n    };\r\n    /*\r\n     * If authority provided in the request does not match environment/authority specified\r\n     * in the account or MSAL config, we throw an error.\r\n     */\r\n    BaseInteractionClient.prototype.validateRequestAuthority = function (authority, account) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var discoveredAuthority;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDiscoveredAuthority(authority)];\r\n                    case 1:\r\n                        discoveredAuthority = _a.sent();\r\n                        if (!discoveredAuthority.isAlias(account.environment)) {\r\n                            throw ClientConfigurationError.createAuthorityMismatchError();\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param apiId\r\n     * @param correlationId\r\n     * @param forceRefresh\r\n     */\r\n    BaseInteractionClient.prototype.initializeServerTelemetryManager = function (apiId, forceRefresh) {\r\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\r\n        var telemetryPayload = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: this.correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false,\r\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\r\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1]\r\n        };\r\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\r\n    };\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     * @param requestAuthority\r\n     * @param requestCorrelationId\r\n     */\r\n    BaseInteractionClient.prototype.getDiscoveredAuthority = function (requestAuthority) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authorityOptions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"getDiscoveredAuthority called\");\r\n                        authorityOptions = {\r\n                            protocolMode: this.config.auth.protocolMode,\r\n                            knownAuthorities: this.config.auth.knownAuthorities,\r\n                            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n                            authorityMetadata: this.config.auth.authorityMetadata\r\n                        };\r\n                        if (!requestAuthority) return [3 /*break*/, 2];\r\n                        this.logger.verbose(\"Creating discovered authority with request authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2:\r\n                        this.logger.verbose(\"Creating discovered authority with configured authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger)];\r\n                    case 3: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return BaseInteractionClient;\r\n}());\n\nexport { BaseInteractionClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}