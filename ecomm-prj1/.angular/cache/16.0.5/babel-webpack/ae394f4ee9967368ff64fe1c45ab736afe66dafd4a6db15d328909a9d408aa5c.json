{"ast":null,"code":"/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\n\nimport { StringUtils } from './StringUtils.js';\nimport { Constants } from './Constants.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\nvar ProtocolUtils = /** @class */function () {\n  function ProtocolUtils() {}\n  /**\r\n   * Appends user state with random guid, or returns random guid.\r\n   * @param userState\r\n   * @param randomGuid\r\n   */\n  ProtocolUtils.setRequestState = function (cryptoObj, userState, meta) {\n    var libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n    return !StringUtils.isEmpty(userState) ? \"\" + libraryState + Constants.RESOURCE_DELIM + userState : libraryState;\n  };\n  /**\r\n   * Generates the state value used by the common library.\r\n   * @param randomGuid\r\n   * @param cryptoObj\r\n   */\n  ProtocolUtils.generateLibraryState = function (cryptoObj, meta) {\n    if (!cryptoObj) {\n      throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\n    }\n    // Create a state object containing a unique id and the timestamp of the request creation\n    var stateObj = {\n      id: cryptoObj.createNewGuid()\n    };\n    if (meta) {\n      stateObj.meta = meta;\n    }\n    var stateString = JSON.stringify(stateObj);\n    return cryptoObj.base64Encode(stateString);\n  };\n  /**\r\n   * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n   * @param state\r\n   * @param cryptoObj\r\n   */\n  ProtocolUtils.parseRequestState = function (cryptoObj, state) {\n    if (!cryptoObj) {\n      throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\n    }\n    if (StringUtils.isEmpty(state)) {\n      throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\n    }\n    try {\n      // Split the state between library state and user passed state and decode them separately\n      var splitState = state.split(Constants.RESOURCE_DELIM);\n      var libraryState = splitState[0];\n      var userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : Constants.EMPTY_STRING;\n      var libraryStateString = cryptoObj.base64Decode(libraryState);\n      var libraryStateObj = JSON.parse(libraryStateString);\n      return {\n        userRequestState: !StringUtils.isEmpty(userState) ? userState : Constants.EMPTY_STRING,\n        libraryState: libraryStateObj\n      };\n    } catch (e) {\n      throw ClientAuthError.createInvalidStateError(state, e);\n    }\n  };\n  return ProtocolUtils;\n}();\nexport { ProtocolUtils };","map":{"version":3,"names":["StringUtils","Constants","ClientAuthError","ProtocolUtils","setRequestState","cryptoObj","userState","meta","libraryState","generateLibraryState","isEmpty","RESOURCE_DELIM","createNoCryptoObjectError","stateObj","id","createNewGuid","stateString","JSON","stringify","base64Encode","parseRequestState","state","createInvalidStateError","splitState","split","length","slice","join","EMPTY_STRING","libraryStateString","base64Decode","libraryStateObj","parse","userRequestState","e"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-common/dist/utils/ProtocolUtils.js"],"sourcesContent":["/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\nimport { StringUtils } from './StringUtils.js';\nimport { Constants } from './Constants.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (cryptoObj, userState, meta) {\r\n        var libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\r\n        return !StringUtils.isEmpty(userState) ? \"\" + libraryState + Constants.RESOURCE_DELIM + userState : libraryState;\r\n    };\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.generateLibraryState = function (cryptoObj, meta) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        var stateObj = {\r\n            id: cryptoObj.createNewGuid()\r\n        };\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n        var stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    };\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.parseRequestState = function (cryptoObj, state) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\r\n        }\r\n        if (StringUtils.isEmpty(state)) {\r\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            var splitState = state.split(Constants.RESOURCE_DELIM);\r\n            var libraryState = splitState[0];\r\n            var userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : Constants.EMPTY_STRING;\r\n            var libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            var libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : Constants.EMPTY_STRING,\r\n                libraryState: libraryStateObj\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\nexport { ProtocolUtils };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,eAAe,QAAQ,6BAA6B;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,aAAe,YAAY;EAC3C,SAASA,aAAaA,CAAA,EAAG,CACzB;EACA;AACJ;AACA;AACA;AACA;EACIA,aAAa,CAACC,eAAe,GAAG,UAAUC,SAAS,EAAEC,SAAS,EAAEC,IAAI,EAAE;IAClE,IAAIC,YAAY,GAAGL,aAAa,CAACM,oBAAoB,CAACJ,SAAS,EAAEE,IAAI,CAAC;IACtE,OAAO,CAACP,WAAW,CAACU,OAAO,CAACJ,SAAS,CAAC,GAAG,EAAE,GAAGE,YAAY,GAAGP,SAAS,CAACU,cAAc,GAAGL,SAAS,GAAGE,YAAY;EACpH,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIL,aAAa,CAACM,oBAAoB,GAAG,UAAUJ,SAAS,EAAEE,IAAI,EAAE;IAC5D,IAAI,CAACF,SAAS,EAAE;MACZ,MAAMH,eAAe,CAACU,yBAAyB,CAAC,sBAAsB,CAAC;IAC3E;IACA;IACA,IAAIC,QAAQ,GAAG;MACXC,EAAE,EAAET,SAAS,CAACU,aAAa;IAC/B,CAAC;IACD,IAAIR,IAAI,EAAE;MACNM,QAAQ,CAACN,IAAI,GAAGA,IAAI;IACxB;IACA,IAAIS,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC;IAC1C,OAAOR,SAAS,CAACc,YAAY,CAACH,WAAW,CAAC;EAC9C,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIb,aAAa,CAACiB,iBAAiB,GAAG,UAAUf,SAAS,EAAEgB,KAAK,EAAE;IAC1D,IAAI,CAAChB,SAAS,EAAE;MACZ,MAAMH,eAAe,CAACU,yBAAyB,CAAC,mBAAmB,CAAC;IACxE;IACA,IAAIZ,WAAW,CAACU,OAAO,CAACW,KAAK,CAAC,EAAE;MAC5B,MAAMnB,eAAe,CAACoB,uBAAuB,CAACD,KAAK,EAAE,gCAAgC,CAAC;IAC1F;IACA,IAAI;MACA;MACA,IAAIE,UAAU,GAAGF,KAAK,CAACG,KAAK,CAACvB,SAAS,CAACU,cAAc,CAAC;MACtD,IAAIH,YAAY,GAAGe,UAAU,CAAC,CAAC,CAAC;MAChC,IAAIjB,SAAS,GAAGiB,UAAU,CAACE,MAAM,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC1B,SAAS,CAACU,cAAc,CAAC,GAAGV,SAAS,CAAC2B,YAAY;MACnH,IAAIC,kBAAkB,GAAGxB,SAAS,CAACyB,YAAY,CAACtB,YAAY,CAAC;MAC7D,IAAIuB,eAAe,GAAGd,IAAI,CAACe,KAAK,CAACH,kBAAkB,CAAC;MACpD,OAAO;QACHI,gBAAgB,EAAE,CAACjC,WAAW,CAACU,OAAO,CAACJ,SAAS,CAAC,GAAGA,SAAS,GAAGL,SAAS,CAAC2B,YAAY;QACtFpB,YAAY,EAAEuB;MAClB,CAAC;IACL,CAAC,CACD,OAAOG,CAAC,EAAE;MACN,MAAMhC,eAAe,CAACoB,uBAAuB,CAACD,KAAK,EAAEa,CAAC,CAAC;IAC3D;EACJ,CAAC;EACD,OAAO/B,aAAa;AACxB,CAAC,EAAG;AAEJ,SAASA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}