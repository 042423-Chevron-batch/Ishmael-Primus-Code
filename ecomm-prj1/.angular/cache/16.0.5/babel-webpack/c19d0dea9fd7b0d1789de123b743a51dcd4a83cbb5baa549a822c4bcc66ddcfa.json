{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { AsyncMemoryStorage } from './AsyncMemoryStorage.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar CryptoKeyStoreNames;\n(function (CryptoKeyStoreNames) {\n  CryptoKeyStoreNames[\"asymmetricKeys\"] = \"asymmetricKeys\";\n  CryptoKeyStoreNames[\"symmetricKeys\"] = \"symmetricKeys\";\n})(CryptoKeyStoreNames || (CryptoKeyStoreNames = {}));\n/**\r\n * MSAL CryptoKeyStore DB Version 2\r\n */\nvar CryptoKeyStore = /** @class */function () {\n  function CryptoKeyStore(logger) {\n    this.logger = logger;\n    this.asymmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\n    this.symmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\n  }\n  CryptoKeyStore.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Delete in-memory keystores\n            this.asymmetricKeys.clearInMemory();\n            this.symmetricKeys.clearInMemory();\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.asymmetricKeys.clearPersistent()];\n          case 2:\n            _a.sent();\n            return [2 /*return*/, true];\n          case 3:\n            e_1 = _a.sent();\n            if (e_1 instanceof Error) {\n              this.logger.error(\"Clearing keystore failed with error: \" + e_1.message);\n            } else {\n              this.logger.error(\"Clearing keystore failed with unknown error\");\n            }\n            return [2 /*return*/, false];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return CryptoKeyStore;\n}();\nexport { CryptoKeyStore, CryptoKeyStoreNames };","map":{"version":3,"names":["__awaiter","__generator","AsyncMemoryStorage","CryptoKeyStoreNames","CryptoKeyStore","logger","asymmetricKeys","symmetricKeys","prototype","clear","e_1","_a","label","clearInMemory","trys","push","clearPersistent","sent","Error","error","message"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/cache/CryptoKeyStore.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { AsyncMemoryStorage } from './AsyncMemoryStorage.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar CryptoKeyStoreNames;\r\n(function (CryptoKeyStoreNames) {\r\n    CryptoKeyStoreNames[\"asymmetricKeys\"] = \"asymmetricKeys\";\r\n    CryptoKeyStoreNames[\"symmetricKeys\"] = \"symmetricKeys\";\r\n})(CryptoKeyStoreNames || (CryptoKeyStoreNames = {}));\r\n/**\r\n * MSAL CryptoKeyStore DB Version 2\r\n */\r\nvar CryptoKeyStore = /** @class */ (function () {\r\n    function CryptoKeyStore(logger) {\r\n        this.logger = logger;\r\n        this.asymmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\r\n        this.symmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\r\n    }\r\n    CryptoKeyStore.prototype.clear = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Delete in-memory keystores\r\n                        this.asymmetricKeys.clearInMemory();\r\n                        this.symmetricKeys.clearInMemory();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.asymmetricKeys.clearPersistent()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, true];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        if (e_1 instanceof Error) {\r\n                            this.logger.error(\"Clearing keystore failed with error: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            this.logger.error(\"Clearing keystore failed with unknown error\");\r\n                        }\r\n                        return [2 /*return*/, false];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CryptoKeyStore;\r\n}());\n\nexport { CryptoKeyStore, CryptoKeyStoreNames };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,EAAEC,WAAW,QAAQ,uBAAuB;AAC9D,SAASC,kBAAkB,QAAQ,yBAAyB;;AAE5D;AACA;AACA;AACA;AACA,IAAIC,mBAAmB;AACvB,CAAC,UAAUA,mBAAmB,EAAE;EAC5BA,mBAAmB,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;EACxDA,mBAAmB,CAAC,eAAe,CAAC,GAAG,eAAe;AAC1D,CAAC,EAAEA,mBAAmB,KAAKA,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;AACrD;AACA;AACA;AACA,IAAIC,cAAc,GAAG,aAAe,YAAY;EAC5C,SAASA,cAAcA,CAACC,MAAM,EAAE;IAC5B,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,cAAc,GAAG,IAAIJ,kBAAkB,CAAC,IAAI,CAACG,MAAM,EAAEF,mBAAmB,CAACG,cAAc,CAAC;IAC7F,IAAI,CAACC,aAAa,GAAG,IAAIL,kBAAkB,CAAC,IAAI,CAACG,MAAM,EAAEF,mBAAmB,CAACI,aAAa,CAAC;EAC/F;EACAH,cAAc,CAACI,SAAS,CAACC,KAAK,GAAG,YAAY;IACzC,OAAOT,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIU,GAAG;MACP,OAAOT,WAAW,CAAC,IAAI,EAAE,UAAUU,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACF;YACA,IAAI,CAACN,cAAc,CAACO,aAAa,EAAE;YACnC,IAAI,CAACN,aAAa,CAACM,aAAa,EAAE;YAClCF,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFD,EAAE,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACT,cAAc,CAACU,eAAe,EAAE,CAAC;UAC/D,KAAK,CAAC;YACFL,EAAE,CAACM,IAAI,EAAE;YACT,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC;UAC/B,KAAK,CAAC;YACFP,GAAG,GAAGC,EAAE,CAACM,IAAI,EAAE;YACf,IAAIP,GAAG,YAAYQ,KAAK,EAAE;cACtB,IAAI,CAACb,MAAM,CAACc,KAAK,CAAC,uCAAuC,GAAGT,GAAG,CAACU,OAAO,CAAC;YAC5E,CAAC,MACI;cACD,IAAI,CAACf,MAAM,CAACc,KAAK,CAAC,6CAA6C,CAAC;YACpE;YACA,OAAO,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC;UAChC,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QAAC;MAEtC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACD,OAAOf,cAAc;AACzB,CAAC,EAAG;AAEJ,SAASA,cAAc,EAAED,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}