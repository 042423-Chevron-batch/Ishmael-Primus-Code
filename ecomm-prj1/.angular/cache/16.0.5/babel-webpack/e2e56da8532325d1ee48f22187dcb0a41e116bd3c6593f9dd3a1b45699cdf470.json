{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { Constants } from '@azure/msal-common';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\nvar Base64Encode = /** @class */function () {\n  function Base64Encode() {}\n  /**\r\n   * Returns URL Safe b64 encoded string from a plaintext string.\r\n   * @param input\r\n   */\n  Base64Encode.prototype.urlEncode = function (input) {\n    return encodeURIComponent(this.encode(input).replace(/=/g, Constants.EMPTY_STRING).replace(/\\+/g, \"-\").replace(/\\//g, \"_\"));\n  };\n  /**\r\n   * Returns URL Safe b64 encoded string from an int8Array.\r\n   * @param inputArr\r\n   */\n  Base64Encode.prototype.urlEncodeArr = function (inputArr) {\n    return this.base64EncArr(inputArr).replace(/=/g, Constants.EMPTY_STRING).replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n  };\n  /**\r\n   * Returns b64 encoded string from plaintext string.\r\n   * @param input\r\n   */\n  Base64Encode.prototype.encode = function (input) {\n    var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\n    return this.base64EncArr(inputUtf8Arr);\n  };\n  /**\r\n   * Base64 encode byte array\r\n   * @param aBytes\r\n   */\n  Base64Encode.prototype.base64EncArr = function (aBytes) {\n    var eqLen = (3 - aBytes.length % 3) % 3;\n    var sB64Enc = Constants.EMPTY_STRING;\n    for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n      nMod3 = nIdx % 3;\n      /* Uncomment the following line in order to split the output in lines 76-character long: */\n      /*\r\n       *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n       */\n      nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n      if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n        sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\n        nUint24 = 0;\n      }\n    }\n    return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\n  };\n  /**\r\n   * Base64 string to array encoding helper\r\n   * @param nUint6\r\n   */\n  Base64Encode.prototype.uint6ToB64 = function (nUint6) {\n    return nUint6 < 26 ? nUint6 + 65 : nUint6 < 52 ? nUint6 + 71 : nUint6 < 62 ? nUint6 - 4 : nUint6 === 62 ? 43 : nUint6 === 63 ? 47 : 65;\n  };\n  return Base64Encode;\n}();\nexport { Base64Encode };","map":{"version":3,"names":["Constants","BrowserStringUtils","Base64Encode","prototype","urlEncode","input","encodeURIComponent","encode","replace","EMPTY_STRING","urlEncodeArr","inputArr","base64EncArr","inputUtf8Arr","stringToUtf8Arr","aBytes","eqLen","length","sB64Enc","nMod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToB64","substring","nUint6"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/encode/Base64Encode.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { Constants } from '@azure/msal-common';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Encode = /** @class */ (function () {\r\n    function Base64Encode() {\r\n    }\r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.urlEncode = function (input) {\r\n        return encodeURIComponent(this.encode(input)\r\n            .replace(/=/g, Constants.EMPTY_STRING)\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\"));\r\n    };\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr\r\n     */\r\n    Base64Encode.prototype.urlEncodeArr = function (inputArr) {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, Constants.EMPTY_STRING)\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    };\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.encode = function (input) {\r\n        var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    };\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes\r\n     */\r\n    Base64Encode.prototype.base64EncArr = function (aBytes) {\r\n        var eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        var sB64Enc = Constants.EMPTY_STRING;\r\n        for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n             *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n             */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    };\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6\r\n     */\r\n    Base64Encode.prototype.uint6ToB64 = function (nUint6) {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                                65;\r\n    };\r\n    return Base64Encode;\r\n}());\n\nexport { Base64Encode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}