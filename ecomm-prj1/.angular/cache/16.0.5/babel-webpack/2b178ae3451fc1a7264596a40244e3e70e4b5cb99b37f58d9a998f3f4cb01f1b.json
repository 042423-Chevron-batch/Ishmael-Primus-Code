{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _datetimen = _interopRequireDefault(require(\"./datetimen\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst EPOCH_DATE = new Date(1900, 0, 1);\nconst UTC_EPOCH_DATE = new Date(Date.UTC(1900, 0, 1));\nconst DATA_LENGTH = Buffer.from([0x04]);\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst SmallDateTime = {\n  id: 0x3A,\n  type: 'DATETIM4',\n  name: 'SmallDateTime',\n  declaration: function () {\n    return 'smalldatetime';\n  },\n  generateTypeInfo() {\n    return Buffer.from([_datetimen.default.id, 0x04]);\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    return DATA_LENGTH;\n  },\n  generateParameterData: function* (parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n    const buffer = Buffer.alloc(4);\n    let days, dstDiff, minutes;\n    if (options.useUTC) {\n      days = Math.floor((parameter.value.getTime() - UTC_EPOCH_DATE.getTime()) / (1000 * 60 * 60 * 24));\n      minutes = parameter.value.getUTCHours() * 60 + parameter.value.getUTCMinutes();\n    } else {\n      dstDiff = -(parameter.value.getTimezoneOffset() - EPOCH_DATE.getTimezoneOffset()) * 60 * 1000;\n      days = Math.floor((parameter.value.getTime() - EPOCH_DATE.getTime() + dstDiff) / (1000 * 60 * 60 * 24));\n      minutes = parameter.value.getHours() * 60 + parameter.value.getMinutes();\n    }\n    buffer.writeUInt16LE(days, 0);\n    buffer.writeUInt16LE(minutes, 2);\n    yield buffer;\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n    if (isNaN(value)) {\n      throw new TypeError('Invalid date.');\n    }\n    return value;\n  }\n};\nvar _default = SmallDateTime;\nexports.default = _default;\nmodule.exports = SmallDateTime;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_datetimen","_interopRequireDefault","require","obj","__esModule","EPOCH_DATE","Date","UTC_EPOCH_DATE","UTC","DATA_LENGTH","Buffer","from","NULL_LENGTH","SmallDateTime","id","type","name","declaration","generateTypeInfo","generateParameterLength","parameter","options","generateParameterData","buffer","alloc","days","dstDiff","minutes","useUTC","Math","floor","getTime","getUTCHours","getUTCMinutes","getTimezoneOffset","getHours","getMinutes","writeUInt16LE","validate","parse","isNaN","TypeError","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/data-types/smalldatetime.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _datetimen = _interopRequireDefault(require(\"./datetimen\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst EPOCH_DATE = new Date(1900, 0, 1);\nconst UTC_EPOCH_DATE = new Date(Date.UTC(1900, 0, 1));\nconst DATA_LENGTH = Buffer.from([0x04]);\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst SmallDateTime = {\n  id: 0x3A,\n  type: 'DATETIM4',\n  name: 'SmallDateTime',\n  declaration: function () {\n    return 'smalldatetime';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([_datetimen.default.id, 0x04]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n\n  generateParameterData: function* (parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const buffer = Buffer.alloc(4);\n    let days, dstDiff, minutes;\n\n    if (options.useUTC) {\n      days = Math.floor((parameter.value.getTime() - UTC_EPOCH_DATE.getTime()) / (1000 * 60 * 60 * 24));\n      minutes = parameter.value.getUTCHours() * 60 + parameter.value.getUTCMinutes();\n    } else {\n      dstDiff = -(parameter.value.getTimezoneOffset() - EPOCH_DATE.getTimezoneOffset()) * 60 * 1000;\n      days = Math.floor((parameter.value.getTime() - EPOCH_DATE.getTime() + dstDiff) / (1000 * 60 * 60 * 24));\n      minutes = parameter.value.getHours() * 60 + parameter.value.getMinutes();\n    }\n\n    buffer.writeUInt16LE(days, 0);\n    buffer.writeUInt16LE(minutes, 2);\n    yield buffer;\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\nvar _default = SmallDateTime;\nexports.default = _default;\nmodule.exports = SmallDateTime;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}