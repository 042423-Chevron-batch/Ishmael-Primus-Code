{"ast":null,"code":"/*! @azure/msal-common v13.1.0 2023-06-07 */\n'use strict';\n\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { Separators, Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Function to build a client info object from server clientInfo string\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\nfunction buildClientInfo(rawClientInfo, crypto) {\n  if (StringUtils.isEmpty(rawClientInfo)) {\n    throw ClientAuthError.createClientInfoEmptyError();\n  }\n  try {\n    var decodedClientInfo = crypto.base64Decode(rawClientInfo);\n    return JSON.parse(decodedClientInfo);\n  } catch (e) {\n    throw ClientAuthError.createClientInfoDecodingError(e.message);\n  }\n}\n/**\r\n * Function to build a client info object from cached homeAccountId string\r\n * @param homeAccountId\r\n */\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\n  if (StringUtils.isEmpty(homeAccountId)) {\n    throw ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\n  }\n  var clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\n  return {\n    uid: clientInfoParts[0],\n    utid: clientInfoParts.length < 2 ? Constants.EMPTY_STRING : clientInfoParts[1]\n  };\n}\nexport { buildClientInfo, buildClientInfoFromHomeAccountId };","map":{"version":3,"names":["ClientAuthError","StringUtils","Separators","Constants","buildClientInfo","rawClientInfo","crypto","isEmpty","createClientInfoEmptyError","decodedClientInfo","base64Decode","JSON","parse","e","createClientInfoDecodingError","message","buildClientInfoFromHomeAccountId","homeAccountId","clientInfoParts","split","CLIENT_INFO_SEPARATOR","uid","utid","length","EMPTY_STRING"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/node_modules/@azure/msal-common/dist/account/ClientInfo.js"],"sourcesContent":["/*! @azure/msal-common v13.1.0 2023-06-07 */\n'use strict';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { Separators, Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object from server clientInfo string\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError();\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e.message);\r\n    }\r\n}\r\n/**\r\n * Function to build a client info object from cached homeAccountId string\r\n * @param homeAccountId\r\n */\r\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\r\n    if (StringUtils.isEmpty(homeAccountId)) {\r\n        throw ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\r\n    }\r\n    var clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\r\n    return {\r\n        uid: clientInfoParts[0],\r\n        utid: clientInfoParts.length < 2 ? Constants.EMPTY_STRING : clientInfoParts[1]\r\n    };\r\n}\n\nexport { buildClientInfo, buildClientInfoFromHomeAccountId };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,UAAU,EAAEC,SAAS,QAAQ,uBAAuB;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,aAAa,EAAEC,MAAM,EAAE;EAC5C,IAAIL,WAAW,CAACM,OAAO,CAACF,aAAa,CAAC,EAAE;IACpC,MAAML,eAAe,CAACQ,0BAA0B,EAAE;EACtD;EACA,IAAI;IACA,IAAIC,iBAAiB,GAAGH,MAAM,CAACI,YAAY,CAACL,aAAa,CAAC;IAC1D,OAAOM,IAAI,CAACC,KAAK,CAACH,iBAAiB,CAAC;EACxC,CAAC,CACD,OAAOI,CAAC,EAAE;IACN,MAAMb,eAAe,CAACc,6BAA6B,CAACD,CAAC,CAACE,OAAO,CAAC;EAClE;AACJ;AACA;AACA;AACA;AACA;AACA,SAASC,gCAAgCA,CAACC,aAAa,EAAE;EACrD,IAAIhB,WAAW,CAACM,OAAO,CAACU,aAAa,CAAC,EAAE;IACpC,MAAMjB,eAAe,CAACc,6BAA6B,CAAC,4BAA4B,CAAC;EACrF;EACA,IAAII,eAAe,GAAGD,aAAa,CAACE,KAAK,CAACjB,UAAU,CAACkB,qBAAqB,EAAE,CAAC,CAAC;EAC9E,OAAO;IACHC,GAAG,EAAEH,eAAe,CAAC,CAAC,CAAC;IACvBI,IAAI,EAAEJ,eAAe,CAACK,MAAM,GAAG,CAAC,GAAGpB,SAAS,CAACqB,YAAY,GAAGN,eAAe,CAAC,CAAC;EACjF,CAAC;AACL;AAEA,SAASd,eAAe,EAAEY,gCAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}