{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from '@azure/msal-common';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\nvar BrowserConfigurationAuthErrorMessage = {\n  redirectUriNotSet: {\n    code: \"redirect_uri_empty\",\n    desc: \"A redirect URI is required for all calls, and none has been set.\"\n  },\n  postLogoutUriNotSet: {\n    code: \"post_logout_uri_empty\",\n    desc: \"A post logout redirect has not been set.\"\n  },\n  storageNotSupportedError: {\n    code: \"storage_not_supported\",\n    desc: \"Given storage configuration option was not supported.\"\n  },\n  noRedirectCallbacksSet: {\n    code: \"no_redirect_callbacks\",\n    desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  invalidCallbackObject: {\n    code: \"invalid_callback_object\",\n    desc: \"The object passed for the callback was invalid. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  stubPcaInstanceCalled: {\n    code: \"stubbed_public_client_application_called\",\n    desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  inMemRedirectUnavailable: {\n    code: \"in_mem_redirect_unavailable\",\n    desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n  },\n  entropyNotProvided: {\n    code: \"entropy_not_provided\",\n    desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\nvar BrowserConfigurationAuthError = /** @class */function (_super) {\n  __extends(BrowserConfigurationAuthError, _super);\n  function BrowserConfigurationAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n    _this.name = \"BrowserConfigurationAuthError\";\n    Object.setPrototypeOf(_this, BrowserConfigurationAuthError.prototype);\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n   */\n  BrowserConfigurationAuthError.createRedirectUriEmptyError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n   */\n  BrowserConfigurationAuthError.createPostLogoutRedirectUriEmptyError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n  };\n  /**\r\n   * Creates error thrown when given storage location is not supported.\r\n   * @param givenStorageLocation\r\n   */\n  BrowserConfigurationAuthError.createStorageNotSupportedError = function (givenStorageLocation) {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc + \" Given Location: \" + givenStorageLocation);\n  };\n  /**\r\n   * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n   */\n  BrowserConfigurationAuthError.createRedirectCallbacksNotSetError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n  };\n  /**\r\n   * Creates error thrown when the stub instance of PublicClientApplication is called.\r\n   */\n  BrowserConfigurationAuthError.createStubPcaInstanceCalledError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code, BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n  };\n  /*\r\n   * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\r\n   */\n  BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n  };\n  /**\r\n   * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\r\n   */\n  BrowserConfigurationAuthError.createEntropyNotProvided = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n  };\n  return BrowserConfigurationAuthError;\n}(AuthError);\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage };","map":{"version":3,"names":["__extends","AuthError","BrowserConfigurationAuthErrorMessage","redirectUriNotSet","code","desc","postLogoutUriNotSet","storageNotSupportedError","noRedirectCallbacksSet","invalidCallbackObject","stubPcaInstanceCalled","inMemRedirectUnavailable","entropyNotProvided","BrowserConfigurationAuthError","_super","errorCode","errorMessage","_this","call","name","Object","setPrototypeOf","prototype","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","createStorageNotSupportedError","givenStorageLocation","createRedirectCallbacksNotSetError","createStubPcaInstanceCalledError","createInMemoryRedirectUnavailableError","createEntropyNotProvided"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from '@azure/msal-common';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar BrowserConfigurationAuthErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    storageNotSupportedError: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"Given storage configuration option was not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    stubPcaInstanceCalled: {\r\n        code: \"stubbed_public_client_application_called\",\r\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\r\n    },\r\n    inMemRedirectUnavailable: {\r\n        code: \"in_mem_redirect_unavailable\",\r\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\r\n    },\r\n    entropyNotProvided: {\r\n        code: \"entropy_not_provided\",\r\n        desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\"\r\n    }\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nvar BrowserConfigurationAuthError = /** @class */ (function (_super) {\r\n    __extends(BrowserConfigurationAuthError, _super);\r\n    function BrowserConfigurationAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"BrowserConfigurationAuthError\";\r\n        Object.setPrototypeOf(_this, BrowserConfigurationAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    BrowserConfigurationAuthError.createRedirectUriEmptyError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    BrowserConfigurationAuthError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates error thrown when given storage location is not supported.\r\n     * @param givenStorageLocation\r\n     */\r\n    BrowserConfigurationAuthError.createStorageNotSupportedError = function (givenStorageLocation) {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc + \" Given Location: \" + givenStorageLocation);\r\n    };\r\n    /**\r\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n     */\r\n    BrowserConfigurationAuthError.createRedirectCallbacksNotSetError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\r\n    };\r\n    /**\r\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\r\n     */\r\n    BrowserConfigurationAuthError.createStubPcaInstanceCalledError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code, BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\r\n    };\r\n    /*\r\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\r\n     */\r\n    BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\r\n     */\r\n    BrowserConfigurationAuthError.createEntropyNotProvided = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\r\n    };\r\n    return BrowserConfigurationAuthError;\r\n}(AuthError));\n\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,QAAQ,uBAAuB;AACjD,SAASC,SAAS,QAAQ,oBAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,oCAAoC,GAAG;EACvCC,iBAAiB,EAAE;IACfC,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;EACV,CAAC;EACDC,mBAAmB,EAAE;IACjBF,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE;EACV,CAAC;EACDE,wBAAwB,EAAE;IACtBH,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE;EACV,CAAC;EACDG,sBAAsB,EAAE;IACpBJ,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE,qIAAqI,GACvI;EACR,CAAC;EACDI,qBAAqB,EAAE;IACnBL,IAAI,EAAE,yBAAyB;IAC/BC,IAAI,EAAE,kDAAkD,GACpD;EACR,CAAC;EACDK,qBAAqB,EAAE;IACnBN,IAAI,EAAE,0CAA0C;IAChDC,IAAI,EAAE;EACV,CAAC;EACDM,wBAAwB,EAAE;IACtBP,IAAI,EAAE,6BAA6B;IACnCC,IAAI,EAAE;EACV,CAAC;EACDO,kBAAkB,EAAE;IAChBR,IAAI,EAAE,sBAAsB;IAC5BC,IAAI,EAAE;EACV;AACJ,CAAC;AACD;AACA;AACA;AACA,IAAIQ,6BAA6B,GAAG,aAAe,UAAUC,MAAM,EAAE;EACjEd,SAAS,CAACa,6BAA6B,EAAEC,MAAM,CAAC;EAChD,SAASD,6BAA6BA,CAACE,SAAS,EAAEC,YAAY,EAAE;IAC5D,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,EAAEH,SAAS,EAAEC,YAAY,CAAC,IAAI,IAAI;IAC9DC,KAAK,CAACE,IAAI,GAAG,+BAA+B;IAC5CC,MAAM,CAACC,cAAc,CAACJ,KAAK,EAAEJ,6BAA6B,CAACS,SAAS,CAAC;IACrE,OAAOL,KAAK;EAChB;EACA;AACJ;AACA;EACIJ,6BAA6B,CAACU,2BAA2B,GAAG,YAAY;IACpE,OAAO,IAAIV,6BAA6B,CAACX,oCAAoC,CAACC,iBAAiB,CAACC,IAAI,EAAEF,oCAAoC,CAACC,iBAAiB,CAACE,IAAI,CAAC;EACtK,CAAC;EACD;AACJ;AACA;EACIQ,6BAA6B,CAACW,qCAAqC,GAAG,YAAY;IAC9E,OAAO,IAAIX,6BAA6B,CAACX,oCAAoC,CAACI,mBAAmB,CAACF,IAAI,EAAEF,oCAAoC,CAACI,mBAAmB,CAACD,IAAI,CAAC;EAC1K,CAAC;EACD;AACJ;AACA;AACA;EACIQ,6BAA6B,CAACY,8BAA8B,GAAG,UAAUC,oBAAoB,EAAE;IAC3F,OAAO,IAAIb,6BAA6B,CAACX,oCAAoC,CAACK,wBAAwB,CAACH,IAAI,EAAEF,oCAAoC,CAACK,wBAAwB,CAACF,IAAI,GAAG,mBAAmB,GAAGqB,oBAAoB,CAAC;EACjO,CAAC;EACD;AACJ;AACA;EACIb,6BAA6B,CAACc,kCAAkC,GAAG,YAAY;IAC3E,OAAO,IAAId,6BAA6B,CAACX,oCAAoC,CAACM,sBAAsB,CAACJ,IAAI,EAAEF,oCAAoC,CAACM,sBAAsB,CAACH,IAAI,CAAC;EAChL,CAAC;EACD;AACJ;AACA;EACIQ,6BAA6B,CAACe,gCAAgC,GAAG,YAAY;IACzE,OAAO,IAAIf,6BAA6B,CAACX,oCAAoC,CAACQ,qBAAqB,CAACN,IAAI,EAAEF,oCAAoC,CAACQ,qBAAqB,CAACL,IAAI,CAAC;EAC9K,CAAC;EACD;AACJ;AACA;EACIQ,6BAA6B,CAACgB,sCAAsC,GAAG,YAAY;IAC/E,OAAO,IAAIhB,6BAA6B,CAACX,oCAAoC,CAACS,wBAAwB,CAACP,IAAI,EAAEF,oCAAoC,CAACS,wBAAwB,CAACN,IAAI,CAAC;EACpL,CAAC;EACD;AACJ;AACA;EACIQ,6BAA6B,CAACiB,wBAAwB,GAAG,YAAY;IACjE,OAAO,IAAIjB,6BAA6B,CAACX,oCAAoC,CAACU,kBAAkB,CAACR,IAAI,EAAEF,oCAAoC,CAACU,kBAAkB,CAACP,IAAI,CAAC;EACxK,CAAC;EACD,OAAOQ,6BAA6B;AACxC,CAAC,CAACZ,SAAS,CAAE;AAEb,SAASY,6BAA6B,EAAEX,oCAAoC"},"metadata":{},"sourceType":"module","externalDependencies":[]}