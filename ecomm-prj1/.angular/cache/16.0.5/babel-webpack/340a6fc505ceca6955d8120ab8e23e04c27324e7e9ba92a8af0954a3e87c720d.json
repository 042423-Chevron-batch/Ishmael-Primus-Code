{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n  return {\n    name: formDataPolicyName,\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        if (request.formData) {\n          const formData = request.formData;\n          const requestForm = new FormData();\n          for (const formKey of Object.keys(formData)) {\n            const formValue = formData[formKey];\n            if (Array.isArray(formValue)) {\n              for (const subValue of formValue) {\n                requestForm.append(formKey, subValue);\n              }\n            } else {\n              requestForm.append(formKey, formValue);\n            }\n          }\n          request.body = requestForm;\n          request.formData = undefined;\n          const contentType = request.headers.get(\"Content-Type\");\n          if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n            request.body = new URLSearchParams(requestForm).toString();\n          } else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n            // browser will automatically apply a suitable content-type header\n            request.headers.delete(\"Content-Type\");\n          }\n        }\n        return next(request);\n      })();\n    }\n  };\n}","map":{"version":3,"names":["formDataPolicyName","formDataPolicy","name","sendRequest","request","next","_asyncToGenerator","formData","requestForm","FormData","formKey","Object","keys","formValue","Array","isArray","subValue","append","body","undefined","contentType","headers","get","indexOf","URLSearchParams","toString","delete"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/formDataPolicy.browser.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (request.formData) {\n                const formData = request.formData;\n                const requestForm = new FormData();\n                for (const formKey of Object.keys(formData)) {\n                    const formValue = formData[formKey];\n                    if (Array.isArray(formValue)) {\n                        for (const subValue of formValue) {\n                            requestForm.append(formKey, subValue);\n                        }\n                    }\n                    else {\n                        requestForm.append(formKey, formValue);\n                    }\n                }\n                request.body = requestForm;\n                request.formData = undefined;\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = new URLSearchParams(requestForm).toString();\n                }\n                else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                    // browser will automatically apply a suitable content-type header\n                    request.headers.delete(\"Content-Type\");\n                }\n            }\n            return next(request);\n        },\n    };\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,kBAAkB,GAAG,gBAAgB;AAClD;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC7B,OAAO;IACHC,IAAI,EAAEF,kBAAkB;IAClBG,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAAA,OAAAC,iBAAA;QAC7B,IAAIF,OAAO,CAACG,QAAQ,EAAE;UAClB,MAAMA,QAAQ,GAAGH,OAAO,CAACG,QAAQ;UACjC,MAAMC,WAAW,GAAG,IAAIC,QAAQ,EAAE;UAClC,KAAK,MAAMC,OAAO,IAAIC,MAAM,CAACC,IAAI,CAACL,QAAQ,CAAC,EAAE;YACzC,MAAMM,SAAS,GAAGN,QAAQ,CAACG,OAAO,CAAC;YACnC,IAAII,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;cAC1B,KAAK,MAAMG,QAAQ,IAAIH,SAAS,EAAE;gBAC9BL,WAAW,CAACS,MAAM,CAACP,OAAO,EAAEM,QAAQ,CAAC;cACzC;YACJ,CAAC,MACI;cACDR,WAAW,CAACS,MAAM,CAACP,OAAO,EAAEG,SAAS,CAAC;YAC1C;UACJ;UACAT,OAAO,CAACc,IAAI,GAAGV,WAAW;UAC1BJ,OAAO,CAACG,QAAQ,GAAGY,SAAS;UAC5B,MAAMC,WAAW,GAAGhB,OAAO,CAACiB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UACvD,IAAIF,WAAW,IAAIA,WAAW,CAACG,OAAO,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC,EAAE;YAChFnB,OAAO,CAACc,IAAI,GAAG,IAAIM,eAAe,CAAChB,WAAW,CAAC,CAACiB,QAAQ,EAAE;UAC9D,CAAC,MACI,IAAIL,WAAW,IAAIA,WAAW,CAACG,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;YACvE;YACAnB,OAAO,CAACiB,OAAO,CAACK,MAAM,CAAC,cAAc,CAAC;UAC1C;QACJ;QACA,OAAOrB,IAAI,CAACD,OAAO,CAAC;MAAC;IACzB;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}