{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { StringUtils, ProtocolUtils, ClientAuthError, UrlString } from '@azure/msal-common';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar BrowserProtocolUtils = /** @class */function () {\n  function BrowserProtocolUtils() {}\n  /**\r\n   * Extracts the BrowserStateObject from the state string.\r\n   * @param browserCrypto\r\n   * @param state\r\n   */\n  BrowserProtocolUtils.extractBrowserRequestState = function (browserCrypto, state) {\n    if (StringUtils.isEmpty(state)) {\n      return null;\n    }\n    try {\n      var requestStateObj = ProtocolUtils.parseRequestState(browserCrypto, state);\n      return requestStateObj.libraryState.meta;\n    } catch (e) {\n      throw ClientAuthError.createInvalidStateError(state, e);\n    }\n  };\n  /**\r\n   * Parses properties of server response from url hash\r\n   * @param locationHash Hash from url\r\n   */\n  BrowserProtocolUtils.parseServerResponseFromHash = function (locationHash) {\n    if (!locationHash) {\n      return {};\n    }\n    var hashUrlString = new UrlString(locationHash);\n    return UrlString.getDeserializedHash(hashUrlString.getHash());\n  };\n  return BrowserProtocolUtils;\n}();\nexport { BrowserProtocolUtils };","map":{"version":3,"names":["StringUtils","ProtocolUtils","ClientAuthError","UrlString","BrowserProtocolUtils","extractBrowserRequestState","browserCrypto","state","isEmpty","requestStateObj","parseRequestState","libraryState","meta","e","createInvalidStateError","parseServerResponseFromHash","locationHash","hashUrlString","getDeserializedHash","getHash"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { StringUtils, ProtocolUtils, ClientAuthError, UrlString } from '@azure/msal-common';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar BrowserProtocolUtils = /** @class */ (function () {\r\n    function BrowserProtocolUtils() {\r\n    }\r\n    /**\r\n     * Extracts the BrowserStateObject from the state string.\r\n     * @param browserCrypto\r\n     * @param state\r\n     */\r\n    BrowserProtocolUtils.extractBrowserRequestState = function (browserCrypto, state) {\r\n        if (StringUtils.isEmpty(state)) {\r\n            return null;\r\n        }\r\n        try {\r\n            var requestStateObj = ProtocolUtils.parseRequestState(browserCrypto, state);\r\n            return requestStateObj.libraryState.meta;\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    /**\r\n     * Parses properties of server response from url hash\r\n     * @param locationHash Hash from url\r\n     */\r\n    BrowserProtocolUtils.parseServerResponseFromHash = function (locationHash) {\r\n        if (!locationHash) {\r\n            return {};\r\n        }\r\n        var hashUrlString = new UrlString(locationHash);\r\n        return UrlString.getDeserializedHash(hashUrlString.getHash());\r\n    };\r\n    return BrowserProtocolUtils;\r\n}());\n\nexport { BrowserProtocolUtils };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,WAAW,EAAEC,aAAa,EAAEC,eAAe,EAAEC,SAAS,QAAQ,oBAAoB;;AAE3F;AACA;AACA;AACA;AACA,IAAIC,oBAAoB,GAAG,aAAe,YAAY;EAClD,SAASA,oBAAoBA,CAAA,EAAG,CAChC;EACA;AACJ;AACA;AACA;AACA;EACIA,oBAAoB,CAACC,0BAA0B,GAAG,UAAUC,aAAa,EAAEC,KAAK,EAAE;IAC9E,IAAIP,WAAW,CAACQ,OAAO,CAACD,KAAK,CAAC,EAAE;MAC5B,OAAO,IAAI;IACf;IACA,IAAI;MACA,IAAIE,eAAe,GAAGR,aAAa,CAACS,iBAAiB,CAACJ,aAAa,EAAEC,KAAK,CAAC;MAC3E,OAAOE,eAAe,CAACE,YAAY,CAACC,IAAI;IAC5C,CAAC,CACD,OAAOC,CAAC,EAAE;MACN,MAAMX,eAAe,CAACY,uBAAuB,CAACP,KAAK,EAAEM,CAAC,CAAC;IAC3D;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACIT,oBAAoB,CAACW,2BAA2B,GAAG,UAAUC,YAAY,EAAE;IACvE,IAAI,CAACA,YAAY,EAAE;MACf,OAAO,CAAC,CAAC;IACb;IACA,IAAIC,aAAa,GAAG,IAAId,SAAS,CAACa,YAAY,CAAC;IAC/C,OAAOb,SAAS,CAACe,mBAAmB,CAACD,aAAa,CAACE,OAAO,EAAE,CAAC;EACjE,CAAC;EACD,OAAOf,oBAAoB;AAC/B,CAAC,EAAG;AAEJ,SAASA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}