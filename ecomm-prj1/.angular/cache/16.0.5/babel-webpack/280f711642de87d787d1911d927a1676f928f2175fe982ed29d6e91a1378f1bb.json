{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transaction = exports.OPERATION_TYPE = exports.ISOLATION_LEVEL = void 0;\nexports.assertValidIsolationLevel = assertValidIsolationLevel;\nexports.isolationLevelByValue = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar _allHeaders = require(\"./all-headers\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/*\n  s2.2.6.8\n */\nconst OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\nexports.OPERATION_TYPE = OPERATION_TYPE;\nconst ISOLATION_LEVEL = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\nconst isolationLevelByValue = {};\nexports.isolationLevelByValue = isolationLevelByValue;\nfor (const name in ISOLATION_LEVEL) {\n  const value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\nfunction assertValidIsolationLevel(isolationLevel, name) {\n  if (typeof isolationLevel !== 'number') {\n    throw new TypeError(`The \"${name}\" ${name.includes('.') ? 'property' : 'argument'} must be of type number. Received type ${typeof isolationLevel} (${isolationLevel})`);\n  }\n  if (!Number.isInteger(isolationLevel)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be an integer. Received: ${isolationLevel}`);\n  }\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be >= 0 && <= 5. Received: ${isolationLevel}`);\n  }\n}\nclass Transaction {\n  constructor(name, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\n    this.name = void 0;\n    this.isolationLevel = void 0;\n    this.outstandingRequestCount = void 0;\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n  beginPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ucs2');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n    buffer.writeUInt8(this.isolationLevel);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\n      }\n    };\n  }\n  commitPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Commit Transaction: name=' + this.name;\n      }\n    };\n  }\n  rollbackPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Rollback Transaction: name=' + this.name;\n      }\n    };\n  }\n  savePayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Save Transaction: name=' + this.name;\n      }\n    };\n  }\n  isolationLevelToTSQL() {\n    switch (this.isolationLevel) {\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\n        return 'READ UNCOMMITTED';\n      case ISOLATION_LEVEL.READ_COMMITTED:\n        return 'READ COMMITTED';\n      case ISOLATION_LEVEL.REPEATABLE_READ:\n        return 'REPEATABLE READ';\n      case ISOLATION_LEVEL.SERIALIZABLE:\n        return 'SERIALIZABLE';\n      case ISOLATION_LEVEL.SNAPSHOT:\n        return 'SNAPSHOT';\n    }\n    return '';\n  }\n}\nexports.Transaction = Transaction;","map":{"version":3,"names":["Object","defineProperty","exports","value","Transaction","OPERATION_TYPE","ISOLATION_LEVEL","assertValidIsolationLevel","isolationLevelByValue","_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","obj","__esModule","default","TM_GET_DTC_ADDRESS","TM_PROPAGATE_XACT","TM_BEGIN_XACT","TM_PROMOTE_XACT","TM_COMMIT_XACT","TM_ROLLBACK_XACT","TM_SAVE_XACT","NO_CHANGE","READ_UNCOMMITTED","READ_COMMITTED","REPEATABLE_READ","SERIALIZABLE","SNAPSHOT","name","isolationLevel","TypeError","includes","Number","isInteger","RangeError","constructor","outstandingRequestCount","beginPayload","txnDescriptor","buffer","writeToTrackingBuffer","writeUShort","writeUInt8","length","writeString","Symbol","iterator","data","toString","commitPayload","rollbackPayload","savePayload","isolationLevelToTSQL"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/transaction.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transaction = exports.OPERATION_TYPE = exports.ISOLATION_LEVEL = void 0;\nexports.assertValidIsolationLevel = assertValidIsolationLevel;\nexports.isolationLevelByValue = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  s2.2.6.8\n */\nconst OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\nexports.OPERATION_TYPE = OPERATION_TYPE;\nconst ISOLATION_LEVEL = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\nconst isolationLevelByValue = {};\nexports.isolationLevelByValue = isolationLevelByValue;\n\nfor (const name in ISOLATION_LEVEL) {\n  const value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\n\nfunction assertValidIsolationLevel(isolationLevel, name) {\n  if (typeof isolationLevel !== 'number') {\n    throw new TypeError(`The \"${name}\" ${name.includes('.') ? 'property' : 'argument'} must be of type number. Received type ${typeof isolationLevel} (${isolationLevel})`);\n  }\n\n  if (!Number.isInteger(isolationLevel)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be an integer. Received: ${isolationLevel}`);\n  }\n\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be >= 0 && <= 5. Received: ${isolationLevel}`);\n  }\n}\n\nclass Transaction {\n  constructor(name, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\n    this.name = void 0;\n    this.isolationLevel = void 0;\n    this.outstandingRequestCount = void 0;\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n\n  beginPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ucs2');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n    buffer.writeUInt8(this.isolationLevel);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n\n      toString: () => {\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\n      }\n    };\n  }\n\n  commitPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n\n      toString: () => {\n        return 'Commit Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  rollbackPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n\n      toString: () => {\n        return 'Rollback Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  savePayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n\n      toString: () => {\n        return 'Save Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  isolationLevelToTSQL() {\n    switch (this.isolationLevel) {\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\n        return 'READ UNCOMMITTED';\n\n      case ISOLATION_LEVEL.READ_COMMITTED:\n        return 'READ COMMITTED';\n\n      case ISOLATION_LEVEL.REPEATABLE_READ:\n        return 'REPEATABLE READ';\n\n      case ISOLATION_LEVEL.SERIALIZABLE:\n        return 'SERIALIZABLE';\n\n      case ISOLATION_LEVEL.SNAPSHOT:\n        return 'SNAPSHOT';\n    }\n\n    return '';\n  }\n\n}\n\nexports.Transaction = Transaction;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACG,cAAc,GAAGH,OAAO,CAACI,eAAe,GAAG,KAAK,CAAC;AAC/EJ,OAAO,CAACK,yBAAyB,GAAGA,yBAAyB;AAC7DL,OAAO,CAACM,qBAAqB,GAAG,KAAK,CAAC;AAEtC,IAAIC,uBAAuB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAE3G,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAE1C,SAASD,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA,MAAMR,cAAc,GAAG;EACrBW,kBAAkB,EAAE,IAAI;EACxBC,iBAAiB,EAAE,IAAI;EACvBC,aAAa,EAAE,IAAI;EACnBC,eAAe,EAAE,IAAI;EACrBC,cAAc,EAAE,IAAI;EACpBC,gBAAgB,EAAE,IAAI;EACtBC,YAAY,EAAE;AAChB,CAAC;AACDpB,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvC,MAAMC,eAAe,GAAG;EACtBiB,SAAS,EAAE,IAAI;EACfC,gBAAgB,EAAE,IAAI;EACtBC,cAAc,EAAE,IAAI;EACpBC,eAAe,EAAE,IAAI;EACrBC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;AACZ,CAAC;AACD1B,OAAO,CAACI,eAAe,GAAGA,eAAe;AACzC,MAAME,qBAAqB,GAAG,CAAC,CAAC;AAChCN,OAAO,CAACM,qBAAqB,GAAGA,qBAAqB;AAErD,KAAK,MAAMqB,IAAI,IAAIvB,eAAe,EAAE;EAClC,MAAMH,KAAK,GAAGG,eAAe,CAACuB,IAAI,CAAC;EACnCrB,qBAAqB,CAACL,KAAK,CAAC,GAAG0B,IAAI;AACrC;AAEA,SAAStB,yBAAyBA,CAACuB,cAAc,EAAED,IAAI,EAAE;EACvD,IAAI,OAAOC,cAAc,KAAK,QAAQ,EAAE;IACtC,MAAM,IAAIC,SAAS,CAAE,QAAOF,IAAK,KAAIA,IAAI,CAACG,QAAQ,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,UAAW,0CAAyC,OAAOF,cAAe,KAAIA,cAAe,GAAE,CAAC;EACzK;EAEA,IAAI,CAACG,MAAM,CAACC,SAAS,CAACJ,cAAc,CAAC,EAAE;IACrC,MAAM,IAAIK,UAAU,CAAE,iBAAgBN,IAAK,uDAAsDC,cAAe,EAAC,CAAC;EACpH;EAEA,IAAI,EAAEA,cAAc,IAAI,CAAC,IAAIA,cAAc,IAAI,CAAC,CAAC,EAAE;IACjD,MAAM,IAAIK,UAAU,CAAE,iBAAgBN,IAAK,yDAAwDC,cAAe,EAAC,CAAC;EACtH;AACF;AAEA,MAAM1B,WAAW,CAAC;EAChBgC,WAAWA,CAACP,IAAI,EAAEC,cAAc,GAAGxB,eAAe,CAACiB,SAAS,EAAE;IAC5D,IAAI,CAACM,IAAI,GAAG,KAAK,CAAC;IAClB,IAAI,CAACC,cAAc,GAAG,KAAK,CAAC;IAC5B,IAAI,CAACO,uBAAuB,GAAG,KAAK,CAAC;IACrC,IAAI,CAACR,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACO,uBAAuB,GAAG,CAAC;EAClC;EAEAC,YAAYA,CAACC,aAAa,EAAE;IAC1B,MAAMC,MAAM,GAAG,IAAI/B,uBAAuB,CAACM,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC;IAC/D,CAAC,CAAC,EAAEH,WAAW,CAAC6B,qBAAqB,EAAED,MAAM,EAAED,aAAa,EAAE,IAAI,CAACF,uBAAuB,CAAC;IAC3FG,MAAM,CAACE,WAAW,CAACrC,cAAc,CAACa,aAAa,CAAC;IAChDsB,MAAM,CAACG,UAAU,CAAC,IAAI,CAACb,cAAc,CAAC;IACtCU,MAAM,CAACG,UAAU,CAAC,IAAI,CAACd,IAAI,CAACe,MAAM,GAAG,CAAC,CAAC;IACvCJ,MAAM,CAACK,WAAW,CAAC,IAAI,CAAChB,IAAI,EAAE,MAAM,CAAC;IACrC,OAAO;MACL,EAAEiB,MAAM,CAACC,QAAQ,IAAI;QACnB,MAAMP,MAAM,CAACQ,IAAI;MACnB,CAAC;MAEDC,QAAQ,EAAEA,CAAA,KAAM;QACd,OAAO,0BAA0B,GAAG,IAAI,CAACpB,IAAI,GAAG,mBAAmB,GAAGrB,qBAAqB,CAAC,IAAI,CAACsB,cAAc,CAAC;MAClH;IACF,CAAC;EACH;EAEAoB,aAAaA,CAACX,aAAa,EAAE;IAC3B,MAAMC,MAAM,GAAG,IAAI/B,uBAAuB,CAACM,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC;IAChE,CAAC,CAAC,EAAEH,WAAW,CAAC6B,qBAAqB,EAAED,MAAM,EAAED,aAAa,EAAE,IAAI,CAACF,uBAAuB,CAAC;IAC3FG,MAAM,CAACE,WAAW,CAACrC,cAAc,CAACe,cAAc,CAAC;IACjDoB,MAAM,CAACG,UAAU,CAAC,IAAI,CAACd,IAAI,CAACe,MAAM,GAAG,CAAC,CAAC;IACvCJ,MAAM,CAACK,WAAW,CAAC,IAAI,CAAChB,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;;IAEvCW,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC;IACpB,OAAO;MACL,EAAEG,MAAM,CAACC,QAAQ,IAAI;QACnB,MAAMP,MAAM,CAACQ,IAAI;MACnB,CAAC;MAEDC,QAAQ,EAAEA,CAAA,KAAM;QACd,OAAO,2BAA2B,GAAG,IAAI,CAACpB,IAAI;MAChD;IACF,CAAC;EACH;EAEAsB,eAAeA,CAACZ,aAAa,EAAE;IAC7B,MAAMC,MAAM,GAAG,IAAI/B,uBAAuB,CAACM,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC;IAChE,CAAC,CAAC,EAAEH,WAAW,CAAC6B,qBAAqB,EAAED,MAAM,EAAED,aAAa,EAAE,IAAI,CAACF,uBAAuB,CAAC;IAC3FG,MAAM,CAACE,WAAW,CAACrC,cAAc,CAACgB,gBAAgB,CAAC;IACnDmB,MAAM,CAACG,UAAU,CAAC,IAAI,CAACd,IAAI,CAACe,MAAM,GAAG,CAAC,CAAC;IACvCJ,MAAM,CAACK,WAAW,CAAC,IAAI,CAAChB,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;;IAEvCW,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC;IACpB,OAAO;MACL,EAAEG,MAAM,CAACC,QAAQ,IAAI;QACnB,MAAMP,MAAM,CAACQ,IAAI;MACnB,CAAC;MAEDC,QAAQ,EAAEA,CAAA,KAAM;QACd,OAAO,6BAA6B,GAAG,IAAI,CAACpB,IAAI;MAClD;IACF,CAAC;EACH;EAEAuB,WAAWA,CAACb,aAAa,EAAE;IACzB,MAAMC,MAAM,GAAG,IAAI/B,uBAAuB,CAACM,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC;IAChE,CAAC,CAAC,EAAEH,WAAW,CAAC6B,qBAAqB,EAAED,MAAM,EAAED,aAAa,EAAE,IAAI,CAACF,uBAAuB,CAAC;IAC3FG,MAAM,CAACE,WAAW,CAACrC,cAAc,CAACiB,YAAY,CAAC;IAC/CkB,MAAM,CAACG,UAAU,CAAC,IAAI,CAACd,IAAI,CAACe,MAAM,GAAG,CAAC,CAAC;IACvCJ,MAAM,CAACK,WAAW,CAAC,IAAI,CAAChB,IAAI,EAAE,MAAM,CAAC;IACrC,OAAO;MACL,EAAEiB,MAAM,CAACC,QAAQ,IAAI;QACnB,MAAMP,MAAM,CAACQ,IAAI;MACnB,CAAC;MAEDC,QAAQ,EAAEA,CAAA,KAAM;QACd,OAAO,yBAAyB,GAAG,IAAI,CAACpB,IAAI;MAC9C;IACF,CAAC;EACH;EAEAwB,oBAAoBA,CAAA,EAAG;IACrB,QAAQ,IAAI,CAACvB,cAAc;MACzB,KAAKxB,eAAe,CAACkB,gBAAgB;QACnC,OAAO,kBAAkB;MAE3B,KAAKlB,eAAe,CAACmB,cAAc;QACjC,OAAO,gBAAgB;MAEzB,KAAKnB,eAAe,CAACoB,eAAe;QAClC,OAAO,iBAAiB;MAE1B,KAAKpB,eAAe,CAACqB,YAAY;QAC/B,OAAO,cAAc;MAEvB,KAAKrB,eAAe,CAACsB,QAAQ;QAC3B,OAAO,UAAU;IAAC;IAGtB,OAAO,EAAE;EACX;AAEF;AAEA1B,OAAO,CAACE,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}