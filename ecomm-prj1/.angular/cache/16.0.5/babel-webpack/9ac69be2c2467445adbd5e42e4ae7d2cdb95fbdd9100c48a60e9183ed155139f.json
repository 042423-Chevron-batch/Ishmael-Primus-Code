{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst Time = {\n  id: 0x29,\n  type: 'TIMEN',\n  name: 'Time',\n  declaration: function (parameter) {\n    return 'time(' + this.resolveScale(parameter) + ')';\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else if (parameter.value === null) {\n      return 0;\n    } else {\n      return 7;\n    }\n  },\n  generateTypeInfo(parameter) {\n    return Buffer.from([this.id, parameter.scale]);\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        return Buffer.from([0x03]);\n      case 3:\n      case 4:\n        return Buffer.from([0x04]);\n      case 5:\n      case 6:\n      case 7:\n        return Buffer.from([0x05]);\n      default:\n        throw new Error('invalid scale');\n    }\n  },\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n    const buffer = new _writableTrackingBuffer.default(16);\n    const time = parameter.value;\n    let timestamp;\n    if (options.useUTC) {\n      timestamp = ((time.getUTCHours() * 60 + time.getUTCMinutes()) * 60 + time.getUTCSeconds()) * 1000 + time.getUTCMilliseconds();\n    } else {\n      timestamp = ((time.getHours() * 60 + time.getMinutes()) * 60 + time.getSeconds()) * 1000 + time.getMilliseconds();\n    }\n    timestamp = timestamp * Math.pow(10, parameter.scale - 3);\n    timestamp += (parameter.value.nanosecondDelta != null ? parameter.value.nanosecondDelta : 0) * Math.pow(10, parameter.scale);\n    timestamp = Math.round(timestamp);\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        buffer.writeUInt24LE(timestamp);\n        break;\n      case 3:\n      case 4:\n        buffer.writeUInt32LE(timestamp);\n        break;\n      case 5:\n      case 6:\n      case 7:\n        buffer.writeUInt40LE(timestamp);\n    }\n    yield buffer.data;\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n    if (isNaN(value)) {\n      throw new TypeError('Invalid time.');\n    }\n    return value;\n  }\n};\nvar _default = Time;\nexports.default = _default;\nmodule.exports = Time;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_writableTrackingBuffer","_interopRequireDefault","require","obj","__esModule","NULL_LENGTH","Buffer","from","Time","id","type","name","declaration","parameter","resolveScale","scale","generateTypeInfo","generateParameterLength","options","Error","generateParameterData","buffer","time","timestamp","useUTC","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","Math","pow","nanosecondDelta","round","writeUInt24LE","writeUInt32LE","writeUInt40LE","data","validate","Date","parse","isNaN","TypeError","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/data-types/time.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst Time = {\n  id: 0x29,\n  type: 'TIMEN',\n  name: 'Time',\n  declaration: function (parameter) {\n    return 'time(' + this.resolveScale(parameter) + ')';\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else if (parameter.value === null) {\n      return 0;\n    } else {\n      return 7;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    return Buffer.from([this.id, parameter.scale]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        return Buffer.from([0x03]);\n\n      case 3:\n      case 4:\n        return Buffer.from([0x04]);\n\n      case 5:\n      case 6:\n      case 7:\n        return Buffer.from([0x05]);\n\n      default:\n        throw new Error('invalid scale');\n    }\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const buffer = new _writableTrackingBuffer.default(16);\n    const time = parameter.value;\n    let timestamp;\n\n    if (options.useUTC) {\n      timestamp = ((time.getUTCHours() * 60 + time.getUTCMinutes()) * 60 + time.getUTCSeconds()) * 1000 + time.getUTCMilliseconds();\n    } else {\n      timestamp = ((time.getHours() * 60 + time.getMinutes()) * 60 + time.getSeconds()) * 1000 + time.getMilliseconds();\n    }\n\n    timestamp = timestamp * Math.pow(10, parameter.scale - 3);\n    timestamp += (parameter.value.nanosecondDelta != null ? parameter.value.nanosecondDelta : 0) * Math.pow(10, parameter.scale);\n    timestamp = Math.round(timestamp);\n\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        buffer.writeUInt24LE(timestamp);\n        break;\n\n      case 3:\n      case 4:\n        buffer.writeUInt32LE(timestamp);\n        break;\n\n      case 5:\n      case 6:\n      case 7:\n        buffer.writeUInt40LE(timestamp);\n    }\n\n    yield buffer.data;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid time.');\n    }\n\n    return value;\n  }\n};\nvar _default = Time;\nexports.default = _default;\nmodule.exports = Time;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}