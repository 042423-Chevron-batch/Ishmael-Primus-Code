{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst Binary = {\n  id: 0xAD,\n  type: 'BIGBinary',\n  name: 'Binary',\n  maximumLength: 8000,\n  declaration: function (parameter) {\n    const value = parameter.value;\n    let length;\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n    return 'binary(' + length + ')';\n  },\n  resolveLength: function (parameter) {\n    const value = parameter.value;\n    if (value != null) {\n      return value.length;\n    } else {\n      return this.maximumLength;\n    }\n  },\n  generateTypeInfo(parameter) {\n    const buffer = Buffer.alloc(3);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeUInt16LE(parameter.length, 1);\n    return buffer;\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    const buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(parameter.length, 0);\n    return buffer;\n  },\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n    yield parameter.value.slice(0, parameter.length !== undefined ? Math.min(parameter.length, this.maximumLength) : this.maximumLength);\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n    return value;\n  }\n};\nvar _default = Binary;\nexports.default = _default;\nmodule.exports = Binary;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","NULL_LENGTH","Buffer","from","Binary","id","type","name","maximumLength","declaration","parameter","length","output","resolveLength","generateTypeInfo","buffer","alloc","writeUInt8","writeUInt16LE","generateParameterLength","options","generateParameterData","slice","undefined","Math","min","validate","isBuffer","TypeError","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/data-types/binary.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst Binary = {\n  id: 0xAD,\n  type: 'BIGBinary',\n  name: 'Binary',\n  maximumLength: 8000,\n  declaration: function (parameter) {\n    const value = parameter.value;\n    let length;\n\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    return 'binary(' + length + ')';\n  },\n  resolveLength: function (parameter) {\n    const value = parameter.value;\n\n    if (value != null) {\n      return value.length;\n    } else {\n      return this.maximumLength;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    const buffer = Buffer.alloc(3);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeUInt16LE(parameter.length, 1);\n    return buffer;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(parameter.length, 0);\n    return buffer;\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    yield parameter.value.slice(0, parameter.length !== undefined ? Math.min(parameter.length, this.maximumLength) : this.maximumLength);\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n\n    return value;\n  }\n};\nvar _default = Binary;\nexports.default = _default;\nmodule.exports = Binary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}