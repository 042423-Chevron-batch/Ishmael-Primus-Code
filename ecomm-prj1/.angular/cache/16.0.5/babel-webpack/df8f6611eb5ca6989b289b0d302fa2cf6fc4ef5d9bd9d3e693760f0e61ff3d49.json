{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _intn = _interopRequireDefault(require(\"./intn\"));\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst DATA_LENGTH = Buffer.from([0x08]);\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst BigInt = {\n  id: 0x7F,\n  type: 'INT8',\n  name: 'BigInt',\n  declaration: function () {\n    return 'bigint';\n  },\n  generateTypeInfo() {\n    return Buffer.from([_intn.default.id, 0x08]);\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    return DATA_LENGTH;\n  },\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n    const buffer = new _writableTrackingBuffer.default(8);\n    buffer.writeInt64LE(Number(parameter.value));\n    yield buffer.data;\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n    if (value < Number.MIN_SAFE_INTEGER || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(`Value must be between ${Number.MIN_SAFE_INTEGER} and ${Number.MAX_SAFE_INTEGER}, inclusive.  For smaller or bigger numbers, use VarChar type.`);\n    }\n    return value;\n  }\n};\nvar _default = BigInt;\nexports.default = _default;\nmodule.exports = BigInt;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_intn","_interopRequireDefault","require","_writableTrackingBuffer","obj","__esModule","DATA_LENGTH","Buffer","from","NULL_LENGTH","BigInt","id","type","name","declaration","generateTypeInfo","generateParameterLength","parameter","options","generateParameterData","buffer","writeInt64LE","Number","data","validate","isNaN","TypeError","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/data-types/bigint.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _intn = _interopRequireDefault(require(\"./intn\"));\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst DATA_LENGTH = Buffer.from([0x08]);\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst BigInt = {\n  id: 0x7F,\n  type: 'INT8',\n  name: 'BigInt',\n  declaration: function () {\n    return 'bigint';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([_intn.default.id, 0x08]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const buffer = new _writableTrackingBuffer.default(8);\n    buffer.writeInt64LE(Number(parameter.value));\n    yield buffer.data;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n\n    if (value < Number.MIN_SAFE_INTEGER || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(`Value must be between ${Number.MIN_SAFE_INTEGER} and ${Number.MAX_SAFE_INTEGER}, inclusive.  For smaller or bigger numbers, use VarChar type.`);\n    }\n\n    return value;\n  }\n};\nvar _default = BigInt;\nexports.default = _default;\nmodule.exports = BigInt;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAErD,IAAIC,uBAAuB,GAAGF,sBAAsB,CAACC,OAAO,CAAC,6CAA6C,CAAC,CAAC;AAE5G,SAASD,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEL,OAAO,EAAEK;EAAI,CAAC;AAAE;AAE9F,MAAME,WAAW,GAAGC,MAAM,CAACC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AACvC,MAAMC,WAAW,GAAGF,MAAM,CAACC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AACvC,MAAME,MAAM,GAAG;EACbC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,QAAQ;EACdC,WAAW,EAAE,SAAAA,CAAA,EAAY;IACvB,OAAO,QAAQ;EACjB,CAAC;EAEDC,gBAAgBA,CAAA,EAAG;IACjB,OAAOR,MAAM,CAACC,IAAI,CAAC,CAACR,KAAK,CAACD,OAAO,CAACY,EAAE,EAAE,IAAI,CAAC,CAAC;EAC9C,CAAC;EAEDK,uBAAuBA,CAACC,SAAS,EAAEC,OAAO,EAAE;IAC1C,IAAID,SAAS,CAACnB,KAAK,IAAI,IAAI,EAAE;MAC3B,OAAOW,WAAW;IACpB;IAEA,OAAOH,WAAW;EACpB,CAAC;EAED,CAACa,qBAAqBA,CAACF,SAAS,EAAEC,OAAO,EAAE;IACzC,IAAID,SAAS,CAACnB,KAAK,IAAI,IAAI,EAAE;MAC3B;IACF;IAEA,MAAMsB,MAAM,GAAG,IAAIjB,uBAAuB,CAACJ,OAAO,CAAC,CAAC,CAAC;IACrDqB,MAAM,CAACC,YAAY,CAACC,MAAM,CAACL,SAAS,CAACnB,KAAK,CAAC,CAAC;IAC5C,MAAMsB,MAAM,CAACG,IAAI;EACnB,CAAC;EAEDC,QAAQ,EAAE,SAAAA,CAAU1B,KAAK,EAAE;IACzB,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,OAAO,IAAI;IACb;IAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7BA,KAAK,GAAGwB,MAAM,CAACxB,KAAK,CAAC;IACvB;IAEA,IAAI2B,KAAK,CAAC3B,KAAK,CAAC,EAAE;MAChB,MAAM,IAAI4B,SAAS,CAAC,iBAAiB,CAAC;IACxC;IAEA,IAAI5B,KAAK,GAAGwB,MAAM,CAACK,gBAAgB,IAAI7B,KAAK,GAAGwB,MAAM,CAACM,gBAAgB,EAAE;MACtE,MAAM,IAAIF,SAAS,CAAE,yBAAwBJ,MAAM,CAACK,gBAAiB,QAAOL,MAAM,CAACM,gBAAiB,gEAA+D,CAAC;IACtK;IAEA,OAAO9B,KAAK;EACd;AACF,CAAC;AACD,IAAI+B,QAAQ,GAAGnB,MAAM;AACrBb,OAAO,CAACE,OAAO,GAAG8B,QAAQ;AAC1BC,MAAM,CAACjC,OAAO,GAAGa,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}