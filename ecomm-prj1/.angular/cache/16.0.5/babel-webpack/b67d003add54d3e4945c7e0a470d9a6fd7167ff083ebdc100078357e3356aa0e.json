{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass DatabaseService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5202'; // Replace with your backend API URL\n  }\n\n  executeQuery(query) {\n    const url = `${this.apiUrl}/query`;\n    const body = {\n      query: query\n    };\n    return this.http.post(url, body).toPromise();\n  }\n  getCustomers() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const query = 'SELECT * FROM Customer';\n      return yield _this.executeQuery(query);\n    })();\n  }\n  getInventory() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const query = 'SELECT * FROM Inventory';\n      return yield _this2.executeQuery(query);\n    })();\n  }\n  getOrders() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const query = 'SELECT * FROM [Order]';\n      return yield _this3.executeQuery(query);\n    })();\n  }\n  getProducts() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const query = 'SELECT * FROM Products';\n      return yield _this4.executeQuery(query);\n    })();\n  }\n  getJunction() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const query = 'SELECT * FROM StoreProductJunction';\n      return yield _this5.executeQuery(query);\n    })();\n  }\n  getStores() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const query = 'SELECT * FROM Stores';\n      return yield _this6.executeQuery(query);\n    })();\n  }\n}\nDatabaseService.ɵfac = function DatabaseService_Factory(t) {\n  return new (t || DatabaseService)(i0.ɵɵinject(i1.HttpClient));\n};\nDatabaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DatabaseService,\n  factory: DatabaseService.ɵfac,\n  providedIn: 'root'\n});\nexport { DatabaseService };","map":{"version":3,"names":["DatabaseService","constructor","http","apiUrl","executeQuery","query","url","body","post","toPromise","getCustomers","_this","_asyncToGenerator","getInventory","_this2","getOrders","_this3","getProducts","_this4","getJunction","_this5","getStores","_this6","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ishma\\Revature\\Ishmael-Primus-Code-\\ecomm-prj1\\src\\app\\database.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  private apiUrl = 'http://localhost:5202'; // Replace with your backend API URL\n\n  constructor(private http: HttpClient) { }\n\n  executeQuery(query: string): Promise<any> {\n    const url = `${this.apiUrl}/query`;\n    const body = { query: query };\n    return this.http.post(url, body).toPromise();\n  }\n\n  async getCustomers(): Promise<any> {\n    const query = 'SELECT * FROM Customer';\n    return await this.executeQuery(query);\n  }\n\n  async getInventory(): Promise<any> {\n    const query = 'SELECT * FROM Inventory';\n    return await this.executeQuery(query);\n  }\n\n  async getOrders(): Promise<any> {\n    const query = 'SELECT * FROM [Order]';\n    return await this.executeQuery(query);\n  }\n\n  async getProducts(): Promise<any> {\n    const query = 'SELECT * FROM Products';\n    return await this.executeQuery(query);\n  }\n\n  async getJunction(): Promise<any> {\n    const query = 'SELECT * FROM StoreProductJunction';\n    return await this.executeQuery(query);\n  }\n\n  async getStores(): Promise<any> {\n    const query = 'SELECT * FROM Stores';\n    return await this.executeQuery(query);\n  }\n}\n"],"mappings":";;;AAGA,MAGaA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;EAEF;;EAExCC,YAAYA,CAACC,KAAa;IACxB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,QAAQ;IAClC,MAAMI,IAAI,GAAG;MAAEF,KAAK,EAAEA;IAAK,CAAE;IAC7B,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAACF,GAAG,EAAEC,IAAI,CAAC,CAACE,SAAS,EAAE;EAC9C;EAEMC,YAAYA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAChB,MAAMP,KAAK,GAAG,wBAAwB;MACtC,aAAaM,KAAI,CAACP,YAAY,CAACC,KAAK,CAAC;IAAC;EACxC;EAEMQ,YAAYA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAF,iBAAA;MAChB,MAAMP,KAAK,GAAG,yBAAyB;MACvC,aAAaS,MAAI,CAACV,YAAY,CAACC,KAAK,CAAC;IAAC;EACxC;EAEMU,SAASA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAJ,iBAAA;MACb,MAAMP,KAAK,GAAG,uBAAuB;MACrC,aAAaW,MAAI,CAACZ,YAAY,CAACC,KAAK,CAAC;IAAC;EACxC;EAEMY,WAAWA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAN,iBAAA;MACf,MAAMP,KAAK,GAAG,wBAAwB;MACtC,aAAaa,MAAI,CAACd,YAAY,CAACC,KAAK,CAAC;IAAC;EACxC;EAEMc,WAAWA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAR,iBAAA;MACf,MAAMP,KAAK,GAAG,oCAAoC;MAClD,aAAae,MAAI,CAAChB,YAAY,CAACC,KAAK,CAAC;IAAC;EACxC;EAEMgB,SAASA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAV,iBAAA;MACb,MAAMP,KAAK,GAAG,sBAAsB;MACpC,aAAaiB,MAAI,CAAClB,YAAY,CAACC,KAAK,CAAC;IAAC;EACxC;;AAvCWL,eAAe,C;mBAAfA,eAAe,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAf1B,eAAe,C;SAAfA,eAAe;EAAA2B,OAAA,EAAf3B,eAAe,CAAA4B,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEP7B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}