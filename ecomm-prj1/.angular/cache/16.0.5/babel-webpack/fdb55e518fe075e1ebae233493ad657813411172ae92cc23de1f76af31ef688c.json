{"ast":null,"code":"/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\n\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { BaseClient } from './BaseClient.js';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.js';\nimport { AuthenticationScheme, GrantType, HeaderNames, Errors } from '../utils/Constants.js';\nimport { ResponseHandler } from '../response/ResponseHandler.js';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { ServerError } from '../error/ServerError.js';\nimport { TimeUtils } from '../utils/TimeUtils.js';\nimport { UrlString } from '../url/UrlString.js';\nimport { CcsCredentialType } from '../account/CcsCredential.js';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.js';\nimport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage } from '../error/InteractionRequiredAuthError.js';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * OAuth2.0 refresh token client\r\n */\nvar RefreshTokenClient = /** @class */function (_super) {\n  __extends(RefreshTokenClient, _super);\n  function RefreshTokenClient(configuration, performanceClient) {\n    return _super.call(this, configuration, performanceClient) || this;\n  }\n  RefreshTokenClient.prototype.acquireToken = function (request) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var atsMeasurement, reqTimestamp, response, requestId, responseHandler;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            atsMeasurement = (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.startMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n            this.logger.verbose(\"RefreshTokenClientAcquireToken called\", request.correlationId);\n            reqTimestamp = TimeUtils.nowSeconds();\n            return [4 /*yield*/, this.executeTokenRequest(request, this.authority)];\n          case 1:\n            response = _c.sent();\n            requestId = (_b = response.headers) === null || _b === void 0 ? void 0 : _b[HeaderNames.X_MS_REQUEST_ID];\n            responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n            responseHandler.validateTokenResponse(response.body);\n            return [2 /*return*/, responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId).then(function (result) {\n              var _a;\n              atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\n                success: true,\n                refreshTokenSize: ((_a = response.body.refresh_token) === null || _a === void 0 ? void 0 : _a.length) || 0\n              });\n              return result;\n            }).catch(function (error) {\n              _this.logger.verbose(\"Error in fetching refresh token\", request.correlationId);\n              atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n                refreshTokenSize: undefined\n              });\n              throw error;\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n   * @param request\r\n   */\n  RefreshTokenClient.prototype.acquireTokenByRefreshToken = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var isFOCI, noFamilyRTInCache, clientMismatchErrorWithFamilyRT;\n      return __generator(this, function (_a) {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n          throw ClientConfigurationError.createEmptyTokenRequestError();\n        }\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n          throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n        isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment, this.config.authOptions.clientId);\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n          try {\n            return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, true)];\n          } catch (e) {\n            noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === InteractionRequiredAuthErrorMessage.noTokensFoundError.code;\n            clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR;\n            // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n            if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n              return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, false)];\n              // throw in all other cases\n            } else {\n              throw e;\n            }\n          }\n        }\n        // fall back to application refresh token acquisition\n        return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, false)];\n      });\n    });\n  };\n  /**\r\n   * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n   * @param request\r\n   */\n  RefreshTokenClient.prototype.acquireTokenWithCachedRefreshToken = function (request, foci) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var atsMeasurement, refreshToken, refreshTokenRequest;\n      return __generator(this, function (_b) {\n        atsMeasurement = (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.startMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        this.logger.verbose(\"RefreshTokenClientAcquireTokenWithCachedRefreshToken called\", request.correlationId);\n        refreshToken = this.cacheManager.readRefreshTokenFromCache(this.config.authOptions.clientId, request.account, foci);\n        if (!refreshToken) {\n          atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.discardMeasurement();\n          throw InteractionRequiredAuthError.createNoTokensFoundError();\n        }\n        // attach cached RT size to the current measurement\n        atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\n          success: true\n        });\n        refreshTokenRequest = __assign(__assign({}, request), {\n          refreshToken: refreshToken.secret,\n          authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\n          ccsCredential: {\n            credential: request.account.homeAccountId,\n            type: CcsCredentialType.HOME_ACCOUNT_ID\n          }\n        });\n        return [2 /*return*/, this.acquireToken(refreshTokenRequest)];\n      });\n    });\n  };\n  /**\r\n   * Constructs the network message and makes a NW call to the underlying secure token service\r\n   * @param request\r\n   * @param authority\r\n   */\n  RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var acquireTokenMeasurement, requestBody, queryParameters, headers, thumbprint, endpoint;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            acquireTokenMeasurement = (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.startMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n            return [4 /*yield*/, this.createTokenRequestBody(request)];\n          case 1:\n            requestBody = _b.sent();\n            queryParameters = this.createTokenQueryParameters(request);\n            headers = this.createTokenRequestHeaders(request.ccsCredential);\n            thumbprint = {\n              clientId: this.config.authOptions.clientId,\n              authority: authority.canonicalAuthority,\n              scopes: request.scopes,\n              claims: request.claims,\n              authenticationScheme: request.authenticationScheme,\n              resourceRequestMethod: request.resourceRequestMethod,\n              resourceRequestUri: request.resourceRequestUri,\n              shrClaims: request.shrClaims,\n              sshKid: request.sshKid\n            };\n            endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParameters);\n            return [2 /*return*/, this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint).then(function (result) {\n              acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\n                success: true\n              });\n              return result;\n            }).catch(function (error) {\n              acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\n                success: false\n              });\n              throw error;\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates query string for the /token request\r\n   * @param request\r\n   */\n  RefreshTokenClient.prototype.createTokenQueryParameters = function (request) {\n    var parameterBuilder = new RequestParameterBuilder();\n    if (request.tokenQueryParameters) {\n      parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n    }\n    return parameterBuilder.createQueryString();\n  };\n  /**\r\n   * Helper function to create the token request body\r\n   * @param request\r\n   */\n  RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var correlationId, acquireTokenMeasurement, parameterBuilder, clientAssertion, popTokenGenerator, reqCnfData, clientInfo;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            correlationId = request.correlationId;\n            acquireTokenMeasurement = (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.startMeasurement(PerformanceEvents.BaseClientCreateTokenRequestHeaders, correlationId);\n            parameterBuilder = new RequestParameterBuilder();\n            parameterBuilder.addClientId(this.config.authOptions.clientId);\n            parameterBuilder.addScopes(request.scopes);\n            parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n            parameterBuilder.addClientInfo();\n            parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n            parameterBuilder.addThrottling();\n            if (this.serverTelemetryManager) {\n              parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n            }\n            parameterBuilder.addCorrelationId(correlationId);\n            parameterBuilder.addRefreshToken(request.refreshToken);\n            if (this.config.clientCredentials.clientSecret) {\n              parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n            }\n            if (this.config.clientCredentials.clientAssertion) {\n              clientAssertion = this.config.clientCredentials.clientAssertion;\n              parameterBuilder.addClientAssertion(clientAssertion.assertion);\n              parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n            }\n            if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3 /*break*/, 2];\n            popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n            return [4 /*yield*/, popTokenGenerator.generateCnf(request)];\n          case 1:\n            reqCnfData = _b.sent();\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n            return [3 /*break*/, 3];\n          case 2:\n            if (request.authenticationScheme === AuthenticationScheme.SSH) {\n              if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n              } else {\n                acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\n                  success: false\n                });\n                throw ClientConfigurationError.createMissingSshJwkError();\n              }\n            }\n            _b.label = 3;\n          case 3:\n            if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n              parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n            }\n            if (this.config.systemOptions.preventCorsPreflight && request.ccsCredential) {\n              switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                  try {\n                    clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\n                    parameterBuilder.addCcsOid(clientInfo);\n                  } catch (e) {\n                    this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                  }\n                  break;\n                case CcsCredentialType.UPN:\n                  parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                  break;\n              }\n            }\n            acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\n              success: true\n            });\n            return [2 /*return*/, parameterBuilder.createQueryString()];\n        }\n      });\n    });\n  };\n  return RefreshTokenClient;\n}(BaseClient);\nexport { RefreshTokenClient };","map":{"version":3,"names":["__extends","__awaiter","__generator","__assign","BaseClient","RequestParameterBuilder","AuthenticationScheme","GrantType","HeaderNames","Errors","ResponseHandler","PopTokenGenerator","StringUtils","ClientConfigurationError","ClientAuthError","ServerError","TimeUtils","UrlString","CcsCredentialType","buildClientInfoFromHomeAccountId","InteractionRequiredAuthError","InteractionRequiredAuthErrorMessage","PerformanceEvents","RefreshTokenClient","_super","configuration","performanceClient","call","prototype","acquireToken","request","_a","_b","atsMeasurement","reqTimestamp","response","requestId","responseHandler","_this","_c","label","startMeasurement","RefreshTokenClientAcquireToken","correlationId","logger","verbose","nowSeconds","executeTokenRequest","authority","sent","headers","X_MS_REQUEST_ID","config","authOptions","clientId","cacheManager","cryptoUtils","serializableCache","persistencePlugin","validateTokenResponse","body","handleServerTokenResponse","undefined","forceCache","then","result","endMeasurement","success","refreshTokenSize","refresh_token","length","catch","error","errorCode","subErrorCode","subError","acquireTokenByRefreshToken","isFOCI","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","createEmptyTokenRequestError","account","createNoAccountInSilentRequestError","isAppMetadataFOCI","environment","acquireTokenWithCachedRefreshToken","e","noTokensFoundError","code","INVALID_GRANT_ERROR","CLIENT_MISMATCH_ERROR","foci","refreshToken","refreshTokenRequest","RefreshTokenClientAcquireTokenWithCachedRefreshToken","readRefreshTokenFromCache","discardMeasurement","createNoTokensFoundError","secret","authenticationScheme","BEARER","ccsCredential","credential","homeAccountId","type","HOME_ACCOUNT_ID","acquireTokenMeasurement","requestBody","queryParameters","thumbprint","endpoint","RefreshTokenClientExecuteTokenRequest","createTokenRequestBody","createTokenQueryParameters","createTokenRequestHeaders","canonicalAuthority","scopes","claims","resourceRequestMethod","resourceRequestUri","shrClaims","sshKid","appendQueryString","tokenEndpoint","executePostToTokenEndpoint","parameterBuilder","tokenQueryParameters","addExtraQueryParameters","createQueryString","clientAssertion","popTokenGenerator","reqCnfData","clientInfo","BaseClientCreateTokenRequestHeaders","addClientId","addScopes","addGrantType","REFRESH_TOKEN_GRANT","addClientInfo","addLibraryInfo","libraryInfo","addApplicationTelemetry","telemetry","application","addThrottling","serverTelemetryManager","addServerTelemetry","addCorrelationId","addRefreshToken","clientCredentials","clientSecret","addClientSecret","addClientAssertion","assertion","addClientAssertionType","assertionType","POP","generateCnf","addPopToken","reqCnfString","SSH","sshJwk","addSshJwk","createMissingSshJwkError","isEmptyObj","clientCapabilities","addClaims","systemOptions","preventCorsPreflight","addCcsOid","UPN","addCcsUpn"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-common/dist/client/RefreshTokenClient.js"],"sourcesContent":["/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { BaseClient } from './BaseClient.js';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.js';\nimport { AuthenticationScheme, GrantType, HeaderNames, Errors } from '../utils/Constants.js';\nimport { ResponseHandler } from '../response/ResponseHandler.js';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { ServerError } from '../error/ServerError.js';\nimport { TimeUtils } from '../utils/TimeUtils.js';\nimport { UrlString } from '../url/UrlString.js';\nimport { CcsCredentialType } from '../account/CcsCredential.js';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.js';\nimport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage } from '../error/InteractionRequiredAuthError.js';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 refresh token client\r\n */\r\nvar RefreshTokenClient = /** @class */ (function (_super) {\r\n    __extends(RefreshTokenClient, _super);\r\n    function RefreshTokenClient(configuration, performanceClient) {\r\n        return _super.call(this, configuration, performanceClient) || this;\r\n    }\r\n    RefreshTokenClient.prototype.acquireToken = function (request) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var atsMeasurement, reqTimestamp, response, requestId, responseHandler;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        atsMeasurement = (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.startMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\r\n                        this.logger.verbose(\"RefreshTokenClientAcquireToken called\", request.correlationId);\r\n                        reqTimestamp = TimeUtils.nowSeconds();\r\n                        return [4 /*yield*/, this.executeTokenRequest(request, this.authority)];\r\n                    case 1:\r\n                        response = _c.sent();\r\n                        requestId = (_b = response.headers) === null || _b === void 0 ? void 0 : _b[HeaderNames.X_MS_REQUEST_ID];\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        return [2 /*return*/, responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId).then(function (result) {\r\n                                var _a;\r\n                                atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\r\n                                    success: true,\r\n                                    refreshTokenSize: ((_a = response.body.refresh_token) === null || _a === void 0 ? void 0 : _a.length) || 0\r\n                                });\r\n                                return result;\r\n                            })\r\n                                .catch(function (error) {\r\n                                _this.logger.verbose(\"Error in fetching refresh token\", request.correlationId);\r\n                                atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\r\n                                    errorCode: error.errorCode,\r\n                                    subErrorCode: error.subError,\r\n                                    success: false,\r\n                                    refreshTokenSize: undefined\r\n                                });\r\n                                throw error;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.acquireTokenByRefreshToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isFOCI, noFamilyRTInCache, clientMismatchErrorWithFamilyRT;\r\n            return __generator(this, function (_a) {\r\n                // Cannot renew token if no request object is given.\r\n                if (!request) {\r\n                    throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                }\r\n                // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n                if (!request.account) {\r\n                    throw ClientAuthError.createNoAccountInSilentRequestError();\r\n                }\r\n                isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment, this.config.authOptions.clientId);\r\n                // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\r\n                if (isFOCI) {\r\n                    try {\r\n                        return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, true)];\r\n                    }\r\n                    catch (e) {\r\n                        noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === InteractionRequiredAuthErrorMessage.noTokensFoundError.code;\r\n                        clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR;\r\n                        // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\r\n                        if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\r\n                            return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, false)];\r\n                            // throw in all other cases\r\n                        }\r\n                        else {\r\n                            throw e;\r\n                        }\r\n                    }\r\n                }\r\n                // fall back to application refresh token acquisition\r\n                return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, false)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.acquireTokenWithCachedRefreshToken = function (request, foci) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var atsMeasurement, refreshToken, refreshTokenRequest;\r\n            return __generator(this, function (_b) {\r\n                atsMeasurement = (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.startMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n                this.logger.verbose(\"RefreshTokenClientAcquireTokenWithCachedRefreshToken called\", request.correlationId);\r\n                refreshToken = this.cacheManager.readRefreshTokenFromCache(this.config.authOptions.clientId, request.account, foci);\r\n                if (!refreshToken) {\r\n                    atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.discardMeasurement();\r\n                    throw InteractionRequiredAuthError.createNoTokensFoundError();\r\n                }\r\n                // attach cached RT size to the current measurement\r\n                atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\r\n                    success: true\r\n                });\r\n                refreshTokenRequest = __assign(__assign({}, request), { refreshToken: refreshToken.secret, authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER, ccsCredential: {\r\n                        credential: request.account.homeAccountId,\r\n                        type: CcsCredentialType.HOME_ACCOUNT_ID\r\n                    } });\r\n                return [2 /*return*/, this.acquireToken(refreshTokenRequest)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Constructs the network message and makes a NW call to the underlying secure token service\r\n     * @param request\r\n     * @param authority\r\n     */\r\n    RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenMeasurement, requestBody, queryParameters, headers, thumbprint, endpoint;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        acquireTokenMeasurement = (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.startMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\r\n                        return [4 /*yield*/, this.createTokenRequestBody(request)];\r\n                    case 1:\r\n                        requestBody = _b.sent();\r\n                        queryParameters = this.createTokenQueryParameters(request);\r\n                        headers = this.createTokenRequestHeaders(request.ccsCredential);\r\n                        thumbprint = {\r\n                            clientId: this.config.authOptions.clientId,\r\n                            authority: authority.canonicalAuthority,\r\n                            scopes: request.scopes,\r\n                            claims: request.claims,\r\n                            authenticationScheme: request.authenticationScheme,\r\n                            resourceRequestMethod: request.resourceRequestMethod,\r\n                            resourceRequestUri: request.resourceRequestUri,\r\n                            shrClaims: request.shrClaims,\r\n                            sshKid: request.sshKid\r\n                        };\r\n                        endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParameters);\r\n                        return [2 /*return*/, this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint)\r\n                                .then(function (result) {\r\n                                acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\r\n                                    success: true\r\n                                });\r\n                                return result;\r\n                            })\r\n                                .catch(function (error) {\r\n                                acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\r\n                                    success: false\r\n                                });\r\n                                throw error;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates query string for the /token request\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.createTokenQueryParameters = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        if (request.tokenQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Helper function to create the token request body\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var correlationId, acquireTokenMeasurement, parameterBuilder, clientAssertion, popTokenGenerator, reqCnfData, clientInfo;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        correlationId = request.correlationId;\r\n                        acquireTokenMeasurement = (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.startMeasurement(PerformanceEvents.BaseClientCreateTokenRequestHeaders, correlationId);\r\n                        parameterBuilder = new RequestParameterBuilder();\r\n                        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n                        parameterBuilder.addScopes(request.scopes);\r\n                        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n                        parameterBuilder.addClientInfo();\r\n                        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n                        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n                        parameterBuilder.addThrottling();\r\n                        if (this.serverTelemetryManager) {\r\n                            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n                        }\r\n                        parameterBuilder.addCorrelationId(correlationId);\r\n                        parameterBuilder.addRefreshToken(request.refreshToken);\r\n                        if (this.config.clientCredentials.clientSecret) {\r\n                            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n                        }\r\n                        if (this.config.clientCredentials.clientAssertion) {\r\n                            clientAssertion = this.config.clientCredentials.clientAssertion;\r\n                            parameterBuilder.addClientAssertion(clientAssertion.assertion);\r\n                            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n                        }\r\n                        if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3 /*break*/, 2];\r\n                        popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\r\n                        return [4 /*yield*/, popTokenGenerator.generateCnf(request)];\r\n                    case 1:\r\n                        reqCnfData = _b.sent();\r\n                        // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n                        parameterBuilder.addPopToken(reqCnfData.reqCnfString);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        if (request.authenticationScheme === AuthenticationScheme.SSH) {\r\n                            if (request.sshJwk) {\r\n                                parameterBuilder.addSshJwk(request.sshJwk);\r\n                            }\r\n                            else {\r\n                                acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\r\n                                    success: false\r\n                                });\r\n                                throw ClientConfigurationError.createMissingSshJwkError();\r\n                            }\r\n                        }\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\r\n                            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n                        }\r\n                        if (this.config.systemOptions.preventCorsPreflight && request.ccsCredential) {\r\n                            switch (request.ccsCredential.type) {\r\n                                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                                    try {\r\n                                        clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\r\n                                        parameterBuilder.addCcsOid(clientInfo);\r\n                                    }\r\n                                    catch (e) {\r\n                                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\r\n                                    }\r\n                                    break;\r\n                                case CcsCredentialType.UPN:\r\n                                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\r\n                            success: true\r\n                        });\r\n                        return [2 /*return*/, parameterBuilder.createQueryString()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RefreshTokenClient;\r\n}(BaseClient));\n\nexport { RefreshTokenClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}