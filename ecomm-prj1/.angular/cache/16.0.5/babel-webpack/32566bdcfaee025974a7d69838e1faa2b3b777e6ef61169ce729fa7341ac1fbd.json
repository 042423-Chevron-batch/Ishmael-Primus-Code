{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __extends, __awaiter, __generator, __rest, __assign } from '../_virtual/_tslib.js';\nimport { ScopeSet, AuthToken, Constants, AccountEntity, AuthorityType, IdTokenEntity, AccessTokenEntity, CacheRecord, PerformanceEvents, TimeUtils, ClientAuthError, AuthenticationScheme, PopTokenGenerator, UrlString, OIDC_DEFAULT_SCOPES, PromptValue } from '@azure/msal-common';\nimport { BaseInteractionClient } from './BaseInteractionClient.js';\nimport { TemporaryCacheKeys, NativeExtensionMethod, NativeConstants, ApiId } from '../utils/BrowserConstants.js';\nimport { NativeAuthError } from '../error/NativeAuthError.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { SilentCacheClient } from './SilentCacheClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar NativeInteractionClient = /** @class */function (_super) {\n  __extends(NativeInteractionClient, _super);\n  function NativeInteractionClient(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\n    var _this = _super.call(this, config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId) || this;\n    _this.apiId = apiId;\n    _this.accountId = accountId;\n    _this.nativeMessageHandler = provider;\n    _this.nativeStorageManager = nativeStorageImpl;\n    _this.silentCacheClient = new SilentCacheClient(config, _this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n    return _this;\n  }\n  /**\r\n   * Acquire token from native platform via browser extension\r\n   * @param request\r\n   */\n  NativeInteractionClient.prototype.acquireToken = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nativeATMeasurement, reqTimestamp, nativeRequest, result, messageBody, response, validatedResponse;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n            nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n            reqTimestamp = TimeUtils.nowSeconds();\n            return [4 /*yield*/, this.initializeNativeRequest(request)];\n          case 1:\n            nativeRequest = _a.sent();\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this.acquireTokensFromCache(this.accountId, nativeRequest)];\n          case 3:\n            result = _a.sent();\n            nativeATMeasurement.endMeasurement({\n              success: true,\n              isNativeBroker: false,\n              fromCache: true\n            });\n            return [2 /*return*/, result];\n          case 4:\n            _a.sent();\n            // continue with a native call for any and all errors\n            this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\n            return [3 /*break*/, 5];\n          case 5:\n            messageBody = {\n              method: NativeExtensionMethod.GetToken,\n              request: nativeRequest\n            };\n            return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\n          case 6:\n            response = _a.sent();\n            validatedResponse = this.validateNativeResponse(response);\n            return [2 /*return*/, this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp).then(function (result) {\n              nativeATMeasurement.endMeasurement({\n                success: true,\n                isNativeBroker: true,\n                requestId: result.requestId\n              });\n              return result;\n            }).catch(function (error) {\n              nativeATMeasurement.endMeasurement({\n                success: false,\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                isNativeBroker: true\n              });\n              throw error;\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates silent flow request\r\n   * @param request\r\n   * @param cachedAccount\r\n   * @returns CommonSilentFlowRequest\r\n   */\n  NativeInteractionClient.prototype.createSilentCacheRequest = function (request, cachedAccount) {\n    return {\n      authority: request.authority,\n      correlationId: this.correlationId,\n      scopes: ScopeSet.fromString(request.scope).asArray(),\n      account: cachedAccount,\n      forceRefresh: false\n    };\n  };\n  /**\r\n   * Fetches the tokens from the cache if un-expired\r\n   * @param nativeAccountId\r\n   * @param request\r\n   * @returns authenticationResult\r\n   */\n  NativeInteractionClient.prototype.acquireTokensFromCache = function (nativeAccountId, request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var account, silentRequest, result, e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!nativeAccountId) {\n              this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\n              throw ClientAuthError.createNoAccountFoundError();\n            }\n            account = this.browserStorage.getAccountInfoFilteredBy({\n              nativeAccountId: nativeAccountId\n            });\n            if (!account) {\n              throw ClientAuthError.createNoAccountFoundError();\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            silentRequest = this.createSilentCacheRequest(request, account);\n            return [4 /*yield*/, this.silentCacheClient.acquireToken(silentRequest)];\n          case 2:\n            result = _a.sent();\n            return [2 /*return*/, result];\n          case 3:\n            e_2 = _a.sent();\n            throw e_2;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\r\n   * @param request\r\n   */\n  NativeInteractionClient.prototype.acquireTokenRedirect = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nativeRequest, messageBody, response, e_3, navigationOptions, redirectUri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\n            return [4 /*yield*/, this.initializeNativeRequest(request)];\n          case 1:\n            nativeRequest = _a.sent();\n            messageBody = {\n              method: NativeExtensionMethod.GetToken,\n              request: nativeRequest\n            };\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\n          case 3:\n            response = _a.sent();\n            this.validateNativeResponse(response);\n            return [3 /*break*/, 5];\n          case 4:\n            e_3 = _a.sent();\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e_3 instanceof NativeAuthError && e_3.isFatal()) {\n              throw e_3;\n            }\n            return [3 /*break*/, 5];\n          case 5:\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\n            navigationOptions = {\n              apiId: ApiId.acquireTokenRedirect,\n              timeout: this.config.system.redirectNavigationTimeout,\n              noHistory: false\n            };\n            redirectUri = this.config.auth.navigateToLoginRequestUrl ? window.location.href : this.getRedirectUri(request.redirectUri);\n            return [4 /*yield*/, this.navigationClient.navigateExternal(redirectUri, navigationOptions)];\n          case 6:\n            _a.sent(); // Need to treat this as external to ensure handleRedirectPromise is run again\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\r\n   */\n  NativeInteractionClient.prototype.handleRedirectPromise = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cachedRequest, prompt, request, messageBody, reqTimestamp, response, result, e_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n              this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n              return [2 /*return*/, null];\n            }\n            cachedRequest = this.browserStorage.getCachedNativeRequest();\n            if (!cachedRequest) {\n              this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\n              return [2 /*return*/, null];\n            }\n            prompt = cachedRequest.prompt, request = __rest(cachedRequest, [\"prompt\"]);\n            if (prompt) {\n              this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\n            }\n            this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n            messageBody = {\n              method: NativeExtensionMethod.GetToken,\n              request: request\n            };\n            reqTimestamp = TimeUtils.nowSeconds();\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\n            return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\n          case 2:\n            response = _a.sent();\n            this.validateNativeResponse(response);\n            result = this.handleNativeResponse(response, request, reqTimestamp);\n            this.browserStorage.setInteractionInProgress(false);\n            return [2 /*return*/, result];\n          case 3:\n            e_4 = _a.sent();\n            this.browserStorage.setInteractionInProgress(false);\n            throw e_4;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Logout from native platform via browser extension\r\n   * @param request\r\n   */\n  NativeInteractionClient.prototype.logout = function () {\n    this.logger.trace(\"NativeInteractionClient - logout called.\");\n    return Promise.reject(\"Logout not implemented yet\");\n  };\n  /**\r\n   * Transform response from native platform into AuthenticationResult object which will be returned to the end user\r\n   * @param response\r\n   * @param request\r\n   * @param reqTimestamp\r\n   */\n  NativeInteractionClient.prototype.handleNativeResponse = function (response, request, reqTimestamp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authority, authorityPreferredCache, idTokenObj, homeAccountIdentifier, accountEntity, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\n            if (response.account.id !== request.accountId) {\n              // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n              throw NativeAuthError.createUserSwitchError();\n            }\n            return [4 /*yield*/, this.getDiscoveredAuthority(request.authority)];\n          case 1:\n            authority = _a.sent();\n            authorityPreferredCache = authority.getPreferredCache();\n            idTokenObj = this.createIdTokenObj(response);\n            homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenObj);\n            accountEntity = this.createAccountEntity(response, homeAccountIdentifier, idTokenObj, authorityPreferredCache);\n            return [4 /*yield*/, this.generateAuthenticationResult(response, request, idTokenObj, accountEntity, authority.canonicalAuthority, reqTimestamp)];\n          case 2:\n            result = _a.sent();\n            // cache accounts and tokens in the appropriate storage\n            this.cacheAccount(accountEntity);\n            this.cacheNativeTokens(response, request, homeAccountIdentifier, accountEntity, idTokenObj, result.accessToken, result.tenantId, reqTimestamp);\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  /**\r\n   * Create an idToken Object (not entity)\r\n   * @param response\r\n   * @returns\r\n   */\n  NativeInteractionClient.prototype.createIdTokenObj = function (response) {\n    return new AuthToken(response.id_token || Constants.EMPTY_STRING, this.browserCrypto);\n  };\n  /**\r\n   * creates an homeAccountIdentifier for the account\r\n   * @param response\r\n   * @param idTokenObj\r\n   * @returns\r\n   */\n  NativeInteractionClient.prototype.createHomeAccountIdentifier = function (response, idTokenObj) {\n    // Save account in browser storage\n    var homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenObj);\n    return homeAccountIdentifier;\n  };\n  /**\r\n   * Creates account entity\r\n   * @param response\r\n   * @param homeAccountIdentifier\r\n   * @param idTokenObj\r\n   * @param authority\r\n   * @returns\r\n   */\n  NativeInteractionClient.prototype.createAccountEntity = function (response, homeAccountIdentifier, idTokenObj, authority) {\n    return AccountEntity.createAccount(response.client_info, homeAccountIdentifier, idTokenObj, undefined, undefined, undefined, authority, response.account.id);\n  };\n  /**\r\n   * Helper to generate scopes\r\n   * @param response\r\n   * @param request\r\n   * @returns\r\n   */\n  NativeInteractionClient.prototype.generateScopes = function (response, request) {\n    return response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\n  };\n  /**\r\n   * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\r\n   * @param request\r\n   * @param response\r\n   */\n  NativeInteractionClient.prototype.generatePopAccessToken = function (response, request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var popTokenGenerator, shrParameters;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(request.tokenType === AuthenticationScheme.POP)) return [3 /*break*/, 2];\n            /**\r\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\r\n             * is still received, SHR is calculated locally\r\n             */\n            // Check if native layer returned an SHR token\n            if (response.shr) {\n              this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\n              return [2 /*return*/, response.shr];\n            }\n            popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            shrParameters = {\n              resourceRequestMethod: request.resourceRequestMethod,\n              resourceRequestUri: request.resourceRequestUri,\n              shrClaims: request.shrClaims,\n              shrNonce: request.shrNonce\n            };\n            /**\r\n             * KeyID must be present in the native request from when the PoP key was generated in order for\r\n             * PopTokenGenerator to query the full key for signing\r\n             */\n            if (!request.keyId) {\n              throw ClientAuthError.createKeyIdMissingError();\n            }\n            return [4 /*yield*/, popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            return [2 /*return*/, response.access_token];\n        }\n      });\n    });\n  };\n  /**\r\n   * Generates authentication result\r\n   * @param response\r\n   * @param request\r\n   * @param idTokenObj\r\n   * @param accountEntity\r\n   * @param authority\r\n   * @param reqTimestamp\r\n   * @returns\r\n   */\n  NativeInteractionClient.prototype.generateAuthenticationResult = function (response, request, idTokenObj, accountEntity, authority, reqTimestamp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mats, responseScopes, accountProperties, uid, tid, responseAccessToken, tokenType, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            mats = this.addTelemetryFromNativeResponse(response);\n            responseScopes = response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\n            accountProperties = response.account.properties || {};\n            uid = accountProperties[\"UID\"] || idTokenObj.claims.oid || idTokenObj.claims.sub || Constants.EMPTY_STRING;\n            tid = accountProperties[\"TenantId\"] || idTokenObj.claims.tid || Constants.EMPTY_STRING;\n            return [4 /*yield*/, this.generatePopAccessToken(response, request)];\n          case 1:\n            responseAccessToken = _a.sent();\n            tokenType = request.tokenType === AuthenticationScheme.POP ? AuthenticationScheme.POP : AuthenticationScheme.BEARER;\n            result = {\n              authority: authority,\n              uniqueId: uid,\n              tenantId: tid,\n              scopes: responseScopes.asArray(),\n              account: accountEntity.getAccountInfo(),\n              idToken: response.id_token,\n              idTokenClaims: idTokenObj.claims,\n              accessToken: responseAccessToken,\n              fromCache: mats ? this.isResponseFromCache(mats) : false,\n              expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\n              tokenType: tokenType,\n              correlationId: this.correlationId,\n              state: response.state,\n              fromNativeBroker: true\n            };\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  /**\r\n   * cache the account entity in browser storage\r\n   * @param accountEntity\r\n   */\n  NativeInteractionClient.prototype.cacheAccount = function (accountEntity) {\n    var _this = this;\n    // Store the account info and hence `nativeAccountId` in browser cache\n    this.browserStorage.setAccount(accountEntity);\n    // Remove any existing cached tokens for this account in browser storage\n    this.browserStorage.removeAccountContext(accountEntity).catch(function (e) {\n      _this.logger.error(\"Error occurred while removing account context from browser storage. \" + e);\n    });\n  };\n  /**\r\n   * Stores the access_token and id_token in inmemory storage\r\n   * @param response\r\n   * @param request\r\n   * @param homeAccountIdentifier\r\n   * @param idTokenObj\r\n   * @param responseAccessToken\r\n   * @param tenantId\r\n   * @param reqTimestamp\r\n   */\n  NativeInteractionClient.prototype.cacheNativeTokens = function (response, request, homeAccountIdentifier, accountEntity, idTokenObj, responseAccessToken, tenantId, reqTimestamp) {\n    var cachedIdToken = IdTokenEntity.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || Constants.EMPTY_STRING, request.clientId, idTokenObj.claims.tid || Constants.EMPTY_STRING);\n    // cache accessToken in inmemory storage\n    var expiresIn = request.tokenType === AuthenticationScheme.POP ? Constants.SHR_NONCE_VALIDITY : (typeof response.expires_in === \"string\" ? parseInt(response.expires_in, 10) : response.expires_in) || 0;\n    var tokenExpirationSeconds = reqTimestamp + expiresIn;\n    var responseScopes = this.generateScopes(response, request);\n    var cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenObj ? idTokenObj.claims.tid || Constants.EMPTY_STRING : tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, this.browserCrypto);\n    var nativeCacheRecord = new CacheRecord(accountEntity, cachedIdToken, cachedAccessToken);\n    this.nativeStorageManager.saveCacheRecord(nativeCacheRecord);\n  };\n  NativeInteractionClient.prototype.addTelemetryFromNativeResponse = function (response) {\n    var mats = this.getMATSFromResponse(response);\n    if (!mats) {\n      return null;\n    }\n    this.performanceClient.addStaticFields({\n      extensionId: this.nativeMessageHandler.getExtensionId(),\n      extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\n      matsBrokerVersion: mats.broker_version,\n      matsAccountJoinOnStart: mats.account_join_on_start,\n      matsAccountJoinOnEnd: mats.account_join_on_end,\n      matsDeviceJoin: mats.device_join,\n      matsPromptBehavior: mats.prompt_behavior,\n      matsApiErrorCode: mats.api_error_code,\n      matsUiVisible: mats.ui_visible,\n      matsSilentCode: mats.silent_code,\n      matsSilentBiSubCode: mats.silent_bi_sub_code,\n      matsSilentMessage: mats.silent_message,\n      matsSilentStatus: mats.silent_status,\n      matsHttpStatus: mats.http_status,\n      matsHttpEventCount: mats.http_event_count\n    }, this.correlationId);\n    return mats;\n  };\n  /**\r\n   * Validates native platform response before processing\r\n   * @param response\r\n   */\n  NativeInteractionClient.prototype.validateNativeResponse = function (response) {\n    if (response.hasOwnProperty(\"access_token\") && response.hasOwnProperty(\"id_token\") && response.hasOwnProperty(\"client_info\") && response.hasOwnProperty(\"account\") && response.hasOwnProperty(\"scope\") && response.hasOwnProperty(\"expires_in\")) {\n      return response;\n    } else {\n      throw NativeAuthError.createUnexpectedError(\"Response missing expected properties.\");\n    }\n  };\n  /**\r\n   * Gets MATS telemetry from native response\r\n   * @param response\r\n   * @returns\r\n   */\n  NativeInteractionClient.prototype.getMATSFromResponse = function (response) {\n    if (response.properties.MATS) {\n      try {\n        return JSON.parse(response.properties.MATS);\n      } catch (e) {\n        this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\n      }\n    }\n    return null;\n  };\n  /**\r\n   * Returns whether or not response came from native cache\r\n   * @param response\r\n   * @returns\r\n   */\n  NativeInteractionClient.prototype.isResponseFromCache = function (mats) {\n    if (typeof mats.is_cached === \"undefined\") {\n      this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\n      return false;\n    }\n    return !!mats.is_cached;\n  };\n  /**\r\n   * Translates developer provided request object into NativeRequest object\r\n   * @param request\r\n   */\n  NativeInteractionClient.prototype.initializeNativeRequest = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authority, canonicalAuthority, scopes, remainingProperties, scopeSet, getPrompt, validatedRequest, shrParameters, popTokenGenerator, reqCnfData;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\n            authority = request.authority || this.config.auth.authority;\n            if (!request.account) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.validateRequestAuthority(authority, request.account)];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            canonicalAuthority = new UrlString(authority);\n            canonicalAuthority.validateAsUri();\n            scopes = request.scopes, remainingProperties = __rest(request, [\"scopes\"]);\n            scopeSet = new ScopeSet(scopes || []);\n            scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n            getPrompt = function () {\n              // If request is silent, prompt is always none\n              switch (_this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                  _this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\n                  return PromptValue.NONE;\n              }\n              // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n              if (!request.prompt) {\n                _this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\n                return undefined;\n              }\n              // If request is interactive, check if prompt provided is allowed to go directly to native broker\n              switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                  _this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\n                  return request.prompt;\n                default:\n                  _this.logger.trace(\"initializeNativeRequest: prompt = \" + request.prompt + \" is not compatible with native flow\");\n                  throw BrowserAuthError.createNativePromptParameterNotSupportedError();\n              }\n            };\n            validatedRequest = __assign(__assign({}, remainingProperties), {\n              accountId: this.accountId,\n              clientId: this.config.auth.clientId,\n              authority: canonicalAuthority.urlString,\n              scope: scopeSet.printScopes(),\n              redirectUri: this.getRedirectUri(request.redirectUri),\n              prompt: getPrompt(),\n              correlationId: this.correlationId,\n              tokenType: request.authenticationScheme,\n              windowTitleSubstring: document.title,\n              extraParameters: __assign(__assign(__assign({}, request.extraQueryParameters), request.tokenQueryParameters), {\n                telemetry: NativeConstants.MATS_TELEMETRY\n              }),\n              extendedExpiryToken: false // Make this configurable?\n            });\n\n            if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3 /*break*/, 4];\n            shrParameters = {\n              resourceRequestUri: request.resourceRequestUri,\n              resourceRequestMethod: request.resourceRequestMethod,\n              shrClaims: request.shrClaims,\n              shrNonce: request.shrNonce\n            };\n            popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            return [4 /*yield*/, popTokenGenerator.generateCnf(shrParameters)];\n          case 3:\n            reqCnfData = _a.sent();\n            // to reduce the URL length, it is recommended to send the short form of the req_cnf \n            validatedRequest.reqCnf = reqCnfData.reqCnfString;\n            validatedRequest.keyId = reqCnfData.kid;\n            _a.label = 4;\n          case 4:\n            return [2 /*return*/, validatedRequest];\n        }\n      });\n    });\n  };\n  return NativeInteractionClient;\n}(BaseInteractionClient);\nexport { NativeInteractionClient };","map":{"version":3,"names":["__extends","__awaiter","__generator","__rest","__assign","ScopeSet","AuthToken","Constants","AccountEntity","AuthorityType","IdTokenEntity","AccessTokenEntity","CacheRecord","PerformanceEvents","TimeUtils","ClientAuthError","AuthenticationScheme","PopTokenGenerator","UrlString","OIDC_DEFAULT_SCOPES","PromptValue","BaseInteractionClient","TemporaryCacheKeys","NativeExtensionMethod","NativeConstants","ApiId","NativeAuthError","BrowserAuthError","SilentCacheClient","NativeInteractionClient","_super","config","browserStorage","browserCrypto","logger","eventHandler","navigationClient","apiId","performanceClient","provider","accountId","nativeStorageImpl","correlationId","_this","call","nativeMessageHandler","nativeStorageManager","silentCacheClient","prototype","acquireToken","request","nativeATMeasurement","reqTimestamp","nativeRequest","result","messageBody","response","validatedResponse","_a","label","trace","startMeasurement","NativeInteractionClientAcquireToken","nowSeconds","initializeNativeRequest","sent","trys","push","acquireTokensFromCache","endMeasurement","success","isNativeBroker","fromCache","info","method","GetToken","sendMessage","validateNativeResponse","handleNativeResponse","then","requestId","catch","error","errorCode","subErrorCode","subError","createSilentCacheRequest","cachedAccount","authority","scopes","fromString","scope","asArray","account","forceRefresh","nativeAccountId","silentRequest","e_2","warning","createNoAccountFoundError","getAccountInfoFilteredBy","acquireTokenRedirect","e_3","navigationOptions","redirectUri","isFatal","setTemporaryCache","NATIVE_REQUEST","JSON","stringify","timeout","system","redirectNavigationTimeout","noHistory","auth","navigateToLoginRequestUrl","window","location","href","getRedirectUri","navigateExternal","handleRedirectPromise","cachedRequest","prompt","e_4","isInteractionInProgress","getCachedNativeRequest","verbose","removeItem","generateCacheKey","setInteractionInProgress","logout","Promise","reject","authorityPreferredCache","idTokenObj","homeAccountIdentifier","accountEntity","id","createUserSwitchError","getDiscoveredAuthority","getPreferredCache","createIdTokenObj","createHomeAccountIdentifier","createAccountEntity","generateAuthenticationResult","canonicalAuthority","cacheAccount","cacheNativeTokens","accessToken","tenantId","id_token","EMPTY_STRING","generateHomeAccountId","client_info","Default","createAccount","undefined","generateScopes","generatePopAccessToken","popTokenGenerator","shrParameters","tokenType","POP","shr","resourceRequestMethod","resourceRequestUri","shrClaims","shrNonce","keyId","createKeyIdMissingError","signPopToken","access_token","mats","responseScopes","accountProperties","uid","tid","responseAccessToken","addTelemetryFromNativeResponse","properties","claims","oid","sub","BEARER","uniqueId","getAccountInfo","idToken","idTokenClaims","isResponseFromCache","expiresOn","Date","Number","expires_in","state","fromNativeBroker","setAccount","removeAccountContext","e","cachedIdToken","createIdTokenEntity","clientId","expiresIn","SHR_NONCE_VALIDITY","parseInt","tokenExpirationSeconds","cachedAccessToken","createAccessTokenEntity","printScopes","nativeCacheRecord","saveCacheRecord","getMATSFromResponse","addStaticFields","extensionId","getExtensionId","extensionVersion","getExtensionVersion","matsBrokerVersion","broker_version","matsAccountJoinOnStart","account_join_on_start","matsAccountJoinOnEnd","account_join_on_end","matsDeviceJoin","device_join","matsPromptBehavior","prompt_behavior","matsApiErrorCode","api_error_code","matsUiVisible","ui_visible","matsSilentCode","silent_code","matsSilentBiSubCode","silent_bi_sub_code","matsSilentMessage","silent_message","matsSilentStatus","silent_status","matsHttpStatus","http_status","matsHttpEventCount","http_event_count","hasOwnProperty","createUnexpectedError","MATS","parse","is_cached","remainingProperties","scopeSet","getPrompt","validatedRequest","reqCnfData","validateRequestAuthority","validateAsUri","appendScopes","ssoSilent","acquireTokenSilent_silentFlow","NONE","CONSENT","LOGIN","createNativePromptParameterNotSupportedError","urlString","authenticationScheme","windowTitleSubstring","document","title","extraParameters","extraQueryParameters","tokenQueryParameters","telemetry","MATS_TELEMETRY","extendedExpiryToken","generateCnf","reqCnf","reqCnfString","kid"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __extends, __awaiter, __generator, __rest, __assign } from '../_virtual/_tslib.js';\nimport { ScopeSet, AuthToken, Constants, AccountEntity, AuthorityType, IdTokenEntity, AccessTokenEntity, CacheRecord, PerformanceEvents, TimeUtils, ClientAuthError, AuthenticationScheme, PopTokenGenerator, UrlString, OIDC_DEFAULT_SCOPES, PromptValue } from '@azure/msal-common';\nimport { BaseInteractionClient } from './BaseInteractionClient.js';\nimport { TemporaryCacheKeys, NativeExtensionMethod, NativeConstants, ApiId } from '../utils/BrowserConstants.js';\nimport { NativeAuthError } from '../error/NativeAuthError.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { SilentCacheClient } from './SilentCacheClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar NativeInteractionClient = /** @class */ (function (_super) {\r\n    __extends(NativeInteractionClient, _super);\r\n    function NativeInteractionClient(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\r\n        var _this = _super.call(this, config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId) || this;\r\n        _this.apiId = apiId;\r\n        _this.accountId = accountId;\r\n        _this.nativeMessageHandler = provider;\r\n        _this.nativeStorageManager = nativeStorageImpl;\r\n        _this.silentCacheClient = new SilentCacheClient(config, _this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Acquire token from native platform via browser extension\r\n     * @param request\r\n     */\r\n    NativeInteractionClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var nativeATMeasurement, reqTimestamp, nativeRequest, result, messageBody, response, validatedResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\r\n                        nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\r\n                        reqTimestamp = TimeUtils.nowSeconds();\r\n                        return [4 /*yield*/, this.initializeNativeRequest(request)];\r\n                    case 1:\r\n                        nativeRequest = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.acquireTokensFromCache(this.accountId, nativeRequest)];\r\n                    case 3:\r\n                        result = _a.sent();\r\n                        nativeATMeasurement.endMeasurement({\r\n                            success: true,\r\n                            isNativeBroker: false,\r\n                            fromCache: true\r\n                        });\r\n                        return [2 /*return*/, result];\r\n                    case 4:\r\n                        _a.sent();\r\n                        // continue with a native call for any and all errors\r\n                        this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\r\n                        return [3 /*break*/, 5];\r\n                    case 5:\r\n                        messageBody = {\r\n                            method: NativeExtensionMethod.GetToken,\r\n                            request: nativeRequest\r\n                        };\r\n                        return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\r\n                    case 6:\r\n                        response = _a.sent();\r\n                        validatedResponse = this.validateNativeResponse(response);\r\n                        return [2 /*return*/, this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\r\n                                .then(function (result) {\r\n                                nativeATMeasurement.endMeasurement({\r\n                                    success: true,\r\n                                    isNativeBroker: true,\r\n                                    requestId: result.requestId\r\n                                });\r\n                                return result;\r\n                            })\r\n                                .catch(function (error) {\r\n                                nativeATMeasurement.endMeasurement({\r\n                                    success: false,\r\n                                    errorCode: error.errorCode,\r\n                                    subErrorCode: error.subError,\r\n                                    isNativeBroker: true\r\n                                });\r\n                                throw error;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates silent flow request\r\n     * @param request\r\n     * @param cachedAccount\r\n     * @returns CommonSilentFlowRequest\r\n     */\r\n    NativeInteractionClient.prototype.createSilentCacheRequest = function (request, cachedAccount) {\r\n        return {\r\n            authority: request.authority,\r\n            correlationId: this.correlationId,\r\n            scopes: ScopeSet.fromString(request.scope).asArray(),\r\n            account: cachedAccount,\r\n            forceRefresh: false,\r\n        };\r\n    };\r\n    /**\r\n     * Fetches the tokens from the cache if un-expired\r\n     * @param nativeAccountId\r\n     * @param request\r\n     * @returns authenticationResult\r\n     */\r\n    NativeInteractionClient.prototype.acquireTokensFromCache = function (nativeAccountId, request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var account, silentRequest, result, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!nativeAccountId) {\r\n                            this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\r\n                            throw ClientAuthError.createNoAccountFoundError();\r\n                        }\r\n                        account = this.browserStorage.getAccountInfoFilteredBy({ nativeAccountId: nativeAccountId });\r\n                        if (!account) {\r\n                            throw ClientAuthError.createNoAccountFoundError();\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        silentRequest = this.createSilentCacheRequest(request, account);\r\n                        return [4 /*yield*/, this.silentCacheClient.acquireToken(silentRequest)];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                    case 3:\r\n                        e_2 = _a.sent();\r\n                        throw e_2;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\r\n     * @param request\r\n     */\r\n    NativeInteractionClient.prototype.acquireTokenRedirect = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var nativeRequest, messageBody, response, e_3, navigationOptions, redirectUri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\r\n                        return [4 /*yield*/, this.initializeNativeRequest(request)];\r\n                    case 1:\r\n                        nativeRequest = _a.sent();\r\n                        messageBody = {\r\n                            method: NativeExtensionMethod.GetToken,\r\n                            request: nativeRequest\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        this.validateNativeResponse(response);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_3 = _a.sent();\r\n                        // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\r\n                        if (e_3 instanceof NativeAuthError && e_3.isFatal()) {\r\n                            throw e_3;\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 5:\r\n                        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\r\n                        navigationOptions = {\r\n                            apiId: ApiId.acquireTokenRedirect,\r\n                            timeout: this.config.system.redirectNavigationTimeout,\r\n                            noHistory: false\r\n                        };\r\n                        redirectUri = this.config.auth.navigateToLoginRequestUrl ? window.location.href : this.getRedirectUri(request.redirectUri);\r\n                        return [4 /*yield*/, this.navigationClient.navigateExternal(redirectUri, navigationOptions)];\r\n                    case 6:\r\n                        _a.sent(); // Need to treat this as external to ensure handleRedirectPromise is run again\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\r\n     */\r\n    NativeInteractionClient.prototype.handleRedirectPromise = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cachedRequest, prompt, request, messageBody, reqTimestamp, response, result, e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\r\n                        if (!this.browserStorage.isInteractionInProgress(true)) {\r\n                            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        cachedRequest = this.browserStorage.getCachedNativeRequest();\r\n                        if (!cachedRequest) {\r\n                            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        prompt = cachedRequest.prompt, request = __rest(cachedRequest, [\"prompt\"]);\r\n                        if (prompt) {\r\n                            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\r\n                        }\r\n                        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\r\n                        messageBody = {\r\n                            method: NativeExtensionMethod.GetToken,\r\n                            request: request\r\n                        };\r\n                        reqTimestamp = TimeUtils.nowSeconds();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\r\n                        return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.validateNativeResponse(response);\r\n                        result = this.handleNativeResponse(response, request, reqTimestamp);\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        return [2 /*return*/, result];\r\n                    case 3:\r\n                        e_4 = _a.sent();\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        throw e_4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Logout from native platform via browser extension\r\n     * @param request\r\n     */\r\n    NativeInteractionClient.prototype.logout = function () {\r\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\r\n        return Promise.reject(\"Logout not implemented yet\");\r\n    };\r\n    /**\r\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\r\n     * @param response\r\n     * @param request\r\n     * @param reqTimestamp\r\n     */\r\n    NativeInteractionClient.prototype.handleNativeResponse = function (response, request, reqTimestamp) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authority, authorityPreferredCache, idTokenObj, homeAccountIdentifier, accountEntity, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\r\n                        if (response.account.id !== request.accountId) {\r\n                            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\r\n                            throw NativeAuthError.createUserSwitchError();\r\n                        }\r\n                        return [4 /*yield*/, this.getDiscoveredAuthority(request.authority)];\r\n                    case 1:\r\n                        authority = _a.sent();\r\n                        authorityPreferredCache = authority.getPreferredCache();\r\n                        idTokenObj = this.createIdTokenObj(response);\r\n                        homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenObj);\r\n                        accountEntity = this.createAccountEntity(response, homeAccountIdentifier, idTokenObj, authorityPreferredCache);\r\n                        return [4 /*yield*/, this.generateAuthenticationResult(response, request, idTokenObj, accountEntity, authority.canonicalAuthority, reqTimestamp)];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        // cache accounts and tokens in the appropriate storage\r\n                        this.cacheAccount(accountEntity);\r\n                        this.cacheNativeTokens(response, request, homeAccountIdentifier, accountEntity, idTokenObj, result.accessToken, result.tenantId, reqTimestamp);\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create an idToken Object (not entity)\r\n     * @param response\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.createIdTokenObj = function (response) {\r\n        return new AuthToken(response.id_token || Constants.EMPTY_STRING, this.browserCrypto);\r\n    };\r\n    /**\r\n     * creates an homeAccountIdentifier for the account\r\n     * @param response\r\n     * @param idTokenObj\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.createHomeAccountIdentifier = function (response, idTokenObj) {\r\n        // Save account in browser storage\r\n        var homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenObj);\r\n        return homeAccountIdentifier;\r\n    };\r\n    /**\r\n     * Creates account entity\r\n     * @param response\r\n     * @param homeAccountIdentifier\r\n     * @param idTokenObj\r\n     * @param authority\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.createAccountEntity = function (response, homeAccountIdentifier, idTokenObj, authority) {\r\n        return AccountEntity.createAccount(response.client_info, homeAccountIdentifier, idTokenObj, undefined, undefined, undefined, authority, response.account.id);\r\n    };\r\n    /**\r\n     * Helper to generate scopes\r\n     * @param response\r\n     * @param request\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.generateScopes = function (response, request) {\r\n        return response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\r\n    };\r\n    /**\r\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\r\n     * @param request\r\n     * @param response\r\n     */\r\n    NativeInteractionClient.prototype.generatePopAccessToken = function (response, request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var popTokenGenerator, shrParameters;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(request.tokenType === AuthenticationScheme.POP)) return [3 /*break*/, 2];\r\n                        /**\r\n                         * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\r\n                         * is still received, SHR is calculated locally\r\n                         */\r\n                        // Check if native layer returned an SHR token\r\n                        if (response.shr) {\r\n                            this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\r\n                            return [2 /*return*/, response.shr];\r\n                        }\r\n                        popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\r\n                        shrParameters = {\r\n                            resourceRequestMethod: request.resourceRequestMethod,\r\n                            resourceRequestUri: request.resourceRequestUri,\r\n                            shrClaims: request.shrClaims,\r\n                            shrNonce: request.shrNonce\r\n                        };\r\n                        /**\r\n                         * KeyID must be present in the native request from when the PoP key was generated in order for\r\n                         * PopTokenGenerator to query the full key for signing\r\n                         */\r\n                        if (!request.keyId) {\r\n                            throw ClientAuthError.createKeyIdMissingError();\r\n                        }\r\n                        return [4 /*yield*/, popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2: return [2 /*return*/, response.access_token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates authentication result\r\n     * @param response\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param accountEntity\r\n     * @param authority\r\n     * @param reqTimestamp\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.generateAuthenticationResult = function (response, request, idTokenObj, accountEntity, authority, reqTimestamp) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var mats, responseScopes, accountProperties, uid, tid, responseAccessToken, tokenType, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        mats = this.addTelemetryFromNativeResponse(response);\r\n                        responseScopes = response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\r\n                        accountProperties = response.account.properties || {};\r\n                        uid = accountProperties[\"UID\"] || idTokenObj.claims.oid || idTokenObj.claims.sub || Constants.EMPTY_STRING;\r\n                        tid = accountProperties[\"TenantId\"] || idTokenObj.claims.tid || Constants.EMPTY_STRING;\r\n                        return [4 /*yield*/, this.generatePopAccessToken(response, request)];\r\n                    case 1:\r\n                        responseAccessToken = _a.sent();\r\n                        tokenType = (request.tokenType === AuthenticationScheme.POP) ? AuthenticationScheme.POP : AuthenticationScheme.BEARER;\r\n                        result = {\r\n                            authority: authority,\r\n                            uniqueId: uid,\r\n                            tenantId: tid,\r\n                            scopes: responseScopes.asArray(),\r\n                            account: accountEntity.getAccountInfo(),\r\n                            idToken: response.id_token,\r\n                            idTokenClaims: idTokenObj.claims,\r\n                            accessToken: responseAccessToken,\r\n                            fromCache: mats ? this.isResponseFromCache(mats) : false,\r\n                            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\r\n                            tokenType: tokenType,\r\n                            correlationId: this.correlationId,\r\n                            state: response.state,\r\n                            fromNativeBroker: true\r\n                        };\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * cache the account entity in browser storage\r\n     * @param accountEntity\r\n     */\r\n    NativeInteractionClient.prototype.cacheAccount = function (accountEntity) {\r\n        var _this = this;\r\n        // Store the account info and hence `nativeAccountId` in browser cache\r\n        this.browserStorage.setAccount(accountEntity);\r\n        // Remove any existing cached tokens for this account in browser storage\r\n        this.browserStorage.removeAccountContext(accountEntity).catch(function (e) {\r\n            _this.logger.error(\"Error occurred while removing account context from browser storage. \" + e);\r\n        });\r\n    };\r\n    /**\r\n     * Stores the access_token and id_token in inmemory storage\r\n     * @param response\r\n     * @param request\r\n     * @param homeAccountIdentifier\r\n     * @param idTokenObj\r\n     * @param responseAccessToken\r\n     * @param tenantId\r\n     * @param reqTimestamp\r\n     */\r\n    NativeInteractionClient.prototype.cacheNativeTokens = function (response, request, homeAccountIdentifier, accountEntity, idTokenObj, responseAccessToken, tenantId, reqTimestamp) {\r\n        var cachedIdToken = IdTokenEntity.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || Constants.EMPTY_STRING, request.clientId, idTokenObj.claims.tid || Constants.EMPTY_STRING);\r\n        // cache accessToken in inmemory storage\r\n        var expiresIn = (request.tokenType === AuthenticationScheme.POP)\r\n            ? Constants.SHR_NONCE_VALIDITY\r\n            : (typeof response.expires_in === \"string\"\r\n                ? parseInt(response.expires_in, 10)\r\n                : response.expires_in) || 0;\r\n        var tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n        var responseScopes = this.generateScopes(response, request);\r\n        var cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenObj\r\n            ? idTokenObj.claims.tid || Constants.EMPTY_STRING\r\n            : tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, this.browserCrypto);\r\n        var nativeCacheRecord = new CacheRecord(accountEntity, cachedIdToken, cachedAccessToken);\r\n        this.nativeStorageManager.saveCacheRecord(nativeCacheRecord);\r\n    };\r\n    NativeInteractionClient.prototype.addTelemetryFromNativeResponse = function (response) {\r\n        var mats = this.getMATSFromResponse(response);\r\n        if (!mats) {\r\n            return null;\r\n        }\r\n        this.performanceClient.addStaticFields({\r\n            extensionId: this.nativeMessageHandler.getExtensionId(),\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n            matsBrokerVersion: mats.broker_version,\r\n            matsAccountJoinOnStart: mats.account_join_on_start,\r\n            matsAccountJoinOnEnd: mats.account_join_on_end,\r\n            matsDeviceJoin: mats.device_join,\r\n            matsPromptBehavior: mats.prompt_behavior,\r\n            matsApiErrorCode: mats.api_error_code,\r\n            matsUiVisible: mats.ui_visible,\r\n            matsSilentCode: mats.silent_code,\r\n            matsSilentBiSubCode: mats.silent_bi_sub_code,\r\n            matsSilentMessage: mats.silent_message,\r\n            matsSilentStatus: mats.silent_status,\r\n            matsHttpStatus: mats.http_status,\r\n            matsHttpEventCount: mats.http_event_count\r\n        }, this.correlationId);\r\n        return mats;\r\n    };\r\n    /**\r\n     * Validates native platform response before processing\r\n     * @param response\r\n     */\r\n    NativeInteractionClient.prototype.validateNativeResponse = function (response) {\r\n        if (response.hasOwnProperty(\"access_token\") &&\r\n            response.hasOwnProperty(\"id_token\") &&\r\n            response.hasOwnProperty(\"client_info\") &&\r\n            response.hasOwnProperty(\"account\") &&\r\n            response.hasOwnProperty(\"scope\") &&\r\n            response.hasOwnProperty(\"expires_in\")) {\r\n            return response;\r\n        }\r\n        else {\r\n            throw NativeAuthError.createUnexpectedError(\"Response missing expected properties.\");\r\n        }\r\n    };\r\n    /**\r\n     * Gets MATS telemetry from native response\r\n     * @param response\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.getMATSFromResponse = function (response) {\r\n        if (response.properties.MATS) {\r\n            try {\r\n                return JSON.parse(response.properties.MATS);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns whether or not response came from native cache\r\n     * @param response\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.isResponseFromCache = function (mats) {\r\n        if (typeof mats.is_cached === \"undefined\") {\r\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\r\n            return false;\r\n        }\r\n        return !!mats.is_cached;\r\n    };\r\n    /**\r\n     * Translates developer provided request object into NativeRequest object\r\n     * @param request\r\n     */\r\n    NativeInteractionClient.prototype.initializeNativeRequest = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authority, canonicalAuthority, scopes, remainingProperties, scopeSet, getPrompt, validatedRequest, shrParameters, popTokenGenerator, reqCnfData;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\r\n                        authority = request.authority || this.config.auth.authority;\r\n                        if (!request.account) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.validateRequestAuthority(authority, request.account)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        canonicalAuthority = new UrlString(authority);\r\n                        canonicalAuthority.validateAsUri();\r\n                        scopes = request.scopes, remainingProperties = __rest(request, [\"scopes\"]);\r\n                        scopeSet = new ScopeSet(scopes || []);\r\n                        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\r\n                        getPrompt = function () {\r\n                            // If request is silent, prompt is always none\r\n                            switch (_this.apiId) {\r\n                                case ApiId.ssoSilent:\r\n                                case ApiId.acquireTokenSilent_silentFlow:\r\n                                    _this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\r\n                                    return PromptValue.NONE;\r\n                            }\r\n                            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\r\n                            if (!request.prompt) {\r\n                                _this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\r\n                                return undefined;\r\n                            }\r\n                            // If request is interactive, check if prompt provided is allowed to go directly to native broker\r\n                            switch (request.prompt) {\r\n                                case PromptValue.NONE:\r\n                                case PromptValue.CONSENT:\r\n                                case PromptValue.LOGIN:\r\n                                    _this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\r\n                                    return request.prompt;\r\n                                default:\r\n                                    _this.logger.trace(\"initializeNativeRequest: prompt = \" + request.prompt + \" is not compatible with native flow\");\r\n                                    throw BrowserAuthError.createNativePromptParameterNotSupportedError();\r\n                            }\r\n                        };\r\n                        validatedRequest = __assign(__assign({}, remainingProperties), { accountId: this.accountId, clientId: this.config.auth.clientId, authority: canonicalAuthority.urlString, scope: scopeSet.printScopes(), redirectUri: this.getRedirectUri(request.redirectUri), prompt: getPrompt(), correlationId: this.correlationId, tokenType: request.authenticationScheme, windowTitleSubstring: document.title, extraParameters: __assign(__assign(__assign({}, request.extraQueryParameters), request.tokenQueryParameters), { telemetry: NativeConstants.MATS_TELEMETRY }), extendedExpiryToken: false // Make this configurable?\r\n                         });\r\n                        if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3 /*break*/, 4];\r\n                        shrParameters = {\r\n                            resourceRequestUri: request.resourceRequestUri,\r\n                            resourceRequestMethod: request.resourceRequestMethod,\r\n                            shrClaims: request.shrClaims,\r\n                            shrNonce: request.shrNonce\r\n                        };\r\n                        popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\r\n                        return [4 /*yield*/, popTokenGenerator.generateCnf(shrParameters)];\r\n                    case 3:\r\n                        reqCnfData = _a.sent();\r\n                        // to reduce the URL length, it is recommended to send the short form of the req_cnf \r\n                        validatedRequest.reqCnf = reqCnfData.reqCnfString;\r\n                        validatedRequest.keyId = reqCnfData.kid;\r\n                        _a.label = 4;\r\n                    case 4: return [2 /*return*/, validatedRequest];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return NativeInteractionClient;\r\n}(BaseInteractionClient));\n\nexport { NativeInteractionClient };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,uBAAuB;AAC3F,SAASC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,aAAa,EAAEC,aAAa,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,iBAAiB,EAAEC,SAAS,EAAEC,eAAe,EAAEC,oBAAoB,EAAEC,iBAAiB,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,WAAW,QAAQ,oBAAoB;AACrR,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,SAASC,kBAAkB,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,KAAK,QAAQ,8BAA8B;AAChH,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,iBAAiB,QAAQ,wBAAwB;;AAE1D;AACA;AACA;AACA;AACA,IAAIC,uBAAuB,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC3D9B,SAAS,CAAC6B,uBAAuB,EAAEC,MAAM,CAAC;EAC1C,SAASD,uBAAuBA,CAACE,MAAM,EAAEC,cAAc,EAAEC,aAAa,EAAEC,MAAM,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,iBAAiB,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,iBAAiB,EAAEC,aAAa,EAAE;IAC7L,IAAIC,KAAK,GAAGb,MAAM,CAACc,IAAI,CAAC,IAAI,EAAEb,MAAM,EAAEC,cAAc,EAAEC,aAAa,EAAEC,MAAM,EAAEC,YAAY,EAAEC,gBAAgB,EAAEE,iBAAiB,EAAEC,QAAQ,EAAEG,aAAa,CAAC,IAAI,IAAI;IAChKC,KAAK,CAACN,KAAK,GAAGA,KAAK;IACnBM,KAAK,CAACH,SAAS,GAAGA,SAAS;IAC3BG,KAAK,CAACE,oBAAoB,GAAGN,QAAQ;IACrCI,KAAK,CAACG,oBAAoB,GAAGL,iBAAiB;IAC9CE,KAAK,CAACI,iBAAiB,GAAG,IAAInB,iBAAiB,CAACG,MAAM,EAAEY,KAAK,CAACG,oBAAoB,EAAEb,aAAa,EAAEC,MAAM,EAAEC,YAAY,EAAEC,gBAAgB,EAAEE,iBAAiB,EAAEC,QAAQ,EAAEG,aAAa,CAAC;IACtL,OAAOC,KAAK;EAChB;EACA;AACJ;AACA;AACA;EACId,uBAAuB,CAACmB,SAAS,CAACC,YAAY,GAAG,UAAUC,OAAO,EAAE;IAChE,OAAOjD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIkD,mBAAmB,EAAEC,YAAY,EAAEC,aAAa,EAAEC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,iBAAiB;MACtG,OAAOvD,WAAW,CAAC,IAAI,EAAE,UAAUwD,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,CAACzB,MAAM,CAAC0B,KAAK,CAAC,gDAAgD,CAAC;YACnET,mBAAmB,GAAG,IAAI,CAACb,iBAAiB,CAACuB,gBAAgB,CAAChD,iBAAiB,CAACiD,mCAAmC,EAAEZ,OAAO,CAACR,aAAa,CAAC;YAC3IU,YAAY,GAAGtC,SAAS,CAACiD,UAAU,EAAE;YACrC,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACC,uBAAuB,CAACd,OAAO,CAAC,CAAC;UAC/D,KAAK,CAAC;YACFG,aAAa,GAAGK,EAAE,CAACO,IAAI,EAAE;YACzBP,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFD,EAAE,CAACQ,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACC,sBAAsB,CAAC,IAAI,CAAC5B,SAAS,EAAEa,aAAa,CAAC,CAAC;UACpF,KAAK,CAAC;YACFC,MAAM,GAAGI,EAAE,CAACO,IAAI,EAAE;YAClBd,mBAAmB,CAACkB,cAAc,CAAC;cAC/BC,OAAO,EAAE,IAAI;cACbC,cAAc,EAAE,KAAK;cACrBC,SAAS,EAAE;YACf,CAAC,CAAC;YACF,OAAO,CAAC,CAAC,CAAC,YAAYlB,MAAM,CAAC;UACjC,KAAK,CAAC;YACFI,EAAE,CAACO,IAAI,EAAE;YACT;YACA,IAAI,CAAC/B,MAAM,CAACuC,IAAI,CAAC,4EAA4E,CAAC;YAC9F,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YACFlB,WAAW,GAAG;cACVmB,MAAM,EAAEnD,qBAAqB,CAACoD,QAAQ;cACtCzB,OAAO,EAAEG;YACb,CAAC;YACD,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACR,oBAAoB,CAAC+B,WAAW,CAACrB,WAAW,CAAC,CAAC;UAC5E,KAAK,CAAC;YACFC,QAAQ,GAAGE,EAAE,CAACO,IAAI,EAAE;YACpBR,iBAAiB,GAAG,IAAI,CAACoB,sBAAsB,CAACrB,QAAQ,CAAC;YACzD,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACsB,oBAAoB,CAACrB,iBAAiB,EAAEJ,aAAa,EAAED,YAAY,CAAC,CACtF2B,IAAI,CAAC,UAAUzB,MAAM,EAAE;cACxBH,mBAAmB,CAACkB,cAAc,CAAC;gBAC/BC,OAAO,EAAE,IAAI;gBACbC,cAAc,EAAE,IAAI;gBACpBS,SAAS,EAAE1B,MAAM,CAAC0B;cACtB,CAAC,CAAC;cACF,OAAO1B,MAAM;YACjB,CAAC,CAAC,CACG2B,KAAK,CAAC,UAAUC,KAAK,EAAE;cACxB/B,mBAAmB,CAACkB,cAAc,CAAC;gBAC/BC,OAAO,EAAE,KAAK;gBACda,SAAS,EAAED,KAAK,CAACC,SAAS;gBAC1BC,YAAY,EAAEF,KAAK,CAACG,QAAQ;gBAC5Bd,cAAc,EAAE;cACpB,CAAC,CAAC;cACF,MAAMW,KAAK;YACf,CAAC,CAAC,CAAC;QAAC;MAEpB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrD,uBAAuB,CAACmB,SAAS,CAACsC,wBAAwB,GAAG,UAAUpC,OAAO,EAAEqC,aAAa,EAAE;IAC3F,OAAO;MACHC,SAAS,EAAEtC,OAAO,CAACsC,SAAS;MAC5B9C,aAAa,EAAE,IAAI,CAACA,aAAa;MACjC+C,MAAM,EAAEpF,QAAQ,CAACqF,UAAU,CAACxC,OAAO,CAACyC,KAAK,CAAC,CAACC,OAAO,EAAE;MACpDC,OAAO,EAAEN,aAAa;MACtBO,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIjE,uBAAuB,CAACmB,SAAS,CAACoB,sBAAsB,GAAG,UAAU2B,eAAe,EAAE7C,OAAO,EAAE;IAC3F,OAAOjD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI4F,OAAO,EAAEG,aAAa,EAAE1C,MAAM,EAAE2C,GAAG;MACvC,OAAO/F,WAAW,CAAC,IAAI,EAAE,UAAUwD,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,CAACoC,eAAe,EAAE;cAClB,IAAI,CAAC7D,MAAM,CAACgE,OAAO,CAAC,8EAA8E,CAAC;cACnG,MAAMnF,eAAe,CAACoF,yBAAyB,EAAE;YACrD;YACAN,OAAO,GAAG,IAAI,CAAC7D,cAAc,CAACoE,wBAAwB,CAAC;cAAEL,eAAe,EAAEA;YAAgB,CAAC,CAAC;YAC5F,IAAI,CAACF,OAAO,EAAE;cACV,MAAM9E,eAAe,CAACoF,yBAAyB,EAAE;YACrD;YACAzC,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFD,EAAE,CAACQ,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB6B,aAAa,GAAG,IAAI,CAACV,wBAAwB,CAACpC,OAAO,EAAE2C,OAAO,CAAC;YAC/D,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC9C,iBAAiB,CAACE,YAAY,CAAC+C,aAAa,CAAC,CAAC;UAC5E,KAAK,CAAC;YACF1C,MAAM,GAAGI,EAAE,CAACO,IAAI,EAAE;YAClB,OAAO,CAAC,CAAC,CAAC,YAAYX,MAAM,CAAC;UACjC,KAAK,CAAC;YACF2C,GAAG,GAAGvC,EAAE,CAACO,IAAI,EAAE;YACf,MAAMgC,GAAG;UACb,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QAAC;MAEtC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACIpE,uBAAuB,CAACmB,SAAS,CAACqD,oBAAoB,GAAG,UAAUnD,OAAO,EAAE;IACxE,OAAOjD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIoD,aAAa,EAAEE,WAAW,EAAEC,QAAQ,EAAE8C,GAAG,EAAEC,iBAAiB,EAAEC,WAAW;MAC7E,OAAOtG,WAAW,CAAC,IAAI,EAAE,UAAUwD,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,CAACzB,MAAM,CAAC0B,KAAK,CAAC,wDAAwD,CAAC;YAC3E,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACI,uBAAuB,CAACd,OAAO,CAAC,CAAC;UAC/D,KAAK,CAAC;YACFG,aAAa,GAAGK,EAAE,CAACO,IAAI,EAAE;YACzBV,WAAW,GAAG;cACVmB,MAAM,EAAEnD,qBAAqB,CAACoD,QAAQ;cACtCzB,OAAO,EAAEG;YACb,CAAC;YACDK,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFD,EAAE,CAACQ,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACtB,oBAAoB,CAAC+B,WAAW,CAACrB,WAAW,CAAC,CAAC;UAC5E,KAAK,CAAC;YACFC,QAAQ,GAAGE,EAAE,CAACO,IAAI,EAAE;YACpB,IAAI,CAACY,sBAAsB,CAACrB,QAAQ,CAAC;YACrC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YACF8C,GAAG,GAAG5C,EAAE,CAACO,IAAI,EAAE;YACf;YACA,IAAIqC,GAAG,YAAY5E,eAAe,IAAI4E,GAAG,CAACG,OAAO,EAAE,EAAE;cACjD,MAAMH,GAAG;YACb;YACA,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YACF,IAAI,CAACtE,cAAc,CAAC0E,iBAAiB,CAACpF,kBAAkB,CAACqF,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACxD,aAAa,CAAC,EAAE,IAAI,CAAC;YAC7GkD,iBAAiB,GAAG;cAChBlE,KAAK,EAAEZ,KAAK,CAAC4E,oBAAoB;cACjCS,OAAO,EAAE,IAAI,CAAC/E,MAAM,CAACgF,MAAM,CAACC,yBAAyB;cACrDC,SAAS,EAAE;YACf,CAAC;YACDT,WAAW,GAAG,IAAI,CAACzE,MAAM,CAACmF,IAAI,CAACC,yBAAyB,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACC,cAAc,CAACrE,OAAO,CAACsD,WAAW,CAAC;YAC1H,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACpE,gBAAgB,CAACoF,gBAAgB,CAAChB,WAAW,EAAED,iBAAiB,CAAC,CAAC;UAChG,KAAK,CAAC;YACF7C,EAAE,CAACO,IAAI,EAAE,CAAC,CAAC;YACX,OAAO,CAAC,CAAC,CAAC,WAAW;QAAC;MAElC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;EACIpC,uBAAuB,CAACmB,SAAS,CAACyE,qBAAqB,GAAG,YAAY;IAClE,OAAOxH,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIyH,aAAa,EAAEC,MAAM,EAAEzE,OAAO,EAAEK,WAAW,EAAEH,YAAY,EAAEI,QAAQ,EAAEF,MAAM,EAAEsE,GAAG;MACpF,OAAO1H,WAAW,CAAC,IAAI,EAAE,UAAUwD,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,CAACzB,MAAM,CAAC0B,KAAK,CAAC,yDAAyD,CAAC;YAC5E,IAAI,CAAC,IAAI,CAAC5B,cAAc,CAAC6F,uBAAuB,CAAC,IAAI,CAAC,EAAE;cACpD,IAAI,CAAC3F,MAAM,CAACuC,IAAI,CAAC,uFAAuF,CAAC;cACzG,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC;YAC/B;YACAiD,aAAa,GAAG,IAAI,CAAC1F,cAAc,CAAC8F,sBAAsB,EAAE;YAC5D,IAAI,CAACJ,aAAa,EAAE;cAChB,IAAI,CAACxF,MAAM,CAAC6F,OAAO,CAAC,wGAAwG,CAAC;cAC7H,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC;YAC/B;YACAJ,MAAM,GAAGD,aAAa,CAACC,MAAM,EAAEzE,OAAO,GAAG/C,MAAM,CAACuH,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;YAC1E,IAAIC,MAAM,EAAE;cACR,IAAI,CAACzF,MAAM,CAAC6F,OAAO,CAAC,sMAAsM,CAAC;YAC/N;YACA,IAAI,CAAC/F,cAAc,CAACgG,UAAU,CAAC,IAAI,CAAChG,cAAc,CAACiG,gBAAgB,CAAC3G,kBAAkB,CAACqF,cAAc,CAAC,CAAC;YACvGpD,WAAW,GAAG;cACVmB,MAAM,EAAEnD,qBAAqB,CAACoD,QAAQ;cACtCzB,OAAO,EAAEA;YACb,CAAC;YACDE,YAAY,GAAGtC,SAAS,CAACiD,UAAU,EAAE;YACrCL,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFD,EAAE,CAACQ,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,IAAI,CAACjC,MAAM,CAAC6F,OAAO,CAAC,mFAAmF,CAAC;YACxG,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAClF,oBAAoB,CAAC+B,WAAW,CAACrB,WAAW,CAAC,CAAC;UAC5E,KAAK,CAAC;YACFC,QAAQ,GAAGE,EAAE,CAACO,IAAI,EAAE;YACpB,IAAI,CAACY,sBAAsB,CAACrB,QAAQ,CAAC;YACrCF,MAAM,GAAG,IAAI,CAACwB,oBAAoB,CAACtB,QAAQ,EAAEN,OAAO,EAAEE,YAAY,CAAC;YACnE,IAAI,CAACpB,cAAc,CAACkG,wBAAwB,CAAC,KAAK,CAAC;YACnD,OAAO,CAAC,CAAC,CAAC,YAAY5E,MAAM,CAAC;UACjC,KAAK,CAAC;YACFsE,GAAG,GAAGlE,EAAE,CAACO,IAAI,EAAE;YACf,IAAI,CAACjC,cAAc,CAACkG,wBAAwB,CAAC,KAAK,CAAC;YACnD,MAAMN,GAAG;UACb,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QAAC;MAEtC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACI/F,uBAAuB,CAACmB,SAAS,CAACmF,MAAM,GAAG,YAAY;IACnD,IAAI,CAACjG,MAAM,CAAC0B,KAAK,CAAC,0CAA0C,CAAC;IAC7D,OAAOwE,OAAO,CAACC,MAAM,CAAC,4BAA4B,CAAC;EACvD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIxG,uBAAuB,CAACmB,SAAS,CAAC8B,oBAAoB,GAAG,UAAUtB,QAAQ,EAAEN,OAAO,EAAEE,YAAY,EAAE;IAChG,OAAOnD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIuF,SAAS,EAAE8C,uBAAuB,EAAEC,UAAU,EAAEC,qBAAqB,EAAEC,aAAa,EAAEnF,MAAM;MAChG,OAAOpD,WAAW,CAAC,IAAI,EAAE,UAAUwD,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,CAACzB,MAAM,CAAC0B,KAAK,CAAC,wDAAwD,CAAC;YAC3E,IAAIJ,QAAQ,CAACqC,OAAO,CAAC6C,EAAE,KAAKxF,OAAO,CAACV,SAAS,EAAE;cAC3C;cACA,MAAMd,eAAe,CAACiH,qBAAqB,EAAE;YACjD;YACA,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACC,sBAAsB,CAAC1F,OAAO,CAACsC,SAAS,CAAC,CAAC;UACxE,KAAK,CAAC;YACFA,SAAS,GAAG9B,EAAE,CAACO,IAAI,EAAE;YACrBqE,uBAAuB,GAAG9C,SAAS,CAACqD,iBAAiB,EAAE;YACvDN,UAAU,GAAG,IAAI,CAACO,gBAAgB,CAACtF,QAAQ,CAAC;YAC5CgF,qBAAqB,GAAG,IAAI,CAACO,2BAA2B,CAACvF,QAAQ,EAAE+E,UAAU,CAAC;YAC9EE,aAAa,GAAG,IAAI,CAACO,mBAAmB,CAACxF,QAAQ,EAAEgF,qBAAqB,EAAED,UAAU,EAAED,uBAAuB,CAAC;YAC9G,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACW,4BAA4B,CAACzF,QAAQ,EAAEN,OAAO,EAAEqF,UAAU,EAAEE,aAAa,EAAEjD,SAAS,CAAC0D,kBAAkB,EAAE9F,YAAY,CAAC,CAAC;UACrJ,KAAK,CAAC;YACFE,MAAM,GAAGI,EAAE,CAACO,IAAI,EAAE;YAClB;YACA,IAAI,CAACkF,YAAY,CAACV,aAAa,CAAC;YAChC,IAAI,CAACW,iBAAiB,CAAC5F,QAAQ,EAAEN,OAAO,EAAEsF,qBAAqB,EAAEC,aAAa,EAAEF,UAAU,EAAEjF,MAAM,CAAC+F,WAAW,EAAE/F,MAAM,CAACgG,QAAQ,EAAElG,YAAY,CAAC;YAC9I,OAAO,CAAC,CAAC,CAAC,YAAYE,MAAM,CAAC;QAAC;MAE1C,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIzB,uBAAuB,CAACmB,SAAS,CAAC8F,gBAAgB,GAAG,UAAUtF,QAAQ,EAAE;IACrE,OAAO,IAAIlD,SAAS,CAACkD,QAAQ,CAAC+F,QAAQ,IAAIhJ,SAAS,CAACiJ,YAAY,EAAE,IAAI,CAACvH,aAAa,CAAC;EACzF,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIJ,uBAAuB,CAACmB,SAAS,CAAC+F,2BAA2B,GAAG,UAAUvF,QAAQ,EAAE+E,UAAU,EAAE;IAC5F;IACA,IAAIC,qBAAqB,GAAGhI,aAAa,CAACiJ,qBAAqB,CAACjG,QAAQ,CAACkG,WAAW,IAAInJ,SAAS,CAACiJ,YAAY,EAAE/I,aAAa,CAACkJ,OAAO,EAAE,IAAI,CAACzH,MAAM,EAAE,IAAI,CAACD,aAAa,EAAEsG,UAAU,CAAC;IACnL,OAAOC,qBAAqB;EAChC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI3G,uBAAuB,CAACmB,SAAS,CAACgG,mBAAmB,GAAG,UAAUxF,QAAQ,EAAEgF,qBAAqB,EAAED,UAAU,EAAE/C,SAAS,EAAE;IACtH,OAAOhF,aAAa,CAACoJ,aAAa,CAACpG,QAAQ,CAACkG,WAAW,EAAElB,qBAAqB,EAAED,UAAU,EAAEsB,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAErE,SAAS,EAAEhC,QAAQ,CAACqC,OAAO,CAAC6C,EAAE,CAAC;EAChK,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI7G,uBAAuB,CAACmB,SAAS,CAAC8G,cAAc,GAAG,UAAUtG,QAAQ,EAAEN,OAAO,EAAE;IAC5E,OAAOM,QAAQ,CAACmC,KAAK,GAAGtF,QAAQ,CAACqF,UAAU,CAAClC,QAAQ,CAACmC,KAAK,CAAC,GAAGtF,QAAQ,CAACqF,UAAU,CAACxC,OAAO,CAACyC,KAAK,CAAC;EACpG,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI9D,uBAAuB,CAACmB,SAAS,CAAC+G,sBAAsB,GAAG,UAAUvG,QAAQ,EAAEN,OAAO,EAAE;IACpF,OAAOjD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI+J,iBAAiB,EAAEC,aAAa;MACpC,OAAO/J,WAAW,CAAC,IAAI,EAAE,UAAUwD,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,EAAET,OAAO,CAACgH,SAAS,KAAKlJ,oBAAoB,CAACmJ,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC9E;AACxB;AACA;AACA;YACwB;YACA,IAAI3G,QAAQ,CAAC4G,GAAG,EAAE;cACd,IAAI,CAAClI,MAAM,CAAC0B,KAAK,CAAC,4DAA4D,CAAC;cAC/E,OAAO,CAAC,CAAC,CAAC,YAAYJ,QAAQ,CAAC4G,GAAG,CAAC;YACvC;YACAJ,iBAAiB,GAAG,IAAI/I,iBAAiB,CAAC,IAAI,CAACgB,aAAa,CAAC;YAC7DgI,aAAa,GAAG;cACZI,qBAAqB,EAAEnH,OAAO,CAACmH,qBAAqB;cACpDC,kBAAkB,EAAEpH,OAAO,CAACoH,kBAAkB;cAC9CC,SAAS,EAAErH,OAAO,CAACqH,SAAS;cAC5BC,QAAQ,EAAEtH,OAAO,CAACsH;YACtB,CAAC;YACD;AACxB;AACA;AACA;YACwB,IAAI,CAACtH,OAAO,CAACuH,KAAK,EAAE;cAChB,MAAM1J,eAAe,CAAC2J,uBAAuB,EAAE;YACnD;YACA,OAAO,CAAC,CAAC,CAAC,WAAWV,iBAAiB,CAACW,YAAY,CAACnH,QAAQ,CAACoH,YAAY,EAAE1H,OAAO,CAACuH,KAAK,EAAER,aAAa,CAAC,CAAC;UAC7G,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,YAAYvG,EAAE,CAACO,IAAI,EAAE,CAAC;UACxC,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,YAAYT,QAAQ,CAACoH,YAAY,CAAC;QAAC;MAE7D,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI/I,uBAAuB,CAACmB,SAAS,CAACiG,4BAA4B,GAAG,UAAUzF,QAAQ,EAAEN,OAAO,EAAEqF,UAAU,EAAEE,aAAa,EAAEjD,SAAS,EAAEpC,YAAY,EAAE;IAC9I,OAAOnD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI4K,IAAI,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,GAAG,EAAEC,GAAG,EAAEC,mBAAmB,EAAEhB,SAAS,EAAE5G,MAAM;MAC7F,OAAOpD,WAAW,CAAC,IAAI,EAAE,UAAUwD,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACFkH,IAAI,GAAG,IAAI,CAACM,8BAA8B,CAAC3H,QAAQ,CAAC;YACpDsH,cAAc,GAAGtH,QAAQ,CAACmC,KAAK,GAAGtF,QAAQ,CAACqF,UAAU,CAAClC,QAAQ,CAACmC,KAAK,CAAC,GAAGtF,QAAQ,CAACqF,UAAU,CAACxC,OAAO,CAACyC,KAAK,CAAC;YAC1GoF,iBAAiB,GAAGvH,QAAQ,CAACqC,OAAO,CAACuF,UAAU,IAAI,CAAC,CAAC;YACrDJ,GAAG,GAAGD,iBAAiB,CAAC,KAAK,CAAC,IAAIxC,UAAU,CAAC8C,MAAM,CAACC,GAAG,IAAI/C,UAAU,CAAC8C,MAAM,CAACE,GAAG,IAAIhL,SAAS,CAACiJ,YAAY;YAC1GyB,GAAG,GAAGF,iBAAiB,CAAC,UAAU,CAAC,IAAIxC,UAAU,CAAC8C,MAAM,CAACJ,GAAG,IAAI1K,SAAS,CAACiJ,YAAY;YACtF,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACO,sBAAsB,CAACvG,QAAQ,EAAEN,OAAO,CAAC,CAAC;UACxE,KAAK,CAAC;YACFgI,mBAAmB,GAAGxH,EAAE,CAACO,IAAI,EAAE;YAC/BiG,SAAS,GAAIhH,OAAO,CAACgH,SAAS,KAAKlJ,oBAAoB,CAACmJ,GAAG,GAAInJ,oBAAoB,CAACmJ,GAAG,GAAGnJ,oBAAoB,CAACwK,MAAM;YACrHlI,MAAM,GAAG;cACLkC,SAAS,EAAEA,SAAS;cACpBiG,QAAQ,EAAET,GAAG;cACb1B,QAAQ,EAAE2B,GAAG;cACbxF,MAAM,EAAEqF,cAAc,CAAClF,OAAO,EAAE;cAChCC,OAAO,EAAE4C,aAAa,CAACiD,cAAc,EAAE;cACvCC,OAAO,EAAEnI,QAAQ,CAAC+F,QAAQ;cAC1BqC,aAAa,EAAErD,UAAU,CAAC8C,MAAM;cAChChC,WAAW,EAAE6B,mBAAmB;cAChC1G,SAAS,EAAEqG,IAAI,GAAG,IAAI,CAACgB,mBAAmB,CAAChB,IAAI,CAAC,GAAG,KAAK;cACxDiB,SAAS,EAAE,IAAIC,IAAI,CAACC,MAAM,CAAC5I,YAAY,GAAGI,QAAQ,CAACyI,UAAU,CAAC,GAAG,IAAI,CAAC;cACtE/B,SAAS,EAAEA,SAAS;cACpBxH,aAAa,EAAE,IAAI,CAACA,aAAa;cACjCwJ,KAAK,EAAE1I,QAAQ,CAAC0I,KAAK;cACrBC,gBAAgB,EAAE;YACtB,CAAC;YACD,OAAO,CAAC,CAAC,CAAC,YAAY7I,MAAM,CAAC;QAAC;MAE1C,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACIzB,uBAAuB,CAACmB,SAAS,CAACmG,YAAY,GAAG,UAAUV,aAAa,EAAE;IACtE,IAAI9F,KAAK,GAAG,IAAI;IAChB;IACA,IAAI,CAACX,cAAc,CAACoK,UAAU,CAAC3D,aAAa,CAAC;IAC7C;IACA,IAAI,CAACzG,cAAc,CAACqK,oBAAoB,CAAC5D,aAAa,CAAC,CAACxD,KAAK,CAAC,UAAUqH,CAAC,EAAE;MACvE3J,KAAK,CAACT,MAAM,CAACgD,KAAK,CAAC,sEAAsE,GAAGoH,CAAC,CAAC;IAClG,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIzK,uBAAuB,CAACmB,SAAS,CAACoG,iBAAiB,GAAG,UAAU5F,QAAQ,EAAEN,OAAO,EAAEsF,qBAAqB,EAAEC,aAAa,EAAEF,UAAU,EAAE2C,mBAAmB,EAAE5B,QAAQ,EAAElG,YAAY,EAAE;IAC9K,IAAImJ,aAAa,GAAG7L,aAAa,CAAC8L,mBAAmB,CAAChE,qBAAqB,EAAEtF,OAAO,CAACsC,SAAS,EAAEhC,QAAQ,CAAC+F,QAAQ,IAAIhJ,SAAS,CAACiJ,YAAY,EAAEtG,OAAO,CAACuJ,QAAQ,EAAElE,UAAU,CAAC8C,MAAM,CAACJ,GAAG,IAAI1K,SAAS,CAACiJ,YAAY,CAAC;IAC/M;IACA,IAAIkD,SAAS,GAAIxJ,OAAO,CAACgH,SAAS,KAAKlJ,oBAAoB,CAACmJ,GAAG,GACzD5J,SAAS,CAACoM,kBAAkB,GAC5B,CAAC,OAAOnJ,QAAQ,CAACyI,UAAU,KAAK,QAAQ,GACpCW,QAAQ,CAACpJ,QAAQ,CAACyI,UAAU,EAAE,EAAE,CAAC,GACjCzI,QAAQ,CAACyI,UAAU,KAAK,CAAC;IACnC,IAAIY,sBAAsB,GAAGzJ,YAAY,GAAGsJ,SAAS;IACrD,IAAI5B,cAAc,GAAG,IAAI,CAAChB,cAAc,CAACtG,QAAQ,EAAEN,OAAO,CAAC;IAC3D,IAAI4J,iBAAiB,GAAGnM,iBAAiB,CAACoM,uBAAuB,CAACvE,qBAAqB,EAAEtF,OAAO,CAACsC,SAAS,EAAE0F,mBAAmB,EAAEhI,OAAO,CAACuJ,QAAQ,EAAElE,UAAU,GACvJA,UAAU,CAAC8C,MAAM,CAACJ,GAAG,IAAI1K,SAAS,CAACiJ,YAAY,GAC/CF,QAAQ,EAAEwB,cAAc,CAACkC,WAAW,EAAE,EAAEH,sBAAsB,EAAE,CAAC,EAAE,IAAI,CAAC5K,aAAa,CAAC;IAC5F,IAAIgL,iBAAiB,GAAG,IAAIrM,WAAW,CAAC6H,aAAa,EAAE8D,aAAa,EAAEO,iBAAiB,CAAC;IACxF,IAAI,CAAChK,oBAAoB,CAACoK,eAAe,CAACD,iBAAiB,CAAC;EAChE,CAAC;EACDpL,uBAAuB,CAACmB,SAAS,CAACmI,8BAA8B,GAAG,UAAU3H,QAAQ,EAAE;IACnF,IAAIqH,IAAI,GAAG,IAAI,CAACsC,mBAAmB,CAAC3J,QAAQ,CAAC;IAC7C,IAAI,CAACqH,IAAI,EAAE;MACP,OAAO,IAAI;IACf;IACA,IAAI,CAACvI,iBAAiB,CAAC8K,eAAe,CAAC;MACnCC,WAAW,EAAE,IAAI,CAACxK,oBAAoB,CAACyK,cAAc,EAAE;MACvDC,gBAAgB,EAAE,IAAI,CAAC1K,oBAAoB,CAAC2K,mBAAmB,EAAE;MACjEC,iBAAiB,EAAE5C,IAAI,CAAC6C,cAAc;MACtCC,sBAAsB,EAAE9C,IAAI,CAAC+C,qBAAqB;MAClDC,oBAAoB,EAAEhD,IAAI,CAACiD,mBAAmB;MAC9CC,cAAc,EAAElD,IAAI,CAACmD,WAAW;MAChCC,kBAAkB,EAAEpD,IAAI,CAACqD,eAAe;MACxCC,gBAAgB,EAAEtD,IAAI,CAACuD,cAAc;MACrCC,aAAa,EAAExD,IAAI,CAACyD,UAAU;MAC9BC,cAAc,EAAE1D,IAAI,CAAC2D,WAAW;MAChCC,mBAAmB,EAAE5D,IAAI,CAAC6D,kBAAkB;MAC5CC,iBAAiB,EAAE9D,IAAI,CAAC+D,cAAc;MACtCC,gBAAgB,EAAEhE,IAAI,CAACiE,aAAa;MACpCC,cAAc,EAAElE,IAAI,CAACmE,WAAW;MAChCC,kBAAkB,EAAEpE,IAAI,CAACqE;IAC7B,CAAC,EAAE,IAAI,CAACxM,aAAa,CAAC;IACtB,OAAOmI,IAAI;EACf,CAAC;EACD;AACJ;AACA;AACA;EACIhJ,uBAAuB,CAACmB,SAAS,CAAC6B,sBAAsB,GAAG,UAAUrB,QAAQ,EAAE;IAC3E,IAAIA,QAAQ,CAAC2L,cAAc,CAAC,cAAc,CAAC,IACvC3L,QAAQ,CAAC2L,cAAc,CAAC,UAAU,CAAC,IACnC3L,QAAQ,CAAC2L,cAAc,CAAC,aAAa,CAAC,IACtC3L,QAAQ,CAAC2L,cAAc,CAAC,SAAS,CAAC,IAClC3L,QAAQ,CAAC2L,cAAc,CAAC,OAAO,CAAC,IAChC3L,QAAQ,CAAC2L,cAAc,CAAC,YAAY,CAAC,EAAE;MACvC,OAAO3L,QAAQ;IACnB,CAAC,MACI;MACD,MAAM9B,eAAe,CAAC0N,qBAAqB,CAAC,uCAAuC,CAAC;IACxF;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIvN,uBAAuB,CAACmB,SAAS,CAACmK,mBAAmB,GAAG,UAAU3J,QAAQ,EAAE;IACxE,IAAIA,QAAQ,CAAC4H,UAAU,CAACiE,IAAI,EAAE;MAC1B,IAAI;QACA,OAAOzI,IAAI,CAAC0I,KAAK,CAAC9L,QAAQ,CAAC4H,UAAU,CAACiE,IAAI,CAAC;MAC/C,CAAC,CACD,OAAO/C,CAAC,EAAE;QACN,IAAI,CAACpK,MAAM,CAACgD,KAAK,CAAC,gFAAgF,CAAC;MACvG;IACJ;IACA,OAAO,IAAI;EACf,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIrD,uBAAuB,CAACmB,SAAS,CAAC6I,mBAAmB,GAAG,UAAUhB,IAAI,EAAE;IACpE,IAAI,OAAOA,IAAI,CAAC0E,SAAS,KAAK,WAAW,EAAE;MACvC,IAAI,CAACrN,MAAM,CAAC6F,OAAO,CAAC,gIAAgI,CAAC;MACrJ,OAAO,KAAK;IAChB;IACA,OAAO,CAAC,CAAC8C,IAAI,CAAC0E,SAAS;EAC3B,CAAC;EACD;AACJ;AACA;AACA;EACI1N,uBAAuB,CAACmB,SAAS,CAACgB,uBAAuB,GAAG,UAAUd,OAAO,EAAE;IAC3E,OAAOjD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIuF,SAAS,EAAE0D,kBAAkB,EAAEzD,MAAM,EAAE+J,mBAAmB,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,EAAE1F,aAAa,EAAED,iBAAiB,EAAE4F,UAAU;MACnJ,IAAIjN,KAAK,GAAG,IAAI;MAChB,OAAOzC,WAAW,CAAC,IAAI,EAAE,UAAUwD,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,CAACzB,MAAM,CAAC0B,KAAK,CAAC,0DAA0D,CAAC;YAC7E4B,SAAS,GAAGtC,OAAO,CAACsC,SAAS,IAAI,IAAI,CAACzD,MAAM,CAACmF,IAAI,CAAC1B,SAAS;YAC3D,IAAI,CAACtC,OAAO,CAAC2C,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC7C,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACgK,wBAAwB,CAACrK,SAAS,EAAEtC,OAAO,CAAC2C,OAAO,CAAC,CAAC;UACnF,KAAK,CAAC;YACFnC,EAAE,CAACO,IAAI,EAAE;YACTP,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFuF,kBAAkB,GAAG,IAAIhI,SAAS,CAACsE,SAAS,CAAC;YAC7C0D,kBAAkB,CAAC4G,aAAa,EAAE;YAClCrK,MAAM,GAAGvC,OAAO,CAACuC,MAAM,EAAE+J,mBAAmB,GAAGrP,MAAM,CAAC+C,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;YAC1EuM,QAAQ,GAAG,IAAIpP,QAAQ,CAACoF,MAAM,IAAI,EAAE,CAAC;YACrCgK,QAAQ,CAACM,YAAY,CAAC5O,mBAAmB,CAAC;YAC1CuO,SAAS,GAAG,SAAAA,CAAA,EAAY;cACpB;cACA,QAAQ/M,KAAK,CAACN,KAAK;gBACf,KAAKZ,KAAK,CAACuO,SAAS;gBACpB,KAAKvO,KAAK,CAACwO,6BAA6B;kBACpCtN,KAAK,CAACT,MAAM,CAAC0B,KAAK,CAAC,6DAA6D,CAAC;kBACjF,OAAOxC,WAAW,CAAC8O,IAAI;cAAC;cAEhC;cACA,IAAI,CAAChN,OAAO,CAACyE,MAAM,EAAE;gBACjBhF,KAAK,CAACT,MAAM,CAAC0B,KAAK,CAAC,kDAAkD,CAAC;gBACtE,OAAOiG,SAAS;cACpB;cACA;cACA,QAAQ3G,OAAO,CAACyE,MAAM;gBAClB,KAAKvG,WAAW,CAAC8O,IAAI;gBACrB,KAAK9O,WAAW,CAAC+O,OAAO;gBACxB,KAAK/O,WAAW,CAACgP,KAAK;kBAClBzN,KAAK,CAACT,MAAM,CAAC0B,KAAK,CAAC,gEAAgE,CAAC;kBACpF,OAAOV,OAAO,CAACyE,MAAM;gBACzB;kBACIhF,KAAK,CAACT,MAAM,CAAC0B,KAAK,CAAC,oCAAoC,GAAGV,OAAO,CAACyE,MAAM,GAAG,qCAAqC,CAAC;kBACjH,MAAMhG,gBAAgB,CAAC0O,4CAA4C,EAAE;cAAC;YAElF,CAAC;YACDV,gBAAgB,GAAGvP,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEoP,mBAAmB,CAAC,EAAE;cAAEhN,SAAS,EAAE,IAAI,CAACA,SAAS;cAAEiK,QAAQ,EAAE,IAAI,CAAC1K,MAAM,CAACmF,IAAI,CAACuF,QAAQ;cAAEjH,SAAS,EAAE0D,kBAAkB,CAACoH,SAAS;cAAE3K,KAAK,EAAE8J,QAAQ,CAACzC,WAAW,EAAE;cAAExG,WAAW,EAAE,IAAI,CAACe,cAAc,CAACrE,OAAO,CAACsD,WAAW,CAAC;cAAEmB,MAAM,EAAE+H,SAAS,EAAE;cAAEhN,aAAa,EAAE,IAAI,CAACA,aAAa;cAAEwH,SAAS,EAAEhH,OAAO,CAACqN,oBAAoB;cAAEC,oBAAoB,EAAEC,QAAQ,CAACC,KAAK;cAAEC,eAAe,EAAEvQ,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE8C,OAAO,CAAC0N,oBAAoB,CAAC,EAAE1N,OAAO,CAAC2N,oBAAoB,CAAC,EAAE;gBAAEC,SAAS,EAAEtP,eAAe,CAACuP;cAAe,CAAC,CAAC;cAAEC,mBAAmB,EAAE,KAAK,CAAC;YAC/jB,CAAC,CAAC;;YACH,IAAI,EAAE9N,OAAO,CAACqN,oBAAoB,KAAKvP,oBAAoB,CAACmJ,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YACzFF,aAAa,GAAG;cACZK,kBAAkB,EAAEpH,OAAO,CAACoH,kBAAkB;cAC9CD,qBAAqB,EAAEnH,OAAO,CAACmH,qBAAqB;cACpDE,SAAS,EAAErH,OAAO,CAACqH,SAAS;cAC5BC,QAAQ,EAAEtH,OAAO,CAACsH;YACtB,CAAC;YACDR,iBAAiB,GAAG,IAAI/I,iBAAiB,CAAC,IAAI,CAACgB,aAAa,CAAC;YAC7D,OAAO,CAAC,CAAC,CAAC,WAAW+H,iBAAiB,CAACiH,WAAW,CAAChH,aAAa,CAAC,CAAC;UACtE,KAAK,CAAC;YACF2F,UAAU,GAAGlM,EAAE,CAACO,IAAI,EAAE;YACtB;YACA0L,gBAAgB,CAACuB,MAAM,GAAGtB,UAAU,CAACuB,YAAY;YACjDxB,gBAAgB,CAAClF,KAAK,GAAGmF,UAAU,CAACwB,GAAG;YACvC1N,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,YAAYgM,gBAAgB,CAAC;QAAC;MAExD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,OAAO9N,uBAAuB;AAClC,CAAC,CAACR,qBAAqB,CAAE;AAEzB,SAASQ,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}