{"ast":null,"code":"/*! @azure/msal-common v13.1.0 2023-06-07 */\n'use strict';\n\nimport { __assign, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { Logger, LogLevel } from '../logger/Logger.js';\nimport { Constants } from '../utils/Constants.js';\nimport { version } from '../packageMetadata.js';\nimport { AzureCloudInstance } from '../authority/AuthorityOptions.js';\nimport { DefaultStorageClass } from '../cache/CacheManager.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n// Token renewal offset default in seconds\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\nvar DEFAULT_SYSTEM_OPTIONS = {\n  tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n  preventCorsPreflight: false\n};\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\n  loggerCallback: function () {\n    // allow users to not set loggerCallback\n  },\n  piiLoggingEnabled: false,\n  logLevel: LogLevel.Info,\n  correlationId: Constants.EMPTY_STRING\n};\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\n  sendGetRequestAsync: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  sendPostRequestAsync: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  }\n};\nvar DEFAULT_LIBRARY_INFO = {\n  sku: Constants.SKU,\n  version: version,\n  cpu: Constants.EMPTY_STRING,\n  os: Constants.EMPTY_STRING\n};\nvar DEFAULT_CLIENT_CREDENTIALS = {\n  clientSecret: Constants.EMPTY_STRING,\n  clientAssertion: undefined\n};\nvar DEFAULT_AZURE_CLOUD_OPTIONS = {\n  azureCloudInstance: AzureCloudInstance.None,\n  tenant: \"\" + Constants.DEFAULT_COMMON_TENANT\n};\nvar DEFAULT_TELEMETRY_OPTIONS = {\n  application: {\n    appName: \"\",\n    appVersion: \"\"\n  }\n};\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\nfunction buildClientConfiguration(_a) {\n  var userAuthOptions = _a.authOptions,\n    userSystemOptions = _a.systemOptions,\n    userLoggerOption = _a.loggerOptions,\n    storageImplementation = _a.storageInterface,\n    networkImplementation = _a.networkInterface,\n    cryptoImplementation = _a.cryptoInterface,\n    clientCredentials = _a.clientCredentials,\n    libraryInfo = _a.libraryInfo,\n    telemetry = _a.telemetry,\n    serverTelemetryManager = _a.serverTelemetryManager,\n    persistencePlugin = _a.persistencePlugin,\n    serializableCache = _a.serializableCache;\n  var loggerOptions = __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption);\n  return {\n    authOptions: buildAuthOptions(userAuthOptions),\n    systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\n    loggerOptions: loggerOptions,\n    storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions)),\n    networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n    cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n    clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n    libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo),\n    telemetry: __assign(__assign({}, DEFAULT_TELEMETRY_OPTIONS), telemetry),\n    serverTelemetryManager: serverTelemetryManager || null,\n    persistencePlugin: persistencePlugin || null,\n    serializableCache: serializableCache || null\n  };\n}\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\nfunction buildAuthOptions(authOptions) {\n  return __assign({\n    clientCapabilities: [],\n    azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n    skipAuthorityMetadataCache: false\n  }, authOptions);\n}\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration };","map":{"version":3,"names":["__assign","__awaiter","__generator","DEFAULT_CRYPTO_IMPLEMENTATION","AuthError","Logger","LogLevel","Constants","version","AzureCloudInstance","DefaultStorageClass","DEFAULT_TOKEN_RENEWAL_OFFSET_SEC","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","loggerCallback","piiLoggingEnabled","logLevel","Info","correlationId","EMPTY_STRING","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","notImplErr","_a","createUnexpectedError","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","SKU","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","undefined","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","None","tenant","DEFAULT_COMMON_TENANT","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","buildClientConfiguration","userAuthOptions","authOptions","userSystemOptions","systemOptions","userLoggerOption","loggerOptions","storageImplementation","storageInterface","networkImplementation","networkInterface","cryptoImplementation","cryptoInterface","clientCredentials","libraryInfo","telemetry","serverTelemetryManager","persistencePlugin","serializableCache","buildAuthOptions","clientId","clientCapabilities","azureCloudOptions","skipAuthorityMetadataCache"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/node_modules/@azure/msal-common/dist/config/ClientConfiguration.js"],"sourcesContent":["/*! @azure/msal-common v13.1.0 2023-06-07 */\n'use strict';\nimport { __assign, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { Logger, LogLevel } from '../logger/Logger.js';\nimport { Constants } from '../utils/Constants.js';\nimport { version } from '../packageMetadata.js';\nimport { AzureCloudInstance } from '../authority/AuthorityOptions.js';\nimport { DefaultStorageClass } from '../cache/CacheManager.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n    correlationId: Constants.EMPTY_STRING\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: Constants.EMPTY_STRING,\r\n    os: Constants.EMPTY_STRING\r\n};\r\nvar DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: Constants.EMPTY_STRING,\r\n    clientAssertion: undefined\r\n};\r\nvar DEFAULT_AZURE_CLOUD_OPTIONS = {\r\n    azureCloudInstance: AzureCloudInstance.None,\r\n    tenant: \"\" + Constants.DEFAULT_COMMON_TENANT\r\n};\r\nvar DEFAULT_TELEMETRY_OPTIONS = {\r\n    application: {\r\n        appName: \"\",\r\n        appVersion: \"\"\r\n    }\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, clientCredentials = _a.clientCredentials, libraryInfo = _a.libraryInfo, telemetry = _a.telemetry, serverTelemetryManager = _a.serverTelemetryManager, persistencePlugin = _a.persistencePlugin, serializableCache = _a.serializableCache;\r\n    var loggerOptions = __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption);\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: loggerOptions,\r\n        storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions)),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo),\r\n        telemetry: __assign(__assign({}, DEFAULT_TELEMETRY_OPTIONS), telemetry),\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null,\r\n    };\r\n}\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions) {\r\n    return __assign({ clientCapabilities: [], azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS, skipAuthorityMetadataCache: false }, authOptions);\r\n}\n\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}