{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { CryptoOps } from './CryptoOps.js';\nimport { Logger, PopTokenGenerator } from '@azure/msal-common';\nimport { name, version } from '../packageMetadata.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar SignedHttpRequest = /** @class */function () {\n  function SignedHttpRequest(shrParameters, shrOptions) {\n    var loggerOptions = shrOptions && shrOptions.loggerOptions || {};\n    this.logger = new Logger(loggerOptions, name, version);\n    this.cryptoOps = new CryptoOps(this.logger);\n    this.popTokenGenerator = new PopTokenGenerator(this.cryptoOps);\n    this.shrParameters = shrParameters;\n  }\n  /**\r\n   * Generates and caches a keypair for the given request options.\r\n   * @returns Public key digest, which should be sent to the token issuer.\r\n   */\n  SignedHttpRequest.prototype.generatePublicKeyThumbprint = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var kid;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.popTokenGenerator.generateKid(this.shrParameters)];\n          case 1:\n            kid = _a.sent().kid;\n            return [2 /*return*/, kid];\n        }\n      });\n    });\n  };\n  /**\r\n   * Generates a signed http request for the given payload with the given key.\r\n   * @param payload Payload to sign (e.g. access token)\r\n   * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\r\n   * @param claims Additional claims to include/override in the signed JWT\r\n   * @returns Pop token signed with the corresponding private key\r\n   */\n  SignedHttpRequest.prototype.signRequest = function (payload, publicKeyThumbprint, claims) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.popTokenGenerator.signPayload(payload, publicKeyThumbprint, this.shrParameters, claims)];\n      });\n    });\n  };\n  /**\r\n   * Removes cached keys from browser for given public key thumbprint\r\n   * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\r\n   * @returns If keys are properly deleted\r\n   */\n  SignedHttpRequest.prototype.removeKeys = function (publicKeyThumbprint) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.cryptoOps.removeTokenBindingKey(publicKeyThumbprint)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  return SignedHttpRequest;\n}();\nexport { SignedHttpRequest };","map":{"version":3,"names":["__awaiter","__generator","CryptoOps","Logger","PopTokenGenerator","name","version","SignedHttpRequest","shrParameters","shrOptions","loggerOptions","logger","cryptoOps","popTokenGenerator","prototype","generatePublicKeyThumbprint","kid","_a","label","generateKid","sent","signRequest","payload","publicKeyThumbprint","claims","signPayload","removeKeys","removeTokenBindingKey"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/crypto/SignedHttpRequest.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { CryptoOps } from './CryptoOps.js';\nimport { Logger, PopTokenGenerator } from '@azure/msal-common';\nimport { name, version } from '../packageMetadata.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SignedHttpRequest = /** @class */ (function () {\r\n    function SignedHttpRequest(shrParameters, shrOptions) {\r\n        var loggerOptions = (shrOptions && shrOptions.loggerOptions) || {};\r\n        this.logger = new Logger(loggerOptions, name, version);\r\n        this.cryptoOps = new CryptoOps(this.logger);\r\n        this.popTokenGenerator = new PopTokenGenerator(this.cryptoOps);\r\n        this.shrParameters = shrParameters;\r\n    }\r\n    /**\r\n     * Generates and caches a keypair for the given request options.\r\n     * @returns Public key digest, which should be sent to the token issuer.\r\n     */\r\n    SignedHttpRequest.prototype.generatePublicKeyThumbprint = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var kid;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.popTokenGenerator.generateKid(this.shrParameters)];\r\n                    case 1:\r\n                        kid = (_a.sent()).kid;\r\n                        return [2 /*return*/, kid];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a signed http request for the given payload with the given key.\r\n     * @param payload Payload to sign (e.g. access token)\r\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\r\n     * @param claims Additional claims to include/override in the signed JWT\r\n     * @returns Pop token signed with the corresponding private key\r\n     */\r\n    SignedHttpRequest.prototype.signRequest = function (payload, publicKeyThumbprint, claims) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.popTokenGenerator.signPayload(payload, publicKeyThumbprint, this.shrParameters, claims)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Removes cached keys from browser for given public key thumbprint\r\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\r\n     * @returns If keys are properly deleted\r\n     */\r\n    SignedHttpRequest.prototype.removeKeys = function (publicKeyThumbprint) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.cryptoOps.removeTokenBindingKey(publicKeyThumbprint)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SignedHttpRequest;\r\n}());\n\nexport { SignedHttpRequest };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,EAAEC,WAAW,QAAQ,uBAAuB;AAC9D,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,MAAM,EAAEC,iBAAiB,QAAQ,oBAAoB;AAC9D,SAASC,IAAI,EAAEC,OAAO,QAAQ,uBAAuB;;AAErD;AACA;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,aAAe,YAAY;EAC/C,SAASA,iBAAiBA,CAACC,aAAa,EAAEC,UAAU,EAAE;IAClD,IAAIC,aAAa,GAAID,UAAU,IAAIA,UAAU,CAACC,aAAa,IAAK,CAAC,CAAC;IAClE,IAAI,CAACC,MAAM,GAAG,IAAIR,MAAM,CAACO,aAAa,EAAEL,IAAI,EAAEC,OAAO,CAAC;IACtD,IAAI,CAACM,SAAS,GAAG,IAAIV,SAAS,CAAC,IAAI,CAACS,MAAM,CAAC;IAC3C,IAAI,CAACE,iBAAiB,GAAG,IAAIT,iBAAiB,CAAC,IAAI,CAACQ,SAAS,CAAC;IAC9D,IAAI,CAACJ,aAAa,GAAGA,aAAa;EACtC;EACA;AACJ;AACA;AACA;EACID,iBAAiB,CAACO,SAAS,CAACC,2BAA2B,GAAG,YAAY;IAClE,OAAOf,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIgB,GAAG;MACP,OAAOf,WAAW,CAAC,IAAI,EAAE,UAAUgB,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACL,iBAAiB,CAACM,WAAW,CAAC,IAAI,CAACX,aAAa,CAAC,CAAC;UACpF,KAAK,CAAC;YACFQ,GAAG,GAAIC,EAAE,CAACG,IAAI,EAAE,CAAEJ,GAAG;YACrB,OAAO,CAAC,CAAC,CAAC,YAAYA,GAAG,CAAC;QAAC;MAEvC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIT,iBAAiB,CAACO,SAAS,CAACO,WAAW,GAAG,UAAUC,OAAO,EAAEC,mBAAmB,EAAEC,MAAM,EAAE;IACtF,OAAOxB,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOC,WAAW,CAAC,IAAI,EAAE,UAAUgB,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACJ,iBAAiB,CAACY,WAAW,CAACH,OAAO,EAAEC,mBAAmB,EAAE,IAAI,CAACf,aAAa,EAAEgB,MAAM,CAAC,CAAC;MACvH,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIjB,iBAAiB,CAACO,SAAS,CAACY,UAAU,GAAG,UAAUH,mBAAmB,EAAE;IACpE,OAAOvB,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,OAAOC,WAAW,CAAC,IAAI,EAAE,UAAUgB,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACN,SAAS,CAACe,qBAAqB,CAACJ,mBAAmB,CAAC,CAAC;UACvF,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,YAAYN,EAAE,CAACG,IAAI,EAAE,CAAC;QAAC;MAEjD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,OAAOb,iBAAiB;AAC5B,CAAC,EAAG;AAEJ,SAASA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}