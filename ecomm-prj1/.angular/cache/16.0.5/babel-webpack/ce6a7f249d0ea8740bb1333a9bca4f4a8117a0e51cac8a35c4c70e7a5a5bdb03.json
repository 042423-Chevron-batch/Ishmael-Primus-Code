{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { Constants, UrlString } from '@azure/msal-common';\nimport { FetchClient } from '../network/FetchClient.js';\nimport { XhrClient } from '../network/XhrClient.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { BrowserConstants, InteractionType } from './BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Utility class for browser specific functions\r\n */\nvar BrowserUtils = /** @class */function () {\n  function BrowserUtils() {}\n  // #region Window Navigation and URL management\n  /**\r\n   * Clears hash from window url.\r\n   */\n  BrowserUtils.clearHash = function (contentWindow) {\n    // Office.js sets history.replaceState to null\n    contentWindow.location.hash = Constants.EMPTY_STRING;\n    if (typeof contentWindow.history.replaceState === \"function\") {\n      // Full removes \"#\" from url\n      contentWindow.history.replaceState(null, Constants.EMPTY_STRING, \"\" + contentWindow.location.origin + contentWindow.location.pathname + contentWindow.location.search);\n    }\n  };\n  /**\r\n   * Replaces current hash with hash from provided url\r\n   */\n  BrowserUtils.replaceHash = function (url) {\n    var urlParts = url.split(\"#\");\n    urlParts.shift(); // Remove part before the hash\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : Constants.EMPTY_STRING;\n  };\n  /**\r\n   * Returns boolean of whether the current window is in an iframe or not.\r\n   */\n  BrowserUtils.isInIframe = function () {\n    return window.parent !== window;\n  };\n  /**\r\n   * Returns boolean of whether or not the current window is a popup opened by msal\r\n   */\n  BrowserUtils.isInPopup = function () {\n    return typeof window !== \"undefined\" && !!window.opener && window.opener !== window && typeof window.name === \"string\" && window.name.indexOf(BrowserConstants.POPUP_NAME_PREFIX + \".\") === 0;\n  };\n  // #endregion\n  /**\r\n   * Returns current window URL as redirect uri\r\n   */\n  BrowserUtils.getCurrentUri = function () {\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\n  };\n  /**\r\n   * Gets the homepage url for the current window location.\r\n   */\n  BrowserUtils.getHomepage = function () {\n    var currentUrl = new UrlString(window.location.href);\n    var urlComponents = currentUrl.getUrlComponents();\n    return urlComponents.Protocol + \"//\" + urlComponents.HostNameAndPort + \"/\";\n  };\n  /**\r\n   * Returns best compatible network client object.\r\n   */\n  BrowserUtils.getBrowserNetworkClient = function () {\n    if (window.fetch && window.Headers) {\n      return new FetchClient();\n    } else {\n      return new XhrClient();\n    }\n  };\n  /**\r\n   * Throws error if we have completed an auth and are\r\n   * attempting another auth request inside an iframe.\r\n   */\n  BrowserUtils.blockReloadInHiddenIframes = function () {\n    var isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\n    // return an error if called from the hidden iframe created by the msal js silent calls\n    if (isResponseHash && BrowserUtils.isInIframe()) {\n      throw BrowserAuthError.createBlockReloadInHiddenIframeError();\n    }\n  };\n  /**\r\n   * Block redirect operations in iframes unless explicitly allowed\r\n   * @param interactionType Interaction type for the request\r\n   * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n   */\n  BrowserUtils.blockRedirectInIframe = function (interactionType, allowRedirectInIframe) {\n    var isIframedApp = BrowserUtils.isInIframe();\n    if (interactionType === InteractionType.Redirect && isIframedApp && !allowRedirectInIframe) {\n      // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n      throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\n    }\n  };\n  /**\r\n   * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n   */\n  BrowserUtils.blockAcquireTokenInPopups = function () {\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n    if (BrowserUtils.isInPopup()) {\n      throw BrowserAuthError.createBlockAcquireTokenInPopupsError();\n    }\n  };\n  /**\r\n   * Throws error if token requests are made in non-browser environment\r\n   * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n   */\n  BrowserUtils.blockNonBrowserEnvironment = function (isBrowserEnvironment) {\n    if (!isBrowserEnvironment) {\n      throw BrowserAuthError.createNonBrowserEnvironmentError();\n    }\n  };\n  /**\r\n   * Throws error if native brokering is enabled but initialize hasn't been called\r\n   * @param allowNativeBroker\r\n   * @param initialized\r\n   */\n  BrowserUtils.blockNativeBrokerCalledBeforeInitialized = function (allowNativeBroker, initialized) {\n    if (allowNativeBroker && !initialized) {\n      throw BrowserAuthError.createNativeBrokerCalledBeforeInitialize();\n    }\n  };\n  /**\r\n   * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n   */\n  BrowserUtils.detectIEOrEdge = function () {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    var msie11 = ua.indexOf(\"Trident/\");\n    var msedge = ua.indexOf(\"Edge/\");\n    var isIE = msie > 0 || msie11 > 0;\n    var isEdge = msedge > 0;\n    return isIE || isEdge;\n  };\n  return BrowserUtils;\n}();\nexport { BrowserUtils };","map":{"version":3,"names":["Constants","UrlString","FetchClient","XhrClient","BrowserAuthError","BrowserConstants","InteractionType","BrowserUtils","clearHash","contentWindow","location","hash","EMPTY_STRING","history","replaceState","origin","pathname","search","replaceHash","url","urlParts","split","shift","window","length","join","isInIframe","parent","isInPopup","opener","name","indexOf","POPUP_NAME_PREFIX","getCurrentUri","href","getHomepage","currentUrl","urlComponents","getUrlComponents","Protocol","HostNameAndPort","getBrowserNetworkClient","fetch","Headers","blockReloadInHiddenIframes","isResponseHash","hashContainsKnownProperties","createBlockReloadInHiddenIframeError","blockRedirectInIframe","interactionType","allowRedirectInIframe","isIframedApp","Redirect","createRedirectInIframeError","blockAcquireTokenInPopups","createBlockAcquireTokenInPopupsError","blockNonBrowserEnvironment","isBrowserEnvironment","createNonBrowserEnvironmentError","blockNativeBrokerCalledBeforeInitialized","allowNativeBroker","initialized","createNativeBrokerCalledBeforeInitialize","detectIEOrEdge","ua","navigator","userAgent","msie","msie11","msedge","isIE","isEdge"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/utils/BrowserUtils.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { Constants, UrlString } from '@azure/msal-common';\nimport { FetchClient } from '../network/FetchClient.js';\nimport { XhrClient } from '../network/XhrClient.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { BrowserConstants, InteractionType } from './BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nvar BrowserUtils = /** @class */ (function () {\r\n    function BrowserUtils() {\r\n    }\r\n    // #region Window Navigation and URL management\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    BrowserUtils.clearHash = function (contentWindow) {\r\n        // Office.js sets history.replaceState to null\r\n        contentWindow.location.hash = Constants.EMPTY_STRING;\r\n        if (typeof contentWindow.history.replaceState === \"function\") {\r\n            // Full removes \"#\" from url\r\n            contentWindow.history.replaceState(null, Constants.EMPTY_STRING, \"\" + contentWindow.location.origin + contentWindow.location.pathname + contentWindow.location.search);\r\n        }\r\n    };\r\n    /**\r\n     * Replaces current hash with hash from provided url\r\n     */\r\n    BrowserUtils.replaceHash = function (url) {\r\n        var urlParts = url.split(\"#\");\r\n        urlParts.shift(); // Remove part before the hash\r\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : Constants.EMPTY_STRING;\r\n    };\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    BrowserUtils.isInIframe = function () {\r\n        return window.parent !== window;\r\n    };\r\n    /**\r\n     * Returns boolean of whether or not the current window is a popup opened by msal\r\n     */\r\n    BrowserUtils.isInPopup = function () {\r\n        return typeof window !== \"undefined\" && !!window.opener &&\r\n            window.opener !== window &&\r\n            typeof window.name === \"string\" &&\r\n            window.name.indexOf(BrowserConstants.POPUP_NAME_PREFIX + \".\") === 0;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    BrowserUtils.getCurrentUri = function () {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Gets the homepage url for the current window location.\r\n     */\r\n    BrowserUtils.getHomepage = function () {\r\n        var currentUrl = new UrlString(window.location.href);\r\n        var urlComponents = currentUrl.getUrlComponents();\r\n        return urlComponents.Protocol + \"//\" + urlComponents.HostNameAndPort + \"/\";\r\n    };\r\n    /**\r\n     * Returns best compatible network client object.\r\n     */\r\n    BrowserUtils.getBrowserNetworkClient = function () {\r\n        if (window.fetch && window.Headers) {\r\n            return new FetchClient();\r\n        }\r\n        else {\r\n            return new XhrClient();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if we have completed an auth and are\r\n     * attempting another auth request inside an iframe.\r\n     */\r\n    BrowserUtils.blockReloadInHiddenIframes = function () {\r\n        var isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (isResponseHash && BrowserUtils.isInIframe()) {\r\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\r\n        }\r\n    };\r\n    /**\r\n     * Block redirect operations in iframes unless explicitly allowed\r\n     * @param interactionType Interaction type for the request\r\n     * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n     */\r\n    BrowserUtils.blockRedirectInIframe = function (interactionType, allowRedirectInIframe) {\r\n        var isIframedApp = BrowserUtils.isInIframe();\r\n        if (interactionType === InteractionType.Redirect && isIframedApp && !allowRedirectInIframe) {\r\n            // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n            throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n        }\r\n    };\r\n    /**\r\n     * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n     */\r\n    BrowserUtils.blockAcquireTokenInPopups = function () {\r\n        // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\r\n        if (BrowserUtils.isInPopup()) {\r\n            throw BrowserAuthError.createBlockAcquireTokenInPopupsError();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if token requests are made in non-browser environment\r\n     * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n     */\r\n    BrowserUtils.blockNonBrowserEnvironment = function (isBrowserEnvironment) {\r\n        if (!isBrowserEnvironment) {\r\n            throw BrowserAuthError.createNonBrowserEnvironmentError();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if native brokering is enabled but initialize hasn't been called\r\n     * @param allowNativeBroker\r\n     * @param initialized\r\n     */\r\n    BrowserUtils.blockNativeBrokerCalledBeforeInitialized = function (allowNativeBroker, initialized) {\r\n        if (allowNativeBroker && !initialized) {\r\n            throw BrowserAuthError.createNativeBrokerCalledBeforeInitialize();\r\n        }\r\n    };\r\n    /**\r\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n     */\r\n    BrowserUtils.detectIEOrEdge = function () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf(\"MSIE \");\r\n        var msie11 = ua.indexOf(\"Trident/\");\r\n        var msedge = ua.indexOf(\"Edge/\");\r\n        var isIE = msie > 0 || msie11 > 0;\r\n        var isEdge = msedge > 0;\r\n        return isIE || isEdge;\r\n    };\r\n    return BrowserUtils;\r\n}());\n\nexport { BrowserUtils };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}