{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { InteractionRequiredAuthError, AuthError } from '@azure/msal-common';\nimport { BrowserAuthError } from './BrowserAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar NativeStatusCode;\n(function (NativeStatusCode) {\n  NativeStatusCode[\"USER_INTERACTION_REQUIRED\"] = \"USER_INTERACTION_REQUIRED\";\n  NativeStatusCode[\"USER_CANCEL\"] = \"USER_CANCEL\";\n  NativeStatusCode[\"NO_NETWORK\"] = \"NO_NETWORK\";\n  NativeStatusCode[\"TRANSIENT_ERROR\"] = \"TRANSIENT_ERROR\";\n  NativeStatusCode[\"PERSISTENT_ERROR\"] = \"PERSISTENT_ERROR\";\n  NativeStatusCode[\"DISABLED\"] = \"DISABLED\";\n  NativeStatusCode[\"ACCOUNT_UNAVAILABLE\"] = \"ACCOUNT_UNAVAILABLE\";\n})(NativeStatusCode || (NativeStatusCode = {}));\nvar NativeAuthErrorMessage = {\n  extensionError: {\n    code: \"ContentError\"\n  },\n  userSwitch: {\n    code: \"user_switch\",\n    desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n  },\n  tokensNotFoundInCache: {\n    code: \"tokens_not_found_in_internal_memory_cache\",\n    desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n  }\n};\nvar NativeAuthError = /** @class */function (_super) {\n  __extends(NativeAuthError, _super);\n  function NativeAuthError(errorCode, description, ext) {\n    var _this = _super.call(this, errorCode, description) || this;\n    Object.setPrototypeOf(_this, NativeAuthError.prototype);\n    _this.name = \"NativeAuthError\";\n    _this.ext = ext;\n    return _this;\n  }\n  /**\r\n   * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n   */\n  NativeAuthError.prototype.isFatal = function () {\n    if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n      return true;\n    }\n    switch (this.errorCode) {\n      case NativeAuthErrorMessage.extensionError.code:\n        return true;\n      default:\n        return false;\n    }\n  };\n  /**\r\n   * Create the appropriate error object based on the WAM status code.\r\n   * @param code\r\n   * @param description\r\n   * @param ext\r\n   * @returns\r\n   */\n  NativeAuthError.createError = function (code, description, ext) {\n    if (ext && ext.status) {\n      switch (ext.status) {\n        case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n          return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n        case NativeStatusCode.USER_INTERACTION_REQUIRED:\n          return new InteractionRequiredAuthError(code, description);\n        case NativeStatusCode.USER_CANCEL:\n          return BrowserAuthError.createUserCancelledError();\n        case NativeStatusCode.NO_NETWORK:\n          return BrowserAuthError.createNoNetworkConnectivityError();\n      }\n    }\n    return new NativeAuthError(code, description, ext);\n  };\n  /**\r\n   * Creates user switch error when the user chooses a different account in the native broker prompt\r\n   * @returns\r\n   */\n  NativeAuthError.createUserSwitchError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n  };\n  /**\r\n   * Creates a tokens not found error when the internal cache look up fails\r\n   * @returns NativeAuthError: tokensNotFoundInCache\r\n   */\n  NativeAuthError.createTokensNotFoundInCacheError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n  };\n  return NativeAuthError;\n}(AuthError);\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };","map":{"version":3,"names":["__extends","InteractionRequiredAuthError","AuthError","BrowserAuthError","NativeStatusCode","NativeAuthErrorMessage","extensionError","code","userSwitch","desc","tokensNotFoundInCache","NativeAuthError","_super","errorCode","description","ext","_this","call","Object","setPrototypeOf","prototype","name","isFatal","status","PERSISTENT_ERROR","DISABLED","createError","ACCOUNT_UNAVAILABLE","createNativeAccountUnavailableError","USER_INTERACTION_REQUIRED","USER_CANCEL","createUserCancelledError","NO_NETWORK","createNoNetworkConnectivityError","createUserSwitchError","createTokensNotFoundInCacheError"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/error/NativeAuthError.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { InteractionRequiredAuthError, AuthError } from '@azure/msal-common';\nimport { BrowserAuthError } from './BrowserAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar NativeStatusCode;\r\n(function (NativeStatusCode) {\r\n    NativeStatusCode[\"USER_INTERACTION_REQUIRED\"] = \"USER_INTERACTION_REQUIRED\";\r\n    NativeStatusCode[\"USER_CANCEL\"] = \"USER_CANCEL\";\r\n    NativeStatusCode[\"NO_NETWORK\"] = \"NO_NETWORK\";\r\n    NativeStatusCode[\"TRANSIENT_ERROR\"] = \"TRANSIENT_ERROR\";\r\n    NativeStatusCode[\"PERSISTENT_ERROR\"] = \"PERSISTENT_ERROR\";\r\n    NativeStatusCode[\"DISABLED\"] = \"DISABLED\";\r\n    NativeStatusCode[\"ACCOUNT_UNAVAILABLE\"] = \"ACCOUNT_UNAVAILABLE\";\r\n})(NativeStatusCode || (NativeStatusCode = {}));\r\nvar NativeAuthErrorMessage = {\r\n    extensionError: {\r\n        code: \"ContentError\"\r\n    },\r\n    userSwitch: {\r\n        code: \"user_switch\",\r\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\r\n    },\r\n    tokensNotFoundInCache: {\r\n        code: \"tokens_not_found_in_internal_memory_cache\",\r\n        desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\r\n    }\r\n};\r\nvar NativeAuthError = /** @class */ (function (_super) {\r\n    __extends(NativeAuthError, _super);\r\n    function NativeAuthError(errorCode, description, ext) {\r\n        var _this = _super.call(this, errorCode, description) || this;\r\n        Object.setPrototypeOf(_this, NativeAuthError.prototype);\r\n        _this.name = \"NativeAuthError\";\r\n        _this.ext = ext;\r\n        return _this;\r\n    }\r\n    /**\r\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n     */\r\n    NativeAuthError.prototype.isFatal = function () {\r\n        if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\r\n            return true;\r\n        }\r\n        switch (this.errorCode) {\r\n            case NativeAuthErrorMessage.extensionError.code:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n    /**\r\n     * Create the appropriate error object based on the WAM status code.\r\n     * @param code\r\n     * @param description\r\n     * @param ext\r\n     * @returns\r\n     */\r\n    NativeAuthError.createError = function (code, description, ext) {\r\n        if (ext && ext.status) {\r\n            switch (ext.status) {\r\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\r\n                    return InteractionRequiredAuthError.createNativeAccountUnavailableError();\r\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\r\n                    return new InteractionRequiredAuthError(code, description);\r\n                case NativeStatusCode.USER_CANCEL:\r\n                    return BrowserAuthError.createUserCancelledError();\r\n                case NativeStatusCode.NO_NETWORK:\r\n                    return BrowserAuthError.createNoNetworkConnectivityError();\r\n            }\r\n        }\r\n        return new NativeAuthError(code, description, ext);\r\n    };\r\n    /**\r\n     * Creates user switch error when the user chooses a different account in the native broker prompt\r\n     * @returns\r\n     */\r\n    NativeAuthError.createUserSwitchError = function () {\r\n        return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\r\n    };\r\n    /**\r\n     * Creates a tokens not found error when the internal cache look up fails\r\n     * @returns NativeAuthError: tokensNotFoundInCache\r\n     */\r\n    NativeAuthError.createTokensNotFoundInCacheError = function () {\r\n        return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\r\n    };\r\n    return NativeAuthError;\r\n}(AuthError));\n\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}