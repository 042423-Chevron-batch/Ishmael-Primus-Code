{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sprintfJs = require(\"sprintf-js\");\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst optionBufferSize = 20;\nconst TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\nconst ENCRYPT = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\nconst encryptByValue = {};\nfor (const name in ENCRYPT) {\n  const value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\nconst MARS = {\n  OFF: 0x00,\n  ON: 0x01\n};\nconst marsByValue = {};\nfor (const name in MARS) {\n  const value = MARS[name];\n  marsByValue[value] = name;\n}\n\n/*\n  s2.2.6.4\n */\nclass PreloginPayload {\n  constructor(bufferOrOptions = {\n    encrypt: false,\n    version: {\n      major: 0,\n      minor: 0,\n      build: 0,\n      subbuild: 0\n    }\n  }) {\n    this.data = void 0;\n    this.options = void 0;\n    this.version = void 0;\n    this.encryption = void 0;\n    this.encryptionString = void 0;\n    this.instance = void 0;\n    this.threadId = void 0;\n    this.mars = void 0;\n    this.marsString = void 0;\n    this.fedAuthRequired = void 0;\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = {\n        encrypt: false,\n        version: {\n          major: 0,\n          minor: 0,\n          build: 0,\n          subbuild: 0\n        }\n      };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n    this.extractOptions();\n  }\n  createOptions() {\n    const options = [this.createVersionOption(), this.createEncryptionOption(), this.createInstanceOption(), this.createThreadIdOption(), this.createMarsOption(), this.createFedAuthOption()];\n    let length = 0;\n    for (let i = 0, len = options.length; i < len; i++) {\n      const option = options[i];\n      length += 5 + option.data.length;\n    }\n    length++; // terminator\n\n    this.data = Buffer.alloc(length, 0);\n    let optionOffset = 0;\n    let optionDataOffset = 5 * options.length + 1;\n    for (let j = 0, len = options.length; j < len; j++) {\n      const option = options[j];\n      this.data.writeUInt8(option.token, optionOffset + 0);\n      this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n      this.data.writeUInt16BE(option.data.length, optionOffset + 3);\n      optionOffset += 5;\n      option.data.copy(this.data, optionDataOffset);\n      optionDataOffset += option.data.length;\n    }\n    this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n  }\n  createVersionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(this.options.version.major);\n    buffer.writeUInt8(this.options.version.minor);\n    buffer.writeUInt16BE(this.options.version.build);\n    buffer.writeUInt16BE(this.options.version.subbuild);\n    return {\n      token: TOKEN.VERSION,\n      data: buffer.data\n    };\n  }\n  createEncryptionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    if (this.options.encrypt) {\n      buffer.writeUInt8(ENCRYPT.ON);\n    } else {\n      buffer.writeUInt8(ENCRYPT.NOT_SUP);\n    }\n    return {\n      token: TOKEN.ENCRYPTION,\n      data: buffer.data\n    };\n  }\n  createInstanceOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x00);\n    return {\n      token: TOKEN.INSTOPT,\n      data: buffer.data\n    };\n  }\n  createThreadIdOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt32BE(0x00);\n    return {\n      token: TOKEN.THREADID,\n      data: buffer.data\n    };\n  }\n  createMarsOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(MARS.OFF);\n    return {\n      token: TOKEN.MARS,\n      data: buffer.data\n    };\n  }\n  createFedAuthOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x01);\n    return {\n      token: TOKEN.FEDAUTHREQUIRED,\n      data: buffer.data\n    };\n  }\n  extractOptions() {\n    let offset = 0;\n    while (this.data[offset] !== TOKEN.TERMINATOR) {\n      let dataOffset = this.data.readUInt16BE(offset + 1);\n      const dataLength = this.data.readUInt16BE(offset + 3);\n      switch (this.data[offset]) {\n        case TOKEN.VERSION:\n          this.extractVersion(dataOffset);\n          break;\n        case TOKEN.ENCRYPTION:\n          this.extractEncryption(dataOffset);\n          break;\n        case TOKEN.INSTOPT:\n          this.extractInstance(dataOffset);\n          break;\n        case TOKEN.THREADID:\n          if (dataLength > 0) {\n            this.extractThreadId(dataOffset);\n          }\n          break;\n        case TOKEN.MARS:\n          this.extractMars(dataOffset);\n          break;\n        case TOKEN.FEDAUTHREQUIRED:\n          this.extractFedAuth(dataOffset);\n          break;\n      }\n      offset += 5;\n      dataOffset += dataLength;\n    }\n  }\n  extractVersion(offset) {\n    this.version = {\n      major: this.data.readUInt8(offset + 0),\n      minor: this.data.readUInt8(offset + 1),\n      build: this.data.readUInt16BE(offset + 2),\n      subbuild: this.data.readUInt16BE(offset + 4)\n    };\n  }\n  extractEncryption(offset) {\n    this.encryption = this.data.readUInt8(offset);\n    this.encryptionString = encryptByValue[this.encryption];\n  }\n  extractInstance(offset) {\n    this.instance = this.data.readUInt8(offset);\n  }\n  extractThreadId(offset) {\n    this.threadId = this.data.readUInt32BE(offset);\n  }\n  extractMars(offset) {\n    this.mars = this.data.readUInt8(offset);\n    this.marsString = marsByValue[this.mars];\n  }\n  extractFedAuth(offset) {\n    this.fedAuthRequired = this.data.readUInt8(offset);\n  }\n  toString(indent = '') {\n    return indent + 'PreLogin - ' + (0, _sprintfJs.sprintf)('version:%d.%d.%d.%d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)', this.version.major, this.version.minor, this.version.build, this.version.subbuild, this.encryption ? this.encryption : 0, this.encryptionString ? this.encryptionString : '', this.instance ? this.instance : 0, this.threadId ? this.threadId : 0, this.mars ? this.mars : 0, this.marsString ? this.marsString : '');\n  }\n}\nvar _default = PreloginPayload;\nexports.default = _default;\nmodule.exports = PreloginPayload;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_sprintfJs","require","_writableTrackingBuffer","_interopRequireDefault","obj","__esModule","optionBufferSize","TOKEN","VERSION","ENCRYPTION","INSTOPT","THREADID","MARS","FEDAUTHREQUIRED","TERMINATOR","ENCRYPT","OFF","ON","NOT_SUP","REQ","encryptByValue","name","marsByValue","PreloginPayload","constructor","bufferOrOptions","encrypt","version","major","minor","build","subbuild","data","options","encryption","encryptionString","instance","threadId","mars","marsString","fedAuthRequired","Buffer","createOptions","extractOptions","createVersionOption","createEncryptionOption","createInstanceOption","createThreadIdOption","createMarsOption","createFedAuthOption","length","i","len","option","alloc","optionOffset","optionDataOffset","j","writeUInt8","token","writeUInt16BE","copy","buffer","writeUInt32BE","offset","dataOffset","readUInt16BE","dataLength","extractVersion","extractEncryption","extractInstance","extractThreadId","extractMars","extractFedAuth","readUInt8","readUInt32BE","toString","indent","sprintf","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/prelogin-payload.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sprintfJs = require(\"sprintf-js\");\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst optionBufferSize = 20;\nconst TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\nconst ENCRYPT = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\nconst encryptByValue = {};\n\nfor (const name in ENCRYPT) {\n  const value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\n\nconst MARS = {\n  OFF: 0x00,\n  ON: 0x01\n};\nconst marsByValue = {};\n\nfor (const name in MARS) {\n  const value = MARS[name];\n  marsByValue[value] = name;\n}\n\n/*\n  s2.2.6.4\n */\nclass PreloginPayload {\n  constructor(bufferOrOptions = {\n    encrypt: false,\n    version: {\n      major: 0,\n      minor: 0,\n      build: 0,\n      subbuild: 0\n    }\n  }) {\n    this.data = void 0;\n    this.options = void 0;\n    this.version = void 0;\n    this.encryption = void 0;\n    this.encryptionString = void 0;\n    this.instance = void 0;\n    this.threadId = void 0;\n    this.mars = void 0;\n    this.marsString = void 0;\n    this.fedAuthRequired = void 0;\n\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = {\n        encrypt: false,\n        version: {\n          major: 0,\n          minor: 0,\n          build: 0,\n          subbuild: 0\n        }\n      };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n\n    this.extractOptions();\n  }\n\n  createOptions() {\n    const options = [this.createVersionOption(), this.createEncryptionOption(), this.createInstanceOption(), this.createThreadIdOption(), this.createMarsOption(), this.createFedAuthOption()];\n    let length = 0;\n\n    for (let i = 0, len = options.length; i < len; i++) {\n      const option = options[i];\n      length += 5 + option.data.length;\n    }\n\n    length++; // terminator\n\n    this.data = Buffer.alloc(length, 0);\n    let optionOffset = 0;\n    let optionDataOffset = 5 * options.length + 1;\n\n    for (let j = 0, len = options.length; j < len; j++) {\n      const option = options[j];\n      this.data.writeUInt8(option.token, optionOffset + 0);\n      this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n      this.data.writeUInt16BE(option.data.length, optionOffset + 3);\n      optionOffset += 5;\n      option.data.copy(this.data, optionDataOffset);\n      optionDataOffset += option.data.length;\n    }\n\n    this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n  }\n\n  createVersionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(this.options.version.major);\n    buffer.writeUInt8(this.options.version.minor);\n    buffer.writeUInt16BE(this.options.version.build);\n    buffer.writeUInt16BE(this.options.version.subbuild);\n    return {\n      token: TOKEN.VERSION,\n      data: buffer.data\n    };\n  }\n\n  createEncryptionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n\n    if (this.options.encrypt) {\n      buffer.writeUInt8(ENCRYPT.ON);\n    } else {\n      buffer.writeUInt8(ENCRYPT.NOT_SUP);\n    }\n\n    return {\n      token: TOKEN.ENCRYPTION,\n      data: buffer.data\n    };\n  }\n\n  createInstanceOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x00);\n    return {\n      token: TOKEN.INSTOPT,\n      data: buffer.data\n    };\n  }\n\n  createThreadIdOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt32BE(0x00);\n    return {\n      token: TOKEN.THREADID,\n      data: buffer.data\n    };\n  }\n\n  createMarsOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(MARS.OFF);\n    return {\n      token: TOKEN.MARS,\n      data: buffer.data\n    };\n  }\n\n  createFedAuthOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x01);\n    return {\n      token: TOKEN.FEDAUTHREQUIRED,\n      data: buffer.data\n    };\n  }\n\n  extractOptions() {\n    let offset = 0;\n\n    while (this.data[offset] !== TOKEN.TERMINATOR) {\n      let dataOffset = this.data.readUInt16BE(offset + 1);\n      const dataLength = this.data.readUInt16BE(offset + 3);\n\n      switch (this.data[offset]) {\n        case TOKEN.VERSION:\n          this.extractVersion(dataOffset);\n          break;\n\n        case TOKEN.ENCRYPTION:\n          this.extractEncryption(dataOffset);\n          break;\n\n        case TOKEN.INSTOPT:\n          this.extractInstance(dataOffset);\n          break;\n\n        case TOKEN.THREADID:\n          if (dataLength > 0) {\n            this.extractThreadId(dataOffset);\n          }\n\n          break;\n\n        case TOKEN.MARS:\n          this.extractMars(dataOffset);\n          break;\n\n        case TOKEN.FEDAUTHREQUIRED:\n          this.extractFedAuth(dataOffset);\n          break;\n      }\n\n      offset += 5;\n      dataOffset += dataLength;\n    }\n  }\n\n  extractVersion(offset) {\n    this.version = {\n      major: this.data.readUInt8(offset + 0),\n      minor: this.data.readUInt8(offset + 1),\n      build: this.data.readUInt16BE(offset + 2),\n      subbuild: this.data.readUInt16BE(offset + 4)\n    };\n  }\n\n  extractEncryption(offset) {\n    this.encryption = this.data.readUInt8(offset);\n    this.encryptionString = encryptByValue[this.encryption];\n  }\n\n  extractInstance(offset) {\n    this.instance = this.data.readUInt8(offset);\n  }\n\n  extractThreadId(offset) {\n    this.threadId = this.data.readUInt32BE(offset);\n  }\n\n  extractMars(offset) {\n    this.mars = this.data.readUInt8(offset);\n    this.marsString = marsByValue[this.mars];\n  }\n\n  extractFedAuth(offset) {\n    this.fedAuthRequired = this.data.readUInt8(offset);\n  }\n\n  toString(indent = '') {\n    return indent + 'PreLogin - ' + (0, _sprintfJs.sprintf)('version:%d.%d.%d.%d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)', this.version.major, this.version.minor, this.version.build, this.version.subbuild, this.encryption ? this.encryption : 0, this.encryptionString ? this.encryptionString : '', this.instance ? this.instance : 0, this.threadId ? this.threadId : 0, this.mars ? this.mars : 0, this.marsString ? this.marsString : '');\n  }\n\n}\n\nvar _default = PreloginPayload;\nexports.default = _default;\nmodule.exports = PreloginPayload;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}