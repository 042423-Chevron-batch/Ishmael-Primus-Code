{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { StringUtils, ClientAuthError, ServerError } from '@azure/msal-common';\nimport { BrowserAuthError, BrowserAuthErrorMessage } from '../error/BrowserAuthError.js';\nimport { TemporaryCacheKeys, ApiId } from '../utils/BrowserConstants.js';\nimport { InteractionHandler } from './InteractionHandler.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar RedirectHandler = /** @class */function (_super) {\n  __extends(RedirectHandler, _super);\n  function RedirectHandler(authCodeModule, storageImpl, authCodeRequest, logger, browserCrypto, performanceClient) {\n    var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) || this;\n    _this.browserCrypto = browserCrypto;\n    return _this;\n  }\n  /**\r\n   * Redirects window to given URL.\r\n   * @param urlNavigate\r\n   */\n  RedirectHandler.prototype.initiateAuthRequest = function (requestUrl, params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var navigationOptions, navigate;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n            if (!!StringUtils.isEmpty(requestUrl)) return [3 /*break*/, 7];\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n              this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\n              this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\n            }\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\n            this.logger.infoPii(\"RedirectHandler.initiateAuthRequest: Navigate to: \" + requestUrl);\n            navigationOptions = {\n              apiId: ApiId.acquireTokenRedirect,\n              timeout: params.redirectTimeout,\n              noHistory: false\n            };\n            if (!(typeof params.onRedirectNavigate === \"function\")) return [3 /*break*/, 4];\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\n            navigate = params.onRedirectNavigate(requestUrl);\n            if (!(navigate !== false)) return [3 /*break*/, 2];\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\n            return [4 /*yield*/, params.navigationClient.navigateExternal(requestUrl, navigationOptions)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n          case 2:\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\n            return [2 /*return*/];\n          case 3:\n            return [3 /*break*/, 6];\n          case 4:\n            // Navigate window to request URL\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\n            return [4 /*yield*/, params.navigationClient.navigateExternal(requestUrl, navigationOptions)];\n          case 5:\n            _a.sent();\n            return [2 /*return*/];\n          case 6:\n            return [3 /*break*/, 8];\n          case 7:\n            // Throw error if request URL is empty.\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n          case 8:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Handle authorization code response in the window.\r\n   * @param hash\r\n   */\n  RedirectHandler.prototype.handleCodeResponseFromHash = function (locationHash, state, authority, networkModule) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stateKey, requestState, authCodeResponse, nonceKey, cachedNonce, cachedCcsCred, tokenResponse;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n            // Check that location hash isn't empty.\n            if (StringUtils.isEmpty(locationHash)) {\n              throw BrowserAuthError.createEmptyHashError(locationHash);\n            }\n            // Interaction is completed - remove interaction status.\n            this.browserStorage.setInteractionInProgress(false);\n            stateKey = this.browserStorage.generateStateKey(state);\n            requestState = this.browserStorage.getTemporaryCache(stateKey);\n            if (!requestState) {\n              throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n            }\n            try {\n              authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n            } catch (e) {\n              if (e instanceof ServerError && e.subError === BrowserAuthErrorMessage.userCancelledError.code) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw BrowserAuthError.createUserCancelledError();\n              } else {\n                throw e;\n              }\n            }\n            nonceKey = this.browserStorage.generateNonceKey(requestState);\n            cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n            // Assign code to request\n            this.authCodeRequest.code = authCodeResponse.code;\n            if (!authCodeResponse.cloud_instance_host_name) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule)];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            authCodeResponse.nonce = cachedNonce || undefined;\n            authCodeResponse.state = requestState;\n            // Add CCS parameters if available\n            if (authCodeResponse.client_info) {\n              this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n            } else {\n              cachedCcsCred = this.checkCcsCredentials();\n              if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n              }\n            }\n            return [4 /*yield*/, this.authModule.acquireToken(this.authCodeRequest, authCodeResponse)];\n          case 3:\n            tokenResponse = _a.sent();\n            this.browserStorage.cleanRequestByState(state);\n            return [2 /*return*/, tokenResponse];\n        }\n      });\n    });\n  };\n  return RedirectHandler;\n}(InteractionHandler);\nexport { RedirectHandler };","map":{"version":3,"names":["__extends","__awaiter","__generator","StringUtils","ClientAuthError","ServerError","BrowserAuthError","BrowserAuthErrorMessage","TemporaryCacheKeys","ApiId","InteractionHandler","RedirectHandler","_super","authCodeModule","storageImpl","authCodeRequest","logger","browserCrypto","performanceClient","_this","call","prototype","initiateAuthRequest","requestUrl","params","navigationOptions","navigate","_a","label","verbose","isEmpty","redirectStartPage","browserStorage","setTemporaryCache","ORIGIN_URI","CORRELATION_ID","correlationId","cacheCodeRequest","infoPii","apiId","acquireTokenRedirect","timeout","redirectTimeout","noHistory","onRedirectNavigate","navigationClient","navigateExternal","sent","info","createEmptyNavigationUriError","handleCodeResponseFromHash","locationHash","state","authority","networkModule","stateKey","requestState","authCodeResponse","nonceKey","cachedNonce","cachedCcsCred","tokenResponse","createEmptyHashError","setInteractionInProgress","generateStateKey","getTemporaryCache","createStateNotFoundError","authModule","handleFragmentResponse","e","subError","userCancelledError","code","createUserCancelledError","generateNonceKey","cloud_instance_host_name","updateTokenEndpointAuthority","nonce","undefined","client_info","clientInfo","checkCcsCredentials","ccsCredential","acquireToken","cleanRequestByState"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { StringUtils, ClientAuthError, ServerError } from '@azure/msal-common';\nimport { BrowserAuthError, BrowserAuthErrorMessage } from '../error/BrowserAuthError.js';\nimport { TemporaryCacheKeys, ApiId } from '../utils/BrowserConstants.js';\nimport { InteractionHandler } from './InteractionHandler.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar RedirectHandler = /** @class */ (function (_super) {\r\n    __extends(RedirectHandler, _super);\r\n    function RedirectHandler(authCodeModule, storageImpl, authCodeRequest, logger, browserCrypto, performanceClient) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) || this;\r\n        _this.browserCrypto = browserCrypto;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    RedirectHandler.prototype.initiateAuthRequest = function (requestUrl, params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var navigationOptions, navigate;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\r\n                        if (!!StringUtils.isEmpty(requestUrl)) return [3 /*break*/, 7];\r\n                        // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n                        if (params.redirectStartPage) {\r\n                            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\r\n                            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\r\n                        }\r\n                        // Set interaction status in the library.\r\n                        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\r\n                        this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\r\n                        this.logger.infoPii(\"RedirectHandler.initiateAuthRequest: Navigate to: \" + requestUrl);\r\n                        navigationOptions = {\r\n                            apiId: ApiId.acquireTokenRedirect,\r\n                            timeout: params.redirectTimeout,\r\n                            noHistory: false\r\n                        };\r\n                        if (!(typeof params.onRedirectNavigate === \"function\")) return [3 /*break*/, 4];\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\r\n                        navigate = params.onRedirectNavigate(requestUrl);\r\n                        if (!(navigate !== false)) return [3 /*break*/, 2];\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\r\n                        return [4 /*yield*/, params.navigationClient.navigateExternal(requestUrl, navigationOptions)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\r\n                        return [2 /*return*/];\r\n                    case 3: return [3 /*break*/, 6];\r\n                    case 4:\r\n                        // Navigate window to request URL\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\r\n                        return [4 /*yield*/, params.navigationClient.navigateExternal(requestUrl, navigationOptions)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 6: return [3 /*break*/, 8];\r\n                    case 7:\r\n                        // Throw error if request URL is empty.\r\n                        this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\r\n                        throw BrowserAuthError.createEmptyNavigationUriError();\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    RedirectHandler.prototype.handleCodeResponseFromHash = function (locationHash, state, authority, networkModule) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var stateKey, requestState, authCodeResponse, nonceKey, cachedNonce, cachedCcsCred, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\r\n                        // Check that location hash isn't empty.\r\n                        if (StringUtils.isEmpty(locationHash)) {\r\n                            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n                        }\r\n                        // Interaction is completed - remove interaction status.\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        stateKey = this.browserStorage.generateStateKey(state);\r\n                        requestState = this.browserStorage.getTemporaryCache(stateKey);\r\n                        if (!requestState) {\r\n                            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\r\n                        }\r\n                        try {\r\n                            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n                        }\r\n                        catch (e) {\r\n                            if (e instanceof ServerError && e.subError === BrowserAuthErrorMessage.userCancelledError.code) {\r\n                                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                                throw BrowserAuthError.createUserCancelledError();\r\n                            }\r\n                            else {\r\n                                throw e;\r\n                            }\r\n                        }\r\n                        nonceKey = this.browserStorage.generateNonceKey(requestState);\r\n                        cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\r\n                        // Assign code to request\r\n                        this.authCodeRequest.code = authCodeResponse.code;\r\n                        if (!authCodeResponse.cloud_instance_host_name) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        authCodeResponse.nonce = cachedNonce || undefined;\r\n                        authCodeResponse.state = requestState;\r\n                        // Add CCS parameters if available\r\n                        if (authCodeResponse.client_info) {\r\n                            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n                        }\r\n                        else {\r\n                            cachedCcsCred = this.checkCcsCredentials();\r\n                            if (cachedCcsCred) {\r\n                                this.authCodeRequest.ccsCredential = cachedCcsCred;\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, this.authModule.acquireToken(this.authCodeRequest, authCodeResponse)];\r\n                    case 3:\r\n                        tokenResponse = _a.sent();\r\n                        this.browserStorage.cleanRequestByState(state);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RedirectHandler;\r\n}(InteractionHandler));\n\nexport { RedirectHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}