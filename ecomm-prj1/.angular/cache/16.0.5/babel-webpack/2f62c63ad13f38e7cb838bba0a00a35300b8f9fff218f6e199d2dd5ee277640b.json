{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { DB_NAME, DB_VERSION, DB_TABLE_NAME } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\nvar DatabaseStorage = /** @class */function () {\n  function DatabaseStorage() {\n    this.dbName = DB_NAME;\n    this.version = DB_VERSION;\n    this.tableName = DB_TABLE_NAME;\n    this.dbOpen = false;\n  }\n  /**\r\n   * Opens IndexedDB instance.\r\n   */\n  DatabaseStorage.prototype.open = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          var openDB = window.indexedDB.open(_this.dbName, _this.version);\n          openDB.addEventListener(\"upgradeneeded\", function (e) {\n            var event = e;\n            event.target.result.createObjectStore(_this.tableName);\n          });\n          openDB.addEventListener(\"success\", function (e) {\n            var event = e;\n            _this.db = event.target.result;\n            _this.dbOpen = true;\n            resolve();\n          });\n          openDB.addEventListener(\"error\", function () {\n            return reject(BrowserAuthError.createDatabaseUnavailableError());\n          });\n        })];\n      });\n    });\n  };\n  /**\r\n   * Closes the connection to IndexedDB database when all pending transactions\r\n   * complete.\r\n   */\n  DatabaseStorage.prototype.closeConnection = function () {\n    var db = this.db;\n    if (db && this.dbOpen) {\n      db.close();\n      this.dbOpen = false;\n    }\n  };\n  /**\r\n   * Opens database if it's not already open\r\n   */\n  DatabaseStorage.prototype.validateDbIsOpen = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this.dbOpen) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.open()];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Retrieves item from IndexedDB instance.\r\n   * @param key\r\n   */\n  DatabaseStorage.prototype.getItem = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.validateDbIsOpen()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              // TODO: Add timeouts?\n              if (!_this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n              }\n              var transaction = _this.db.transaction([_this.tableName], \"readonly\");\n              var objectStore = transaction.objectStore(_this.tableName);\n              var dbGet = objectStore.get(key);\n              dbGet.addEventListener(\"success\", function (e) {\n                var event = e;\n                _this.closeConnection();\n                resolve(event.target.result);\n              });\n              dbGet.addEventListener(\"error\", function (e) {\n                _this.closeConnection();\n                reject(e);\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Adds item to IndexedDB under given key\r\n   * @param key\r\n   * @param payload\r\n   */\n  DatabaseStorage.prototype.setItem = function (key, payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.validateDbIsOpen()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              // TODO: Add timeouts?\n              if (!_this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n              }\n              var transaction = _this.db.transaction([_this.tableName], \"readwrite\");\n              var objectStore = transaction.objectStore(_this.tableName);\n              var dbPut = objectStore.put(payload, key);\n              dbPut.addEventListener(\"success\", function () {\n                _this.closeConnection();\n                resolve();\n              });\n              dbPut.addEventListener(\"error\", function (e) {\n                _this.closeConnection();\n                reject(e);\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Removes item from IndexedDB under given key\r\n   * @param key\r\n   */\n  DatabaseStorage.prototype.removeItem = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.validateDbIsOpen()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              if (!_this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n              }\n              var transaction = _this.db.transaction([_this.tableName], \"readwrite\");\n              var objectStore = transaction.objectStore(_this.tableName);\n              var dbDelete = objectStore.delete(key);\n              dbDelete.addEventListener(\"success\", function () {\n                _this.closeConnection();\n                resolve();\n              });\n              dbDelete.addEventListener(\"error\", function (e) {\n                _this.closeConnection();\n                reject(e);\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get all the keys from the storage object as an iterable array of strings.\r\n   */\n  DatabaseStorage.prototype.getKeys = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.validateDbIsOpen()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              if (!_this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n              }\n              var transaction = _this.db.transaction([_this.tableName], \"readonly\");\n              var objectStore = transaction.objectStore(_this.tableName);\n              var dbGetKeys = objectStore.getAllKeys();\n              dbGetKeys.addEventListener(\"success\", function (e) {\n                var event = e;\n                _this.closeConnection();\n                resolve(event.target.result);\n              });\n              dbGetKeys.addEventListener(\"error\", function (e) {\n                _this.closeConnection();\n                reject(e);\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * Checks whether there is an object under the search key in the object store\r\n   */\n  DatabaseStorage.prototype.containsKey = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.validateDbIsOpen()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              if (!_this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n              }\n              var transaction = _this.db.transaction([_this.tableName], \"readonly\");\n              var objectStore = transaction.objectStore(_this.tableName);\n              var dbContainsKey = objectStore.count(key);\n              dbContainsKey.addEventListener(\"success\", function (e) {\n                var event = e;\n                _this.closeConnection();\n                resolve(event.target.result === 1);\n              });\n              dbContainsKey.addEventListener(\"error\", function (e) {\n                _this.closeConnection();\n                reject(e);\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\r\n   * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\r\n   * with IndexedDB database versions.\r\n   */\n  DatabaseStorage.prototype.deleteDatabase = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // Check if database being deleted exists\n        if (this.db && this.dbOpen) {\n          this.closeConnection();\n        }\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          var deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n          deleteDbRequest.addEventListener(\"success\", function () {\n            return resolve(true);\n          });\n          deleteDbRequest.addEventListener(\"blocked\", function () {\n            return resolve(true);\n          });\n          deleteDbRequest.addEventListener(\"error\", function () {\n            return reject(false);\n          });\n        })];\n      });\n    });\n  };\n  return DatabaseStorage;\n}();\nexport { DatabaseStorage };","map":{"version":3,"names":["__awaiter","__generator","BrowserAuthError","DB_NAME","DB_VERSION","DB_TABLE_NAME","DatabaseStorage","dbName","version","tableName","dbOpen","prototype","open","_this","_a","Promise","resolve","reject","openDB","window","indexedDB","addEventListener","e","event","target","result","createObjectStore","db","createDatabaseUnavailableError","closeConnection","close","validateDbIsOpen","label","sent","getItem","key","createDatabaseNotOpenError","transaction","objectStore","dbGet","get","setItem","payload","dbPut","put","removeItem","dbDelete","delete","getKeys","dbGetKeys","getAllKeys","containsKey","dbContainsKey","count","deleteDatabase","deleteDbRequest"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { DB_NAME, DB_VERSION, DB_TABLE_NAME } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\r\nvar DatabaseStorage = /** @class */ (function () {\r\n    function DatabaseStorage() {\r\n        this.dbName = DB_NAME;\r\n        this.version = DB_VERSION;\r\n        this.tableName = DB_TABLE_NAME;\r\n        this.dbOpen = false;\r\n    }\r\n    /**\r\n     * Opens IndexedDB instance.\r\n     */\r\n    DatabaseStorage.prototype.open = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var openDB = window.indexedDB.open(_this.dbName, _this.version);\r\n                        openDB.addEventListener(\"upgradeneeded\", function (e) {\r\n                            var event = e;\r\n                            event.target.result.createObjectStore(_this.tableName);\r\n                        });\r\n                        openDB.addEventListener(\"success\", function (e) {\r\n                            var event = e;\r\n                            _this.db = event.target.result;\r\n                            _this.dbOpen = true;\r\n                            resolve();\r\n                        });\r\n                        openDB.addEventListener(\"error\", function () { return reject(BrowserAuthError.createDatabaseUnavailableError()); });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Closes the connection to IndexedDB database when all pending transactions\r\n     * complete.\r\n     */\r\n    DatabaseStorage.prototype.closeConnection = function () {\r\n        var db = this.db;\r\n        if (db && this.dbOpen) {\r\n            db.close();\r\n            this.dbOpen = false;\r\n        }\r\n    };\r\n    /**\r\n     * Opens database if it's not already open\r\n     */\r\n    DatabaseStorage.prototype.validateDbIsOpen = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.dbOpen) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.open()];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves item from IndexedDB instance.\r\n     * @param key\r\n     */\r\n    DatabaseStorage.prototype.getItem = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateDbIsOpen()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                // TODO: Add timeouts?\r\n                                if (!_this.db) {\r\n                                    return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n                                }\r\n                                var transaction = _this.db.transaction([_this.tableName], \"readonly\");\r\n                                var objectStore = transaction.objectStore(_this.tableName);\r\n                                var dbGet = objectStore.get(key);\r\n                                dbGet.addEventListener(\"success\", function (e) {\r\n                                    var event = e;\r\n                                    _this.closeConnection();\r\n                                    resolve(event.target.result);\r\n                                });\r\n                                dbGet.addEventListener(\"error\", function (e) {\r\n                                    _this.closeConnection();\r\n                                    reject(e);\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds item to IndexedDB under given key\r\n     * @param key\r\n     * @param payload\r\n     */\r\n    DatabaseStorage.prototype.setItem = function (key, payload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateDbIsOpen()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                // TODO: Add timeouts?\r\n                                if (!_this.db) {\r\n                                    return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n                                }\r\n                                var transaction = _this.db.transaction([_this.tableName], \"readwrite\");\r\n                                var objectStore = transaction.objectStore(_this.tableName);\r\n                                var dbPut = objectStore.put(payload, key);\r\n                                dbPut.addEventListener(\"success\", function () {\r\n                                    _this.closeConnection();\r\n                                    resolve();\r\n                                });\r\n                                dbPut.addEventListener(\"error\", function (e) {\r\n                                    _this.closeConnection();\r\n                                    reject(e);\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Removes item from IndexedDB under given key\r\n     * @param key\r\n     */\r\n    DatabaseStorage.prototype.removeItem = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateDbIsOpen()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                if (!_this.db) {\r\n                                    return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n                                }\r\n                                var transaction = _this.db.transaction([_this.tableName], \"readwrite\");\r\n                                var objectStore = transaction.objectStore(_this.tableName);\r\n                                var dbDelete = objectStore.delete(key);\r\n                                dbDelete.addEventListener(\"success\", function () {\r\n                                    _this.closeConnection();\r\n                                    resolve();\r\n                                });\r\n                                dbDelete.addEventListener(\"error\", function (e) {\r\n                                    _this.closeConnection();\r\n                                    reject(e);\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get all the keys from the storage object as an iterable array of strings.\r\n     */\r\n    DatabaseStorage.prototype.getKeys = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateDbIsOpen()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                if (!_this.db) {\r\n                                    return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n                                }\r\n                                var transaction = _this.db.transaction([_this.tableName], \"readonly\");\r\n                                var objectStore = transaction.objectStore(_this.tableName);\r\n                                var dbGetKeys = objectStore.getAllKeys();\r\n                                dbGetKeys.addEventListener(\"success\", function (e) {\r\n                                    var event = e;\r\n                                    _this.closeConnection();\r\n                                    resolve(event.target.result);\r\n                                });\r\n                                dbGetKeys.addEventListener(\"error\", function (e) {\r\n                                    _this.closeConnection();\r\n                                    reject(e);\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * Checks whether there is an object under the search key in the object store\r\n     */\r\n    DatabaseStorage.prototype.containsKey = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateDbIsOpen()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                if (!_this.db) {\r\n                                    return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n                                }\r\n                                var transaction = _this.db.transaction([_this.tableName], \"readonly\");\r\n                                var objectStore = transaction.objectStore(_this.tableName);\r\n                                var dbContainsKey = objectStore.count(key);\r\n                                dbContainsKey.addEventListener(\"success\", function (e) {\r\n                                    var event = e;\r\n                                    _this.closeConnection();\r\n                                    resolve(event.target.result === 1);\r\n                                });\r\n                                dbContainsKey.addEventListener(\"error\", function (e) {\r\n                                    _this.closeConnection();\r\n                                    reject(e);\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\r\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\r\n     * with IndexedDB database versions.\r\n     */\r\n    DatabaseStorage.prototype.deleteDatabase = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // Check if database being deleted exists\r\n                if (this.db && this.dbOpen) {\r\n                    this.closeConnection();\r\n                }\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\r\n                        deleteDbRequest.addEventListener(\"success\", function () { return resolve(true); });\r\n                        deleteDbRequest.addEventListener(\"blocked\", function () { return resolve(true); });\r\n                        deleteDbRequest.addEventListener(\"error\", function () { return reject(false); });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseStorage;\r\n}());\n\nexport { DatabaseStorage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}