{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar crypto = _interopRequireWildcard(require(\"crypto\"));\nvar _jsMd = _interopRequireDefault(require(\"js-md4\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass NTLMResponsePayload {\n  constructor(loginData) {\n    this.data = void 0;\n    this.data = this.createResponse(loginData);\n  }\n  toString(indent = '') {\n    return indent + 'NTLM Auth';\n  }\n  createResponse(challenge) {\n    const client_nonce = this.createClientNonce();\n    const lmv2len = 24;\n    const ntlmv2len = 16;\n    const domain = challenge.domain;\n    const username = challenge.userName;\n    const password = challenge.password;\n    const ntlmData = challenge.ntlmpacket;\n    const server_data = ntlmData.target;\n    const server_nonce = ntlmData.nonce;\n    const bufferLength = 64 + domain.length * 2 + username.length * 2 + lmv2len + ntlmv2len + 8 + 8 + 8 + 4 + server_data.length + 4;\n    const data = new _writableTrackingBuffer.default(bufferLength);\n    data.position = 0;\n    data.writeString('NTLMSSP\\u0000', 'utf8');\n    data.writeUInt32LE(0x03);\n    const baseIdx = 64;\n    const dnIdx = baseIdx;\n    const unIdx = dnIdx + domain.length * 2;\n    const l2Idx = unIdx + username.length * 2;\n    const ntIdx = l2Idx + lmv2len;\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt32LE(l2Idx);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt32LE(ntIdx);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt32LE(dnIdx);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt32LE(unIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0x8201);\n    data.writeUInt16LE(0x08);\n    data.writeString(domain, 'ucs2');\n    data.writeString(username, 'ucs2');\n    const lmv2Data = this.lmv2Response(domain, username, password, server_nonce, client_nonce);\n    data.copyFrom(lmv2Data);\n    const genTime = new Date().getTime();\n    const ntlmDataBuffer = this.ntlmv2Response(domain, username, password, server_nonce, server_data, client_nonce, genTime);\n    data.copyFrom(ntlmDataBuffer);\n    data.writeUInt32LE(0x0101);\n    data.writeUInt32LE(0x0000);\n    const timestamp = this.createTimestamp(genTime);\n    data.copyFrom(timestamp);\n    data.copyFrom(client_nonce);\n    data.writeUInt32LE(0x0000);\n    data.copyFrom(server_data);\n    data.writeUInt32LE(0x0000);\n    return data.data;\n  }\n  createClientNonce() {\n    const client_nonce = Buffer.alloc(8, 0);\n    let nidx = 0;\n    while (nidx < 8) {\n      client_nonce.writeUInt8(Math.ceil(Math.random() * 255), nidx);\n      nidx++;\n    }\n    return client_nonce;\n  }\n  ntlmv2Response(domain, user, password, serverNonce, targetInfo, clientNonce, mytime) {\n    const timestamp = this.createTimestamp(mytime);\n    const hash = this.ntv2Hash(domain, user, password);\n    const dataLength = 40 + targetInfo.length;\n    const data = Buffer.alloc(dataLength, 0);\n    serverNonce.copy(data, 0, 0, 8);\n    data.writeUInt32LE(0x101, 8);\n    data.writeUInt32LE(0x0, 12);\n    timestamp.copy(data, 16, 0, 8);\n    clientNonce.copy(data, 24, 0, 8);\n    data.writeUInt32LE(0x0, 32);\n    targetInfo.copy(data, 36, 0, targetInfo.length);\n    data.writeUInt32LE(0x0, 36 + targetInfo.length);\n    return this.hmacMD5(data, hash);\n  }\n  createTimestamp(time) {\n    const tenthsOfAMicrosecond = (BigInt(time) + BigInt(11644473600)) * BigInt(10000000);\n    const lo = Number(tenthsOfAMicrosecond & BigInt(0xffffffff));\n    const hi = Number(tenthsOfAMicrosecond >> BigInt(32) & BigInt(0xffffffff));\n    const result = Buffer.alloc(8);\n    result.writeUInt32LE(lo, 0);\n    result.writeUInt32LE(hi, 4);\n    return result;\n  }\n  lmv2Response(domain, user, password, serverNonce, clientNonce) {\n    const hash = this.ntv2Hash(domain, user, password);\n    const data = Buffer.alloc(serverNonce.length + clientNonce.length, 0);\n    serverNonce.copy(data);\n    clientNonce.copy(data, serverNonce.length, 0, clientNonce.length);\n    const newhash = this.hmacMD5(data, hash);\n    const response = Buffer.alloc(newhash.length + clientNonce.length, 0);\n    newhash.copy(response);\n    clientNonce.copy(response, newhash.length, 0, clientNonce.length);\n    return response;\n  }\n  ntv2Hash(domain, user, password) {\n    const hash = this.ntHash(password);\n    const identity = Buffer.from(user.toUpperCase() + domain.toUpperCase(), 'ucs2');\n    return this.hmacMD5(identity, hash);\n  }\n  ntHash(text) {\n    const unicodeString = Buffer.from(text, 'ucs2');\n    return Buffer.from(_jsMd.default.arrayBuffer(unicodeString));\n  }\n  hmacMD5(data, key) {\n    return crypto.createHmac('MD5', key).update(data).digest();\n  }\n}\nvar _default = NTLMResponsePayload;\nexports.default = _default;\nmodule.exports = NTLMResponsePayload;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_writableTrackingBuffer","_interopRequireDefault","require","crypto","_interopRequireWildcard","_jsMd","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","NTLMResponsePayload","constructor","loginData","data","createResponse","toString","indent","challenge","client_nonce","createClientNonce","lmv2len","ntlmv2len","domain","username","userName","password","ntlmData","ntlmpacket","server_data","target","server_nonce","nonce","bufferLength","length","position","writeString","writeUInt32LE","baseIdx","dnIdx","unIdx","l2Idx","ntIdx","writeUInt16LE","lmv2Data","lmv2Response","copyFrom","genTime","Date","getTime","ntlmDataBuffer","ntlmv2Response","timestamp","createTimestamp","Buffer","alloc","nidx","writeUInt8","Math","ceil","random","user","serverNonce","targetInfo","clientNonce","mytime","hash","ntv2Hash","dataLength","copy","hmacMD5","time","tenthsOfAMicrosecond","BigInt","lo","Number","hi","result","newhash","response","ntHash","identity","from","toUpperCase","text","unicodeString","arrayBuffer","createHmac","update","digest","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/ntlm-payload.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar crypto = _interopRequireWildcard(require(\"crypto\"));\n\nvar _jsMd = _interopRequireDefault(require(\"js-md4\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass NTLMResponsePayload {\n  constructor(loginData) {\n    this.data = void 0;\n    this.data = this.createResponse(loginData);\n  }\n\n  toString(indent = '') {\n    return indent + 'NTLM Auth';\n  }\n\n  createResponse(challenge) {\n    const client_nonce = this.createClientNonce();\n    const lmv2len = 24;\n    const ntlmv2len = 16;\n    const domain = challenge.domain;\n    const username = challenge.userName;\n    const password = challenge.password;\n    const ntlmData = challenge.ntlmpacket;\n    const server_data = ntlmData.target;\n    const server_nonce = ntlmData.nonce;\n    const bufferLength = 64 + domain.length * 2 + username.length * 2 + lmv2len + ntlmv2len + 8 + 8 + 8 + 4 + server_data.length + 4;\n    const data = new _writableTrackingBuffer.default(bufferLength);\n    data.position = 0;\n    data.writeString('NTLMSSP\\u0000', 'utf8');\n    data.writeUInt32LE(0x03);\n    const baseIdx = 64;\n    const dnIdx = baseIdx;\n    const unIdx = dnIdx + domain.length * 2;\n    const l2Idx = unIdx + username.length * 2;\n    const ntIdx = l2Idx + lmv2len;\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt32LE(l2Idx);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt32LE(ntIdx);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt32LE(dnIdx);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt32LE(unIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0x8201);\n    data.writeUInt16LE(0x08);\n    data.writeString(domain, 'ucs2');\n    data.writeString(username, 'ucs2');\n    const lmv2Data = this.lmv2Response(domain, username, password, server_nonce, client_nonce);\n    data.copyFrom(lmv2Data);\n    const genTime = new Date().getTime();\n    const ntlmDataBuffer = this.ntlmv2Response(domain, username, password, server_nonce, server_data, client_nonce, genTime);\n    data.copyFrom(ntlmDataBuffer);\n    data.writeUInt32LE(0x0101);\n    data.writeUInt32LE(0x0000);\n    const timestamp = this.createTimestamp(genTime);\n    data.copyFrom(timestamp);\n    data.copyFrom(client_nonce);\n    data.writeUInt32LE(0x0000);\n    data.copyFrom(server_data);\n    data.writeUInt32LE(0x0000);\n    return data.data;\n  }\n\n  createClientNonce() {\n    const client_nonce = Buffer.alloc(8, 0);\n    let nidx = 0;\n\n    while (nidx < 8) {\n      client_nonce.writeUInt8(Math.ceil(Math.random() * 255), nidx);\n      nidx++;\n    }\n\n    return client_nonce;\n  }\n\n  ntlmv2Response(domain, user, password, serverNonce, targetInfo, clientNonce, mytime) {\n    const timestamp = this.createTimestamp(mytime);\n    const hash = this.ntv2Hash(domain, user, password);\n    const dataLength = 40 + targetInfo.length;\n    const data = Buffer.alloc(dataLength, 0);\n    serverNonce.copy(data, 0, 0, 8);\n    data.writeUInt32LE(0x101, 8);\n    data.writeUInt32LE(0x0, 12);\n    timestamp.copy(data, 16, 0, 8);\n    clientNonce.copy(data, 24, 0, 8);\n    data.writeUInt32LE(0x0, 32);\n    targetInfo.copy(data, 36, 0, targetInfo.length);\n    data.writeUInt32LE(0x0, 36 + targetInfo.length);\n    return this.hmacMD5(data, hash);\n  }\n\n  createTimestamp(time) {\n    const tenthsOfAMicrosecond = (BigInt(time) + BigInt(11644473600)) * BigInt(10000000);\n    const lo = Number(tenthsOfAMicrosecond & BigInt(0xffffffff));\n    const hi = Number(tenthsOfAMicrosecond >> BigInt(32) & BigInt(0xffffffff));\n    const result = Buffer.alloc(8);\n    result.writeUInt32LE(lo, 0);\n    result.writeUInt32LE(hi, 4);\n    return result;\n  }\n\n  lmv2Response(domain, user, password, serverNonce, clientNonce) {\n    const hash = this.ntv2Hash(domain, user, password);\n    const data = Buffer.alloc(serverNonce.length + clientNonce.length, 0);\n    serverNonce.copy(data);\n    clientNonce.copy(data, serverNonce.length, 0, clientNonce.length);\n    const newhash = this.hmacMD5(data, hash);\n    const response = Buffer.alloc(newhash.length + clientNonce.length, 0);\n    newhash.copy(response);\n    clientNonce.copy(response, newhash.length, 0, clientNonce.length);\n    return response;\n  }\n\n  ntv2Hash(domain, user, password) {\n    const hash = this.ntHash(password);\n    const identity = Buffer.from(user.toUpperCase() + domain.toUpperCase(), 'ucs2');\n    return this.hmacMD5(identity, hash);\n  }\n\n  ntHash(text) {\n    const unicodeString = Buffer.from(text, 'ucs2');\n    return Buffer.from(_jsMd.default.arrayBuffer(unicodeString));\n  }\n\n  hmacMD5(data, key) {\n    return crypto.createHmac('MD5', key).update(data).digest();\n  }\n\n}\n\nvar _default = NTLMResponsePayload;\nexports.default = _default;\nmodule.exports = NTLMResponsePayload;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}