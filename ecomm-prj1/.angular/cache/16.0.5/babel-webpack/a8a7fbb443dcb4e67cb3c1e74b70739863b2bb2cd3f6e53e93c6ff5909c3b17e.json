{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { Constants } from '@azure/msal-common';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { HTTP_REQUEST_TYPE } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\nvar FetchClient = /** @class */function () {\n  function FetchClient() {}\n  /**\r\n   * Fetch Client for REST endpoints - Get request\r\n   * @param url\r\n   * @param headers\r\n   * @param body\r\n   */\n  FetchClient.prototype.sendGetRequestAsync = function (url, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, e_1, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, fetch(url, {\n              method: HTTP_REQUEST_TYPE.GET,\n              headers: this.getFetchHeaders(options)\n            })];\n          case 1:\n            response = _b.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            e_1 = _b.sent();\n            if (window.navigator.onLine) {\n              throw BrowserAuthError.createGetRequestFailedError(e_1, url);\n            } else {\n              throw BrowserAuthError.createNoNetworkConnectivityError();\n            }\n          case 3:\n            _b.trys.push([3, 5,, 6]);\n            _a = {\n              headers: this.getHeaderDict(response.headers)\n            };\n            return [4 /*yield*/, response.json()];\n          case 4:\n            return [2 /*return*/, (_a.body = _b.sent(), _a.status = response.status, _a)];\n          case 5:\n            _b.sent();\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Fetch Client for REST endpoints - Post request\r\n   * @param url\r\n   * @param headers\r\n   * @param body\r\n   */\n  FetchClient.prototype.sendPostRequestAsync = function (url, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var reqBody, response, e_3, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            reqBody = options && options.body || Constants.EMPTY_STRING;\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, fetch(url, {\n              method: HTTP_REQUEST_TYPE.POST,\n              headers: this.getFetchHeaders(options),\n              body: reqBody\n            })];\n          case 2:\n            response = _b.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            e_3 = _b.sent();\n            if (window.navigator.onLine) {\n              throw BrowserAuthError.createPostRequestFailedError(e_3, url);\n            } else {\n              throw BrowserAuthError.createNoNetworkConnectivityError();\n            }\n          case 4:\n            _b.trys.push([4, 6,, 7]);\n            _a = {\n              headers: this.getHeaderDict(response.headers)\n            };\n            return [4 /*yield*/, response.json()];\n          case 5:\n            return [2 /*return*/, (_a.body = _b.sent(), _a.status = response.status, _a)];\n          case 6:\n            _b.sent();\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get Fetch API Headers object from string map\r\n   * @param inputHeaders\r\n   */\n  FetchClient.prototype.getFetchHeaders = function (options) {\n    var headers = new Headers();\n    if (!(options && options.headers)) {\n      return headers;\n    }\n    var optionsHeaders = options.headers;\n    Object.keys(optionsHeaders).forEach(function (key) {\n      headers.append(key, optionsHeaders[key]);\n    });\n    return headers;\n  };\n  FetchClient.prototype.getHeaderDict = function (headers) {\n    var headerDict = {};\n    headers.forEach(function (value, key) {\n      headerDict[key] = value;\n    });\n    return headerDict;\n  };\n  return FetchClient;\n}();\nexport { FetchClient };","map":{"version":3,"names":["__awaiter","__generator","Constants","BrowserAuthError","HTTP_REQUEST_TYPE","FetchClient","prototype","sendGetRequestAsync","url","options","response","e_1","_a","_b","label","trys","push","fetch","method","GET","headers","getFetchHeaders","sent","window","navigator","onLine","createGetRequestFailedError","createNoNetworkConnectivityError","getHeaderDict","json","body","status","createFailedToParseNetworkResponseError","sendPostRequestAsync","reqBody","e_3","EMPTY_STRING","POST","createPostRequestFailedError","Headers","optionsHeaders","Object","keys","forEach","key","append","headerDict","value"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/network/FetchClient.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { Constants } from '@azure/msal-common';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { HTTP_REQUEST_TYPE } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    FetchClient.prototype.sendGetRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, fetch(url, {\r\n                                method: HTTP_REQUEST_TYPE.GET,\r\n                                headers: this.getFetchHeaders(options)\r\n                            })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_1 = _b.sent();\r\n                        if (window.navigator.onLine) {\r\n                            throw BrowserAuthError.createGetRequestFailedError(e_1, url);\r\n                        }\r\n                        else {\r\n                            throw BrowserAuthError.createNoNetworkConnectivityError();\r\n                        }\r\n                    case 3:\r\n                        _b.trys.push([3, 5, , 6]);\r\n                        _a = {\r\n                            headers: this.getHeaderDict(response.headers)\r\n                        };\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4: return [2 /*return*/, (_a.body = (_b.sent()),\r\n                            _a.status = response.status,\r\n                            _a)];\r\n                    case 5:\r\n                        _b.sent();\r\n                        throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    FetchClient.prototype.sendPostRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reqBody, response, e_3, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        reqBody = (options && options.body) || Constants.EMPTY_STRING;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, fetch(url, {\r\n                                method: HTTP_REQUEST_TYPE.POST,\r\n                                headers: this.getFetchHeaders(options),\r\n                                body: reqBody\r\n                            })];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_3 = _b.sent();\r\n                        if (window.navigator.onLine) {\r\n                            throw BrowserAuthError.createPostRequestFailedError(e_3, url);\r\n                        }\r\n                        else {\r\n                            throw BrowserAuthError.createNoNetworkConnectivityError();\r\n                        }\r\n                    case 4:\r\n                        _b.trys.push([4, 6, , 7]);\r\n                        _a = {\r\n                            headers: this.getHeaderDict(response.headers)\r\n                        };\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 5: return [2 /*return*/, (_a.body = (_b.sent()),\r\n                            _a.status = response.status,\r\n                            _a)];\r\n                    case 6:\r\n                        _b.sent();\r\n                        throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders\r\n     */\r\n    FetchClient.prototype.getFetchHeaders = function (options) {\r\n        var headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        var optionsHeaders = options.headers;\r\n        Object.keys(optionsHeaders).forEach(function (key) {\r\n            headers.append(key, optionsHeaders[key]);\r\n        });\r\n        return headers;\r\n    };\r\n    FetchClient.prototype.getHeaderDict = function (headers) {\r\n        var headerDict = {};\r\n        headers.forEach(function (value, key) {\r\n            headerDict[key] = value;\r\n        });\r\n        return headerDict;\r\n    };\r\n    return FetchClient;\r\n}());\n\nexport { FetchClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}