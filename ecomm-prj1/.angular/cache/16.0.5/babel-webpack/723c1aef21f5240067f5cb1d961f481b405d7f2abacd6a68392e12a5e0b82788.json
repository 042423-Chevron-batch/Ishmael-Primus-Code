{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\ishma\\Revature\\Ishmael-Primus-Code-\\ecomm-prj1\\src\\app\\database.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as sql from 'mssql';\nimport * as dql \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  private config: sql.config = {\n    server: '052123-batch-server.database.windows.net',\n    database: '052123-batch',\n    user: 'batch052123',\n    password: 'Nubian19',\n    options: {\n      encrypt: true // Enable encryption for secure connection\n    }\n  };\n\n  async executeQuery(query: string): Promise<any> {\n    try {\n      const pool = await new sql.ConnectionPool(this.config).connect();\n      const result = await pool.request().query(query);\n      return result.recordset;\n    } catch (error) {\n      console.log('Error:', error);\n      throw error;\n    } finally {\n      if (pool) {\n        pool.close();\n      }\n    }\n  }\n\n  async getCustomers(): Promise<any> {\n    const query = 'SELECT * FROM Customer';\n    return await this.executeQuery(query);\n  }\n\n  async getInventory(): Promise<any> {\n    const query = 'SELECT * FROM Inventory';\n    return await this.executeQuery(query);\n  }\n\n  async getOrders(): Promise<any> {\n    const query = 'SELECT * FROM [Order]';\n    return await this.executeQuery(query);\n  }\n\n  async getProducts(): Promise<any> {\n    const query = 'SELECT * FROM Products';\n    return await this.executeQuery(query);\n  }\n\n  async getJunction(): Promise<any> {\n    const query = 'SELECT * FROM StoreProductJunction';\n    return await this.executeQuery(query);\n  }\n\n  async getStores(): Promise<any> {\n    const query = 'SELECT * FROM Stores';\n    return await this.executeQuery(query);\n  }\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}