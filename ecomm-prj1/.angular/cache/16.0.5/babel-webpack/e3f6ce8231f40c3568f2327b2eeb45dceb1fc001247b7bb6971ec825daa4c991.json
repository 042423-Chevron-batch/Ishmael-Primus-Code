{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __spread, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar MsrBrowserCrypto = /** @class */function () {\n  function MsrBrowserCrypto() {}\n  MsrBrowserCrypto.prototype.initPrng = function (entropy) {\n    // Turn into array, as initPrng seems to not always like Uint8Array (even though it should support both)\n    return window.msrCrypto.initPrng(__spread(entropy));\n  };\n  MsrBrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\n    return window.msrCrypto.getRandomValues(dataBuffer);\n  };\n  MsrBrowserCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, window.msrCrypto.subtle.generateKey(algorithm, extractable, keyUsages)];\n      });\n    });\n  };\n  MsrBrowserCrypto.prototype.exportKey = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, window.msrCrypto.subtle.exportKey(KEY_FORMAT_JWK, key)];\n      });\n    });\n  };\n  MsrBrowserCrypto.prototype.importKey = function (keyData, algorithm, extractable, keyUsages) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, window.msrCrypto.subtle.importKey(KEY_FORMAT_JWK, keyData, algorithm, extractable, keyUsages)];\n      });\n    });\n  };\n  MsrBrowserCrypto.prototype.sign = function (algorithm, key, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, window.msrCrypto.subtle.sign(algorithm, key, data)];\n      });\n    });\n  };\n  MsrBrowserCrypto.prototype.digest = function (algorithm, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, window.msrCrypto.subtle.digest(algorithm, data)];\n      });\n    });\n  };\n  return MsrBrowserCrypto;\n}();\nexport { MsrBrowserCrypto };","map":{"version":3,"names":["__spread","__awaiter","__generator","KEY_FORMAT_JWK","MsrBrowserCrypto","prototype","initPrng","entropy","window","msrCrypto","getRandomValues","dataBuffer","generateKey","algorithm","extractable","keyUsages","_a","subtle","exportKey","key","importKey","keyData","sign","data","digest"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/crypto/MsrBrowserCrypto.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __spread, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar MsrBrowserCrypto = /** @class */ (function () {\r\n    function MsrBrowserCrypto() {\r\n    }\r\n    MsrBrowserCrypto.prototype.initPrng = function (entropy) {\r\n        // Turn into array, as initPrng seems to not always like Uint8Array (even though it should support both)\r\n        return window.msrCrypto.initPrng(__spread(entropy));\r\n    };\r\n    MsrBrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\r\n        return window.msrCrypto.getRandomValues(dataBuffer);\r\n    };\r\n    MsrBrowserCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.generateKey(algorithm, extractable, keyUsages)];\r\n            });\r\n        });\r\n    };\r\n    MsrBrowserCrypto.prototype.exportKey = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.exportKey(KEY_FORMAT_JWK, key)];\r\n            });\r\n        });\r\n    };\r\n    MsrBrowserCrypto.prototype.importKey = function (keyData, algorithm, extractable, keyUsages) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.importKey(KEY_FORMAT_JWK, keyData, algorithm, extractable, keyUsages)];\r\n            });\r\n        });\r\n    };\r\n    MsrBrowserCrypto.prototype.sign = function (algorithm, key, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.sign(algorithm, key, data)];\r\n            });\r\n        });\r\n    };\r\n    MsrBrowserCrypto.prototype.digest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.digest(algorithm, data)];\r\n            });\r\n        });\r\n    };\r\n    return MsrBrowserCrypto;\r\n}());\n\nexport { MsrBrowserCrypto };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}