{"ast":null,"code":"/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\n\nimport { __spreadArrays } from '../_virtual/_tslib.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { OIDC_SCOPES, Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\nvar ScopeSet = /** @class */function () {\n  function ScopeSet(inputScopes) {\n    var _this = this;\n    // Filter empty string and null/undefined array items\n    var scopeArr = inputScopes ? StringUtils.trimArrayEntries(__spreadArrays(inputScopes)) : [];\n    var filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\n    // Validate and filter scopes (validate function throws if validation fails)\n    this.validateInputScopes(filteredInput);\n    this.scopes = new Set(); // Iterator in constructor not supported by IE11\n    filteredInput.forEach(function (scope) {\n      return _this.scopes.add(scope);\n    });\n  }\n  /**\r\n   * Factory method to create ScopeSet from space-delimited string\r\n   * @param inputScopeString\r\n   * @param appClientId\r\n   * @param scopesRequired\r\n   */\n  ScopeSet.fromString = function (inputScopeString) {\n    var scopeString = inputScopeString || Constants.EMPTY_STRING;\n    var inputScopes = scopeString.split(\" \");\n    return new ScopeSet(inputScopes);\n  };\n  /**\r\n   * Used to validate the scopes input parameter requested  by the developer.\r\n   * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n   * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n   */\n  ScopeSet.prototype.validateInputScopes = function (inputScopes) {\n    // Check if scopes are required but not given or is an empty array\n    if (!inputScopes || inputScopes.length < 1) {\n      throw ClientConfigurationError.createEmptyScopesArrayError();\n    }\n  };\n  /**\r\n   * Check if a given scope is present in this set of scopes.\r\n   * @param scope\r\n   */\n  ScopeSet.prototype.containsScope = function (scope) {\n    var lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n    var lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n    // compare lowercase scopes\n    return !StringUtils.isEmpty(scope) ? lowerCaseScopesSet.scopes.has(scope.toLowerCase()) : false;\n  };\n  /**\r\n   * Check if a set of scopes is present in this set of scopes.\r\n   * @param scopeSet\r\n   */\n  ScopeSet.prototype.containsScopeSet = function (scopeSet) {\n    var _this = this;\n    if (!scopeSet || scopeSet.scopes.size <= 0) {\n      return false;\n    }\n    return this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) {\n      return _this.containsScope(scope);\n    });\n  };\n  /**\r\n   * Check if set of scopes contains only the defaults\r\n   */\n  ScopeSet.prototype.containsOnlyOIDCScopes = function () {\n    var _this = this;\n    var defaultScopeCount = 0;\n    OIDC_SCOPES.forEach(function (defaultScope) {\n      if (_this.containsScope(defaultScope)) {\n        defaultScopeCount += 1;\n      }\n    });\n    return this.scopes.size === defaultScopeCount;\n  };\n  /**\r\n   * Appends single scope if passed\r\n   * @param newScope\r\n   */\n  ScopeSet.prototype.appendScope = function (newScope) {\n    if (!StringUtils.isEmpty(newScope)) {\n      this.scopes.add(newScope.trim());\n    }\n  };\n  /**\r\n   * Appends multiple scopes if passed\r\n   * @param newScopes\r\n   */\n  ScopeSet.prototype.appendScopes = function (newScopes) {\n    var _this = this;\n    try {\n      newScopes.forEach(function (newScope) {\n        return _this.appendScope(newScope);\n      });\n    } catch (e) {\n      throw ClientAuthError.createAppendScopeSetError(e);\n    }\n  };\n  /**\r\n   * Removes element from set of scopes.\r\n   * @param scope\r\n   */\n  ScopeSet.prototype.removeScope = function (scope) {\n    if (StringUtils.isEmpty(scope)) {\n      throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\n    }\n    this.scopes.delete(scope.trim());\n  };\n  /**\r\n   * Removes default scopes from set of scopes\r\n   * Primarily used to prevent cache misses if the default scopes are not returned from the server\r\n   */\n  ScopeSet.prototype.removeOIDCScopes = function () {\n    var _this = this;\n    OIDC_SCOPES.forEach(function (defaultScope) {\n      _this.scopes.delete(defaultScope);\n    });\n  };\n  /**\r\n   * Combines an array of scopes with the current set of scopes.\r\n   * @param otherScopes\r\n   */\n  ScopeSet.prototype.unionScopeSets = function (otherScopes) {\n    if (!otherScopes) {\n      throw ClientAuthError.createEmptyInputScopeSetError();\n    }\n    var unionScopes = new Set(); // Iterator in constructor not supported in IE11\n    otherScopes.scopes.forEach(function (scope) {\n      return unionScopes.add(scope.toLowerCase());\n    });\n    this.scopes.forEach(function (scope) {\n      return unionScopes.add(scope.toLowerCase());\n    });\n    return unionScopes;\n  };\n  /**\r\n   * Check if scopes intersect between this set and another.\r\n   * @param otherScopes\r\n   */\n  ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\n    if (!otherScopes) {\n      throw ClientAuthError.createEmptyInputScopeSetError();\n    }\n    // Do not allow OIDC scopes to be the only intersecting scopes\n    if (!otherScopes.containsOnlyOIDCScopes()) {\n      otherScopes.removeOIDCScopes();\n    }\n    var unionScopes = this.unionScopeSets(otherScopes);\n    var sizeOtherScopes = otherScopes.getScopeCount();\n    var sizeThisScopes = this.getScopeCount();\n    var sizeUnionScopes = unionScopes.size;\n    return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n  };\n  /**\r\n   * Returns size of set of scopes.\r\n   */\n  ScopeSet.prototype.getScopeCount = function () {\n    return this.scopes.size;\n  };\n  /**\r\n   * Returns the scopes as an array of string values\r\n   */\n  ScopeSet.prototype.asArray = function () {\n    var array = [];\n    this.scopes.forEach(function (val) {\n      return array.push(val);\n    });\n    return array;\n  };\n  /**\r\n   * Prints scopes into a space-delimited string\r\n   */\n  ScopeSet.prototype.printScopes = function () {\n    if (this.scopes) {\n      var scopeArr = this.asArray();\n      return scopeArr.join(\" \");\n    }\n    return Constants.EMPTY_STRING;\n  };\n  /**\r\n   * Prints scopes into a space-delimited lower-case string (used for caching)\r\n   */\n  ScopeSet.prototype.printScopesLowerCase = function () {\n    return this.printScopes().toLowerCase();\n  };\n  return ScopeSet;\n}();\nexport { ScopeSet };","map":{"version":3,"names":["__spreadArrays","ClientConfigurationError","StringUtils","ClientAuthError","OIDC_SCOPES","Constants","ScopeSet","inputScopes","_this","scopeArr","trimArrayEntries","filteredInput","removeEmptyStringsFromArray","validateInputScopes","scopes","Set","forEach","scope","add","fromString","inputScopeString","scopeString","EMPTY_STRING","split","prototype","length","createEmptyScopesArrayError","containsScope","lowerCaseScopes","printScopesLowerCase","lowerCaseScopesSet","isEmpty","has","toLowerCase","containsScopeSet","scopeSet","size","asArray","every","containsOnlyOIDCScopes","defaultScopeCount","defaultScope","appendScope","newScope","trim","appendScopes","newScopes","e","createAppendScopeSetError","removeScope","createRemoveEmptyScopeFromSetError","delete","removeOIDCScopes","unionScopeSets","otherScopes","createEmptyInputScopeSetError","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","sizeUnionScopes","array","val","push","printScopes","join"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-common/dist/request/ScopeSet.js"],"sourcesContent":["/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\nimport { __spreadArrays } from '../_virtual/_tslib.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { OIDC_SCOPES, Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes) {\r\n        var _this = this;\r\n        // Filter empty string and null/undefined array items\r\n        var scopeArr = inputScopes ? StringUtils.trimArrayEntries(__spreadArrays(inputScopes)) : [];\r\n        var filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach(function (scope) { return _this.scopes.add(scope); });\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    ScopeSet.fromString = function (inputScopeString) {\r\n        var scopeString = inputScopeString || Constants.EMPTY_STRING;\r\n        var inputScopes = scopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        // Check if scopes are required but not given or is an empty array\r\n        if (!inputScopes || inputScopes.length < 1) {\r\n            throw ClientConfigurationError.createEmptyScopesArrayError();\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        var lowerCaseScopes = this.printScopesLowerCase().split(\" \");\r\n        var lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\r\n        // compare lowercase scopes\r\n        return !StringUtils.isEmpty(scope) ? lowerCaseScopesSet.scopes.has(scope.toLowerCase()) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); }));\r\n    };\r\n    /**\r\n     * Check if set of scopes contains only the defaults\r\n     */\r\n    ScopeSet.prototype.containsOnlyOIDCScopes = function () {\r\n        var _this = this;\r\n        var defaultScopeCount = 0;\r\n        OIDC_SCOPES.forEach(function (defaultScope) {\r\n            if (_this.containsScope(defaultScope)) {\r\n                defaultScopeCount += 1;\r\n            }\r\n        });\r\n        return this.scopes.size === defaultScopeCount;\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (!StringUtils.isEmpty(newScope)) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        var _this = this;\r\n        try {\r\n            newScopes.forEach(function (newScope) { return _this.appendScope(newScope); });\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    };\r\n    /**\r\n     * Removes default scopes from set of scopes\r\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\r\n     */\r\n    ScopeSet.prototype.removeOIDCScopes = function () {\r\n        var _this = this;\r\n        OIDC_SCOPES.forEach(function (defaultScope) {\r\n            _this.scopes.delete(defaultScope);\r\n        });\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError();\r\n        }\r\n        var unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach(function (scope) { return unionScopes.add(scope.toLowerCase()); });\r\n        this.scopes.forEach(function (scope) { return unionScopes.add(scope.toLowerCase()); });\r\n        return unionScopes;\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError();\r\n        }\r\n        // Do not allow OIDC scopes to be the only intersecting scopes\r\n        if (!otherScopes.containsOnlyOIDCScopes()) {\r\n            otherScopes.removeOIDCScopes();\r\n        }\r\n        var unionScopes = this.unionScopeSets(otherScopes);\r\n        var sizeOtherScopes = otherScopes.getScopeCount();\r\n        var sizeThisScopes = this.getScopeCount();\r\n        var sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        var array = [];\r\n        this.scopes.forEach(function (val) { return array.push(val); });\r\n        return array;\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return Constants.EMPTY_STRING;\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    ScopeSet.prototype.printScopesLowerCase = function () {\r\n        return this.printScopes().toLowerCase();\r\n    };\r\n    return ScopeSet;\r\n}());\n\nexport { ScopeSet };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}