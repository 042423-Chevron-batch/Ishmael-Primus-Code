{"ast":null,"code":"/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\nvar InteractionRequiredServerErrorMessage = [\"interaction_required\", \"consent_required\", \"login_required\"];\nvar InteractionRequiredAuthSubErrorMessage = [\"message_only\", \"additional_action\", \"basic_action\", \"user_password_expired\", \"consent_required\"];\n/**\r\n * Interaction required errors defined by the SDK\r\n */\nvar InteractionRequiredAuthErrorMessage = {\n  noTokensFoundError: {\n    code: \"no_tokens_found\",\n    desc: \"No refresh token found in the cache. Please sign-in.\"\n  },\n  native_account_unavailable: {\n    code: \"native_account_unavailable\",\n    desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n  }\n};\n/**\r\n * Error thrown when user interaction is required.\r\n */\nvar InteractionRequiredAuthError = /** @class */function (_super) {\n  __extends(InteractionRequiredAuthError, _super);\n  function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\n    var _this = _super.call(this, errorCode, errorMessage, subError) || this;\n    _this.name = \"InteractionRequiredAuthError\";\n    Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\n    return _this;\n  }\n  /**\r\n   * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n   * @param errorCode\r\n   * @param errorString\r\n   * @param subError\r\n   */\n  InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\n    var isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    var isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    var isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some(function (irErrorCode) {\n      return errorString.indexOf(irErrorCode) > -1;\n    });\n    return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n  };\n  /**\r\n   * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n   */\n  InteractionRequiredAuthError.createNoTokensFoundError = function () {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\r\n   * @returns\r\n   */\n  InteractionRequiredAuthError.createNativeAccountUnavailableError = function () {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n  };\n  return InteractionRequiredAuthError;\n}(AuthError);\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage };","map":{"version":3,"names":["__extends","AuthError","InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessage","noTokensFoundError","code","desc","native_account_unavailable","InteractionRequiredAuthError","_super","errorCode","errorMessage","subError","_this","call","name","Object","setPrototypeOf","prototype","isInteractionRequiredError","errorString","isInteractionRequiredErrorCode","indexOf","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","some","irErrorCode","createNoTokensFoundError","createNativeAccountUnavailableError"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.js"],"sourcesContent":["/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\r\nvar InteractionRequiredServerErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\nvar InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n/**\r\n * Interaction required errors defined by the SDK\r\n */\r\nvar InteractionRequiredAuthErrorMessage = {\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No refresh token found in the cache. Please sign-in.\"\r\n    },\r\n    native_account_unavailable: {\r\n        code: \"native_account_unavailable\",\r\n        desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when user interaction is required.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    __extends(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage, subError) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n     * @param errorCode\r\n     * @param errorString\r\n     * @param subError\r\n     */\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\r\n        var isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\r\n        var isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        var isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some(function (irErrorCode) {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    InteractionRequiredAuthError.createNoTokensFoundError = function () {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\r\n     * @returns\r\n     */\r\n    InteractionRequiredAuthError.createNativeAccountUnavailableError = function () {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(AuthError));\n\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,QAAQ,uBAAuB;AACjD,SAASC,SAAS,QAAQ,gBAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,qCAAqC,GAAG,CACxC,sBAAsB,EACtB,kBAAkB,EAClB,gBAAgB,CACnB;AACD,IAAIC,sCAAsC,GAAG,CACzC,cAAc,EACd,mBAAmB,EACnB,cAAc,EACd,uBAAuB,EACvB,kBAAkB,CACrB;AACD;AACA;AACA;AACA,IAAIC,mCAAmC,GAAG;EACtCC,kBAAkB,EAAE;IAChBC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC;EACDC,0BAA0B,EAAE;IACxBF,IAAI,EAAE,4BAA4B;IAClCC,IAAI,EAAE;EACV;AACJ,CAAC;AACD;AACA;AACA;AACA,IAAIE,4BAA4B,GAAG,aAAe,UAAUC,MAAM,EAAE;EAChEV,SAAS,CAACS,4BAA4B,EAAEC,MAAM,CAAC;EAC/C,SAASD,4BAA4BA,CAACE,SAAS,EAAEC,YAAY,EAAEC,QAAQ,EAAE;IACrE,IAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAI,CAAC,IAAI,EAAEJ,SAAS,EAAEC,YAAY,EAAEC,QAAQ,CAAC,IAAI,IAAI;IACxEC,KAAK,CAACE,IAAI,GAAG,8BAA8B;IAC3CC,MAAM,CAACC,cAAc,CAACJ,KAAK,EAAEL,4BAA4B,CAACU,SAAS,CAAC;IACpE,OAAOL,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIL,4BAA4B,CAACW,0BAA0B,GAAG,UAAUT,SAAS,EAAEU,WAAW,EAAER,QAAQ,EAAE;IAClG,IAAIS,8BAA8B,GAAG,CAAC,CAACX,SAAS,IAAIT,qCAAqC,CAACqB,OAAO,CAACZ,SAAS,CAAC,GAAG,CAAC,CAAC;IACjH,IAAIa,6BAA6B,GAAG,CAAC,CAACX,QAAQ,IAAIV,sCAAsC,CAACoB,OAAO,CAACV,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC/G,IAAIY,8BAA8B,GAAG,CAAC,CAACJ,WAAW,IAAInB,qCAAqC,CAACwB,IAAI,CAAC,UAAUC,WAAW,EAAE;MACpH,OAAON,WAAW,CAACE,OAAO,CAACI,WAAW,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC;IACF,OAAOL,8BAA8B,IAAIG,8BAA8B,IAAID,6BAA6B;EAC5G,CAAC;EACD;AACJ;AACA;EACIf,4BAA4B,CAACmB,wBAAwB,GAAG,YAAY;IAChE,OAAO,IAAInB,4BAA4B,CAACL,mCAAmC,CAACC,kBAAkB,CAACC,IAAI,EAAEF,mCAAmC,CAACC,kBAAkB,CAACE,IAAI,CAAC;EACrK,CAAC;EACD;AACJ;AACA;AACA;EACIE,4BAA4B,CAACoB,mCAAmC,GAAG,YAAY;IAC3E,OAAO,IAAIpB,4BAA4B,CAACL,mCAAmC,CAACI,0BAA0B,CAACF,IAAI,EAAEF,mCAAmC,CAACI,0BAA0B,CAACD,IAAI,CAAC;EACrL,CAAC;EACD,OAAOE,4BAA4B;AACvC,CAAC,CAACR,SAAS,CAAE;AAEb,SAASQ,4BAA4B,EAAEL,mCAAmC,EAAED,sCAAsC,EAAED,qCAAqC"},"metadata":{},"sourceType":"module","externalDependencies":[]}