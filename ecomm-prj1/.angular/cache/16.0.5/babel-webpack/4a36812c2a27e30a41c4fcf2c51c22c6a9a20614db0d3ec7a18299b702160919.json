{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { OIDC_DEFAULT_SCOPES, StringUtils, UrlString, Constants, AuthError, ThrottlingUtils, ProtocolUtils, PerformanceEvents } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { EventType } from '../event/EventType.js';\nimport { BrowserConstants, InteractionType, ApiId } from '../utils/BrowserConstants.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\nimport { NativeInteractionClient } from './NativeInteractionClient.js';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar PopupClient = /** @class */function (_super) {\n  __extends(PopupClient, _super);\n  function PopupClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n    var _this = _super.call(this, config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) || this;\n    // Properly sets this reference for the unload event.\n    _this.unloadWindow = _this.unloadWindow.bind(_this);\n    _this.nativeStorage = nativeStorageImpl;\n    return _this;\n  }\n  /**\r\n   * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n   * @param request\r\n   */\n  PopupClient.prototype.acquireToken = function (request) {\n    try {\n      var popupName = this.generatePopupName(request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\n      var popupWindowAttributes = request.popupWindowAttributes || {};\n      // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n      if (this.config.system.asyncPopups) {\n        this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n        // Passes on popup position and dimensions if in request\n        return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\n      } else {\n        // asyncPopups flag is set to false. Opens popup before acquiring token.\n        this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n        var popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n        return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  /**\r\n   * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n   * @param logoutRequest\r\n   */\n  PopupClient.prototype.logout = function (logoutRequest) {\n    try {\n      this.logger.verbose(\"logoutPopup called\");\n      var validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n      var popupName = this.generateLogoutPopupName(validLogoutRequest);\n      var authority = logoutRequest && logoutRequest.authority;\n      var mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n      var popupWindowAttributes = (logoutRequest === null || logoutRequest === void 0 ? void 0 : logoutRequest.popupWindowAttributes) || {};\n      // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n      if (this.config.system.asyncPopups) {\n        this.logger.verbose(\"asyncPopups set to true\");\n        // Passes on popup position and dimensions if in request\n        return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n      } else {\n        // asyncPopups flag is set to false. Opens popup before logging out.\n        this.logger.verbose(\"asyncPopup set to false, opening popup\");\n        var popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n        return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n      }\n    } catch (e) {\n      // Since this function is synchronous we need to reject\n      return Promise.reject(e);\n    }\n  };\n  /**\r\n   * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n   * @param validRequest\r\n   * @param popupName\r\n   * @param popup\r\n   * @param popupWindowAttributes\r\n   *\r\n   * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n   */\n  PopupClient.prototype.acquireTokenPopupAsync = function (request, popupName, popupWindowAttributes, popup) {\n    return __awaiter(this, void 0, void 0, function () {\n      var serverTelemetryManager, validRequest, authCodeRequest, authClient, isNativeBroker, fetchNativeAccountIdMeasurement, navigateUrl, interactionHandler, popupParameters, popupWindow, hash, serverParams, state_1, nativeInteractionClient, userRequestState, result, e_1;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"acquireTokenPopupAsync called\");\n            serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n            return [4 /*yield*/, this.initializeAuthorizationRequest(request, InteractionType.Popup)];\n          case 1:\n            validRequest = _a.sent();\n            this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 8,, 9]);\n            // Create auth code request and generate PKCE params\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\n            return [4 /*yield*/, this.initializeAuthorizationCodeRequest(validRequest)];\n          case 3:\n            authCodeRequest = _a.sent();\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n            return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions)];\n          case 4:\n            authClient = _a.sent();\n            this.logger.verbose(\"Auth code client created\");\n            isNativeBroker = NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\n            fetchNativeAccountIdMeasurement = void 0;\n            if (isNativeBroker) {\n              fetchNativeAccountIdMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\n            }\n            return [4 /*yield*/, authClient.getAuthCodeUrl(__assign(__assign({}, validRequest), {\n              nativeBroker: isNativeBroker\n            }))];\n          case 5:\n            navigateUrl = _a.sent();\n            interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n            popupParameters = {\n              popup: popup,\n              popupName: popupName,\n              popupWindowAttributes: popupWindowAttributes\n            };\n            popupWindow = this.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {\n              popupWindow: popupWindow\n            }, null);\n            return [4 /*yield*/, this.monitorPopupForHash(popupWindow)];\n          case 6:\n            hash = _a.sent();\n            serverParams = UrlString.getDeserializedHash(hash);\n            state_1 = this.validateAndExtractStateFromHash(serverParams, InteractionType.Popup, validRequest.correlationId);\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n            if (serverParams.accountId) {\n              this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n              // end measurement for server call with native brokering enabled\n              if (fetchNativeAccountIdMeasurement) {\n                fetchNativeAccountIdMeasurement.endMeasurement({\n                  success: true,\n                  isNativeBroker: true\n                });\n              }\n              if (!this.nativeMessageHandler) {\n                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n              }\n              nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\n              userRequestState = ProtocolUtils.parseRequestState(this.browserCrypto, state_1).userRequestState;\n              return [2 /*return*/, nativeInteractionClient.acquireToken(__assign(__assign({}, validRequest), {\n                state: userRequestState,\n                prompt: undefined // Server should handle the prompt, ideally native broker can do this part silently\n              })).finally(function () {\n                _this.browserStorage.cleanRequestByState(state_1);\n              })];\n            }\n            return [4 /*yield*/, interactionHandler.handleCodeResponseFromHash(hash, state_1, authClient.authority, this.networkClient)];\n          case 7:\n            result = _a.sent();\n            return [2 /*return*/, result];\n          case 8:\n            e_1 = _a.sent();\n            if (popup) {\n              // Close the synchronous popup if an error is thrown before the window unload event is registered\n              popup.close();\n            }\n            if (e_1 instanceof AuthError) {\n              e_1.setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e_1);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e_1;\n          case 9:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param validRequest\r\n   * @param popupName\r\n   * @param requestAuthority\r\n   * @param popup\r\n   * @param mainWindowRedirectUri\r\n   * @param popupWindowAttributes\r\n   */\n  PopupClient.prototype.logoutPopupAsync = function (validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\n    return __awaiter(this, void 0, void 0, function () {\n      var serverTelemetryManager, authClient, logoutUri, popupWindow, navigationOptions, absoluteUrl, e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"logoutPopupAsync called\");\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n            serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 5,, 6]);\n            // Clear cache on logout\n            return [4 /*yield*/, this.clearCacheOnLogout(validRequest.account)];\n          case 2:\n            // Clear cache on logout\n            _a.sent();\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, validRequest.correlationId);\n            return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, requestAuthority)];\n          case 3:\n            authClient = _a.sent();\n            this.logger.verbose(\"Auth code client created\");\n            logoutUri = authClient.getLogoutUri(validRequest);\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n            popupWindow = this.openPopup(logoutUri, {\n              popupName: popupName,\n              popupWindowAttributes: popupWindowAttributes,\n              popup: popup\n            });\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {\n              popupWindow: popupWindow\n            }, null);\n            return [4 /*yield*/, this.waitForLogoutPopup(popupWindow)];\n          case 4:\n            _a.sent();\n            if (mainWindowRedirectUri) {\n              navigationOptions = {\n                apiId: ApiId.logoutPopup,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false\n              };\n              absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\n              this.logger.verbose(\"Redirecting main window to url specified in the request\");\n              this.logger.verbosePii(\"Redirecting main window to: \" + absoluteUrl);\n              this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            } else {\n              this.logger.verbose(\"No main window navigation requested\");\n            }\n            return [3 /*break*/, 6];\n          case 5:\n            e_2 = _a.sent();\n            if (popup) {\n              // Close the synchronous popup if an error is thrown before the window unload event is registered\n              popup.close();\n            }\n            if (e_2 instanceof AuthError) {\n              e_2.setCorrelationId(this.correlationId);\n            }\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e_2);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            serverTelemetryManager.cacheFailedRequest(e_2);\n            throw e_2;\n          case 6:\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Opens a popup window with given request Url.\r\n   * @param requestUrl\r\n   */\n  PopupClient.prototype.initiateAuthRequest = function (requestUrl, params) {\n    // Check that request url is not empty.\n    if (!StringUtils.isEmpty(requestUrl)) {\n      this.logger.infoPii(\"Navigate to: \" + requestUrl);\n      // Open the popup window to requestUrl.\n      return this.openPopup(requestUrl, params);\n    } else {\n      // Throw error if request URL is empty.\n      this.logger.error(\"Navigate url is empty\");\n      throw BrowserAuthError.createEmptyNavigationUriError();\n    }\n  };\n  /**\r\n   * Monitors a window until it loads a url with the same origin.\r\n   * @param popupWindow - window that is being monitored\r\n   * @param timeout - timeout for processing hash once popup is redirected back to application\r\n   */\n  PopupClient.prototype.monitorPopupForHash = function (popupWindow) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      /*\r\n       * Polling for popups needs to be tick-based,\r\n       * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\r\n       */\n      var maxTicks = _this.config.system.windowHashTimeout / _this.config.system.pollIntervalMilliseconds;\n      var ticks = 0;\n      _this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\n      var intervalId = setInterval(function () {\n        // Window is closed\n        if (popupWindow.closed) {\n          _this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\n          _this.cleanPopup();\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createUserCancelledError());\n          return;\n        }\n        var href = Constants.EMPTY_STRING;\n        var hash = Constants.EMPTY_STRING;\n        try {\n          /*\r\n           * Will throw if cross origin,\r\n           * which should be caught and ignored\r\n           * since we need the interval to keep running while on STS UI.\r\n           */\n          href = popupWindow.location.href;\n          hash = popupWindow.location.hash;\n        } catch (e) {}\n        // Don't process blank pages or cross domain\n        if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n          return;\n        }\n        _this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\n        /*\r\n         * Only run clock when we are on same domain for popups\r\n         * as popup operations can take a long time.\r\n         */\n        ticks++;\n        if (hash) {\n          _this.logger.verbose(\"PopupHandler.monitorPopupForHash - found hash in url\");\n          clearInterval(intervalId);\n          _this.cleanPopup(popupWindow);\n          if (UrlString.hashContainsKnownProperties(hash)) {\n            _this.logger.verbose(\"PopupHandler.monitorPopupForHash - hash contains known properties, returning.\");\n            resolve(hash);\n          } else {\n            _this.logger.error(\"PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely.\");\n            _this.logger.errorPii(\"PopupHandler.monitorPopupForHash - hash found: \" + hash);\n            reject(BrowserAuthError.createHashDoesNotContainKnownPropertiesError());\n          }\n        } else if (ticks > maxTicks) {\n          _this.logger.error(\"PopupHandler.monitorPopupForHash - unable to find hash in url, timing out\");\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createMonitorPopupTimeoutError());\n        }\n      }, _this.config.system.pollIntervalMilliseconds);\n    });\n  };\n  /**\r\n   * Waits for user interaction in logout popup window\r\n   * @param popupWindow\r\n   * @returns\r\n   */\n  PopupClient.prototype.waitForLogoutPopup = function (popupWindow) {\n    var _this = this;\n    return new Promise(function (resolve) {\n      _this.logger.verbose(\"PopupHandler.waitForLogoutPopup - polling started\");\n      var intervalId = setInterval(function () {\n        // Window is closed\n        if (popupWindow.closed) {\n          _this.logger.error(\"PopupHandler.waitForLogoutPopup - window closed\");\n          _this.cleanPopup();\n          clearInterval(intervalId);\n          resolve();\n        }\n        var href = Constants.EMPTY_STRING;\n        try {\n          /*\r\n           * Will throw if cross origin,\r\n           * which should be caught and ignored\r\n           * since we need the interval to keep running while on STS UI.\r\n           */\n          href = popupWindow.location.href;\n        } catch (e) {}\n        // Don't process blank pages or cross domain\n        if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n          return;\n        }\n        _this.logger.verbose(\"PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing.\");\n        clearInterval(intervalId);\n        _this.cleanPopup(popupWindow);\n        resolve();\n      }, _this.config.system.pollIntervalMilliseconds);\n    });\n  };\n  /**\r\n   * @hidden\r\n   *\r\n   * Configures popup window for login.\r\n   *\r\n   * @param urlNavigate\r\n   * @param title\r\n   * @param popUpWidth\r\n   * @param popUpHeight\r\n   * @param popupWindowAttributes\r\n   * @ignore\r\n   * @hidden\r\n   */\n  PopupClient.prototype.openPopup = function (urlNavigate, popupParams) {\n    try {\n      var popupWindow = void 0;\n      // Popup window passed in, setting url to navigate to\n      if (popupParams.popup) {\n        popupWindow = popupParams.popup;\n        this.logger.verbosePii(\"Navigating popup window to: \" + urlNavigate);\n        popupWindow.location.assign(urlNavigate);\n      } else if (typeof popupParams.popup === \"undefined\") {\n        // Popup will be undefined if it was not passed in\n        this.logger.verbosePii(\"Opening popup window to: \" + urlNavigate);\n        popupWindow = this.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes);\n      }\n      // Popup will be null if popups are blocked\n      if (!popupWindow) {\n        throw BrowserAuthError.createEmptyWindowCreatedError();\n      }\n      if (popupWindow.focus) {\n        popupWindow.focus();\n      }\n      this.currentWindow = popupWindow;\n      window.addEventListener(\"beforeunload\", this.unloadWindow);\n      return popupWindow;\n    } catch (e) {\n      this.logger.error(\"error opening popup \" + e.message);\n      this.browserStorage.setInteractionInProgress(false);\n      throw BrowserAuthError.createPopupWindowError(e.toString());\n    }\n  };\n  /**\r\n   * Helper function to set popup window dimensions and position\r\n   * @param urlNavigate\r\n   * @param popupName\r\n   * @param popupWindowAttributes\r\n   * @returns\r\n   */\n  PopupClient.prototype.openSizedPopup = function (urlNavigate, popupName, popupWindowAttributes) {\n    var _a, _b, _c, _d;\n    /**\r\n     * adding winLeft and winTop to account for dual monitor\r\n     * using screenLeft and screenTop for IE8 and earlier\r\n     */\n    var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n    var winTop = window.screenTop ? window.screenTop : window.screenY;\n    /**\r\n     * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n     * using document.documentElement.clientWidth for IE8 and earlier\r\n     */\n    var winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    var winHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    var width = (_a = popupWindowAttributes.popupSize) === null || _a === void 0 ? void 0 : _a.width;\n    var height = (_b = popupWindowAttributes.popupSize) === null || _b === void 0 ? void 0 : _b.height;\n    var top = (_c = popupWindowAttributes.popupPosition) === null || _c === void 0 ? void 0 : _c.top;\n    var left = (_d = popupWindowAttributes.popupPosition) === null || _d === void 0 ? void 0 : _d.left;\n    if (!width || width < 0 || width > winWidth) {\n      this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\n      width = BrowserConstants.POPUP_WIDTH;\n    }\n    if (!height || height < 0 || height > winHeight) {\n      this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\n      height = BrowserConstants.POPUP_HEIGHT;\n    }\n    if (!top || top < 0 || top > winHeight) {\n      this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\n      top = Math.max(0, winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop);\n    }\n    if (!left || left < 0 || left > winWidth) {\n      this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\n      left = Math.max(0, winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft);\n    }\n    return window.open(urlNavigate, popupName, \"width=\" + width + \", height=\" + height + \", top=\" + top + \", left=\" + left + \", scrollbars=yes\");\n  };\n  /**\r\n   * Event callback to unload main window.\r\n   */\n  PopupClient.prototype.unloadWindow = function (e) {\n    this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\n    if (this.currentWindow) {\n      this.currentWindow.close();\n    }\n    // Guarantees browser unload will happen, so no other errors will be thrown.\n    e.preventDefault();\n  };\n  /**\r\n   * Closes popup, removes any state vars created during popup calls.\r\n   * @param popupWindow\r\n   */\n  PopupClient.prototype.cleanPopup = function (popupWindow) {\n    if (popupWindow) {\n      // Close window.\n      popupWindow.close();\n    }\n    // Remove window unload function\n    window.removeEventListener(\"beforeunload\", this.unloadWindow);\n    // Interaction is completed - remove interaction status.\n    this.browserStorage.setInteractionInProgress(false);\n  };\n  /**\r\n   * Generates the name for the popup based on the client id and request\r\n   * @param clientId\r\n   * @param request\r\n   */\n  PopupClient.prototype.generatePopupName = function (scopes, authority) {\n    return BrowserConstants.POPUP_NAME_PREFIX + \".\" + this.config.auth.clientId + \".\" + scopes.join(\"-\") + \".\" + authority + \".\" + this.correlationId;\n  };\n  /**\r\n   * Generates the name for the popup based on the client id and request for logouts\r\n   * @param clientId\r\n   * @param request\r\n   */\n  PopupClient.prototype.generateLogoutPopupName = function (request) {\n    var homeAccountId = request.account && request.account.homeAccountId;\n    return BrowserConstants.POPUP_NAME_PREFIX + \".\" + this.config.auth.clientId + \".\" + homeAccountId + \".\" + this.correlationId;\n  };\n  return PopupClient;\n}(StandardInteractionClient);\nexport { PopupClient };","map":{"version":3,"names":["__extends","__awaiter","__generator","__assign","OIDC_DEFAULT_SCOPES","StringUtils","UrlString","Constants","AuthError","ThrottlingUtils","ProtocolUtils","PerformanceEvents","StandardInteractionClient","EventType","BrowserConstants","InteractionType","ApiId","BrowserUtils","NativeInteractionClient","NativeMessageHandler","BrowserAuthError","InteractionHandler","PopupClient","_super","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","performanceClient","nativeStorageImpl","nativeMessageHandler","correlationId","_this","call","unloadWindow","bind","nativeStorage","prototype","acquireToken","request","popupName","generatePopupName","scopes","authority","auth","popupWindowAttributes","system","asyncPopups","verbose","acquireTokenPopupAsync","popup","openSizedPopup","e","Promise","reject","logout","logoutRequest","validLogoutRequest","initializeLogoutRequest","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","undefined","serverTelemetryManager","validRequest","authCodeRequest","authClient","isNativeBroker","fetchNativeAccountIdMeasurement","navigateUrl","interactionHandler","popupParameters","popupWindow","hash","serverParams","state_1","nativeInteractionClient","userRequestState","result","e_1","_a","label","initializeServerTelemetryManager","acquireTokenPopup","setPreQueueTime","StandardInteractionClientInitializeAuthorizationRequest","initializeAuthorizationRequest","Popup","sent","browserStorage","updateCacheEntries","state","nonce","loginHint","EMPTY_STRING","account","trys","push","StandardInteractionClientInitializeAuthorizationCodeRequest","initializeAuthorizationCodeRequest","StandardInteractionClientCreateAuthCodeClient","createAuthCodeClient","azureCloudOptions","isNativeAvailable","authenticationScheme","startMeasurement","FetchAccountIdWithNativeBroker","getAuthCodeUrl","nativeBroker","initiateAuthRequest","emitEvent","POPUP_OPENED","monitorPopupForHash","getDeserializedHash","validateAndExtractStateFromHash","removeThrottle","clientId","accountId","endMeasurement","success","createNativeConnectionNotEstablishedError","parseRequestState","prompt","finally","cleanRequestByState","handleCodeResponseFromHash","networkClient","close","setCorrelationId","cacheFailedRequest","requestAuthority","logoutUri","navigationOptions","absoluteUrl","e_2","LOGOUT_START","logoutPopup","clearCacheOnLogout","getLogoutUri","LOGOUT_SUCCESS","openPopup","waitForLogoutPopup","apiId","timeout","redirectNavigationTimeout","noHistory","getAbsoluteUrl","getCurrentUri","verbosePii","navigateInternal","setInteractionInProgress","LOGOUT_FAILURE","LOGOUT_END","requestUrl","params","isEmpty","infoPii","error","createEmptyNavigationUriError","resolve","maxTicks","windowHashTimeout","pollIntervalMilliseconds","ticks","intervalId","setInterval","closed","cleanPopup","clearInterval","createUserCancelledError","href","location","hashContainsKnownProperties","errorPii","createHashDoesNotContainKnownPropertiesError","createMonitorPopupTimeoutError","urlNavigate","popupParams","assign","createEmptyWindowCreatedError","focus","currentWindow","window","addEventListener","message","createPopupWindowError","toString","_b","_c","_d","winLeft","screenLeft","screenX","winTop","screenTop","screenY","winWidth","innerWidth","document","documentElement","clientWidth","body","winHeight","innerHeight","clientHeight","width","popupSize","height","top","popupPosition","left","POPUP_WIDTH","POPUP_HEIGHT","Math","max","open","cleanRequestByInteractionType","preventDefault","removeEventListener","POPUP_NAME_PREFIX","join","homeAccountId"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { OIDC_DEFAULT_SCOPES, StringUtils, UrlString, Constants, AuthError, ThrottlingUtils, ProtocolUtils, PerformanceEvents } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { EventType } from '../event/EventType.js';\nimport { BrowserConstants, InteractionType, ApiId } from '../utils/BrowserConstants.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\nimport { NativeInteractionClient } from './NativeInteractionClient.js';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar PopupClient = /** @class */ (function (_super) {\r\n    __extends(PopupClient, _super);\r\n    function PopupClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        var _this = _super.call(this, config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) || this;\r\n        // Properly sets this reference for the unload event.\r\n        _this.unloadWindow = _this.unloadWindow.bind(_this);\r\n        _this.nativeStorage = nativeStorageImpl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n     * @param request\r\n     */\r\n    PopupClient.prototype.acquireToken = function (request) {\r\n        try {\r\n            var popupName = this.generatePopupName(request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\r\n            var popupWindowAttributes = request.popupWindowAttributes || {};\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\r\n                var popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\r\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    PopupClient.prototype.logout = function (logoutRequest) {\r\n        try {\r\n            this.logger.verbose(\"logoutPopup called\");\r\n            var validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n            var popupName = this.generateLogoutPopupName(validLogoutRequest);\r\n            var authority = logoutRequest && logoutRequest.authority;\r\n            var mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\r\n            var popupWindowAttributes = (logoutRequest === null || logoutRequest === void 0 ? void 0 : logoutRequest.popupWindowAttributes) || {};\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before logging out.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\r\n                var popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\r\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Since this function is synchronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    /**\r\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param popup\r\n     * @param popupWindowAttributes\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    PopupClient.prototype.acquireTokenPopupAsync = function (request, popupName, popupWindowAttributes, popup) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serverTelemetryManager, validRequest, authCodeRequest, authClient, isNativeBroker, fetchNativeAccountIdMeasurement, navigateUrl, interactionHandler, popupParameters, popupWindow, hash, serverParams, state_1, nativeInteractionClient, userRequestState, result, e_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"acquireTokenPopupAsync called\");\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\r\n                        return [4 /*yield*/, this.initializeAuthorizationRequest(request, InteractionType.Popup)];\r\n                    case 1:\r\n                        validRequest = _a.sent();\r\n                        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 8, , 9]);\r\n                        // Create auth code request and generate PKCE params\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(validRequest)];\r\n                    case 3:\r\n                        authCodeRequest = _a.sent();\r\n                        // Initialize the client\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions)];\r\n                    case 4:\r\n                        authClient = _a.sent();\r\n                        this.logger.verbose(\"Auth code client created\");\r\n                        isNativeBroker = NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\r\n                        fetchNativeAccountIdMeasurement = void 0;\r\n                        if (isNativeBroker) {\r\n                            fetchNativeAccountIdMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\r\n                        }\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(__assign(__assign({}, validRequest), { nativeBroker: isNativeBroker }))];\r\n                    case 5:\r\n                        navigateUrl = _a.sent();\r\n                        interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n                        popupParameters = {\r\n                            popup: popup,\r\n                            popupName: popupName,\r\n                            popupWindowAttributes: popupWindowAttributes\r\n                        };\r\n                        popupWindow = this.initiateAuthRequest(navigateUrl, popupParameters);\r\n                        this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow: popupWindow }, null);\r\n                        return [4 /*yield*/, this.monitorPopupForHash(popupWindow)];\r\n                    case 6:\r\n                        hash = _a.sent();\r\n                        serverParams = UrlString.getDeserializedHash(hash);\r\n                        state_1 = this.validateAndExtractStateFromHash(serverParams, InteractionType.Popup, validRequest.correlationId);\r\n                        // Remove throttle if it exists\r\n                        ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\r\n                        if (serverParams.accountId) {\r\n                            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n                            // end measurement for server call with native brokering enabled\r\n                            if (fetchNativeAccountIdMeasurement) {\r\n                                fetchNativeAccountIdMeasurement.endMeasurement({\r\n                                    success: true,\r\n                                    isNativeBroker: true\r\n                                });\r\n                            }\r\n                            if (!this.nativeMessageHandler) {\r\n                                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\r\n                            }\r\n                            nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\r\n                            userRequestState = ProtocolUtils.parseRequestState(this.browserCrypto, state_1).userRequestState;\r\n                            return [2 /*return*/, nativeInteractionClient.acquireToken(__assign(__assign({}, validRequest), { state: userRequestState, prompt: undefined // Server should handle the prompt, ideally native broker can do this part silently\r\n                                 })).finally(function () {\r\n                                    _this.browserStorage.cleanRequestByState(state_1);\r\n                                })];\r\n                        }\r\n                        return [4 /*yield*/, interactionHandler.handleCodeResponseFromHash(hash, state_1, authClient.authority, this.networkClient)];\r\n                    case 7:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                    case 8:\r\n                        e_1 = _a.sent();\r\n                        if (popup) {\r\n                            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n                            popup.close();\r\n                        }\r\n                        if (e_1 instanceof AuthError) {\r\n                            e_1.setCorrelationId(this.correlationId);\r\n                        }\r\n                        serverTelemetryManager.cacheFailedRequest(e_1);\r\n                        this.browserStorage.cleanRequestByState(validRequest.state);\r\n                        throw e_1;\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param requestAuthority\r\n     * @param popup\r\n     * @param mainWindowRedirectUri\r\n     * @param popupWindowAttributes\r\n     */\r\n    PopupClient.prototype.logoutPopupAsync = function (validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serverTelemetryManager, authClient, logoutUri, popupWindow, navigationOptions, absoluteUrl, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"logoutPopupAsync called\");\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, , 6]);\r\n                        // Clear cache on logout\r\n                        return [4 /*yield*/, this.clearCacheOnLogout(validRequest.account)];\r\n                    case 2:\r\n                        // Clear cache on logout\r\n                        _a.sent();\r\n                        // Initialize the client\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, validRequest.correlationId);\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, requestAuthority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        this.logger.verbose(\"Auth code client created\");\r\n                        logoutUri = authClient.getLogoutUri(validRequest);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\r\n                        popupWindow = this.openPopup(logoutUri, { popupName: popupName, popupWindowAttributes: popupWindowAttributes, popup: popup });\r\n                        this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow: popupWindow }, null);\r\n                        return [4 /*yield*/, this.waitForLogoutPopup(popupWindow)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        if (mainWindowRedirectUri) {\r\n                            navigationOptions = {\r\n                                apiId: ApiId.logoutPopup,\r\n                                timeout: this.config.system.redirectNavigationTimeout,\r\n                                noHistory: false\r\n                            };\r\n                            absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\r\n                            this.logger.verbose(\"Redirecting main window to url specified in the request\");\r\n                            this.logger.verbosePii(\"Redirecting main window to: \" + absoluteUrl);\r\n                            this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n                        }\r\n                        else {\r\n                            this.logger.verbose(\"No main window navigation requested\");\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_2 = _a.sent();\r\n                        if (popup) {\r\n                            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n                            popup.close();\r\n                        }\r\n                        if (e_2 instanceof AuthError) {\r\n                            e_2.setCorrelationId(this.correlationId);\r\n                        }\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e_2);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n                        serverTelemetryManager.cacheFailedRequest(e_2);\r\n                        throw e_2;\r\n                    case 6:\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    PopupClient.prototype.initiateAuthRequest = function (requestUrl, params) {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            this.logger.infoPii(\"Navigate to: \" + requestUrl);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, params);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    };\r\n    /**\r\n     * Monitors a window until it loads a url with the same origin.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - timeout for processing hash once popup is redirected back to application\r\n     */\r\n    PopupClient.prototype.monitorPopupForHash = function (popupWindow) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            /*\r\n             * Polling for popups needs to be tick-based,\r\n             * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\r\n             */\r\n            var maxTicks = _this.config.system.windowHashTimeout / _this.config.system.pollIntervalMilliseconds;\r\n            var ticks = 0;\r\n            _this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\r\n            var intervalId = setInterval(function () {\r\n                // Window is closed\r\n                if (popupWindow.closed) {\r\n                    _this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\r\n                    _this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n                var href = Constants.EMPTY_STRING;\r\n                var hash = Constants.EMPTY_STRING;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                    hash = popupWindow.location.hash;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (StringUtils.isEmpty(href) || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                _this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\r\n                /*\r\n                 * Only run clock when we are on same domain for popups\r\n                 * as popup operations can take a long time.\r\n                 */\r\n                ticks++;\r\n                if (hash) {\r\n                    _this.logger.verbose(\"PopupHandler.monitorPopupForHash - found hash in url\");\r\n                    clearInterval(intervalId);\r\n                    _this.cleanPopup(popupWindow);\r\n                    if (UrlString.hashContainsKnownProperties(hash)) {\r\n                        _this.logger.verbose(\"PopupHandler.monitorPopupForHash - hash contains known properties, returning.\");\r\n                        resolve(hash);\r\n                    }\r\n                    else {\r\n                        _this.logger.error(\"PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely.\");\r\n                        _this.logger.errorPii(\"PopupHandler.monitorPopupForHash - hash found: \" + hash);\r\n                        reject(BrowserAuthError.createHashDoesNotContainKnownPropertiesError());\r\n                    }\r\n                }\r\n                else if (ticks > maxTicks) {\r\n                    _this.logger.error(\"PopupHandler.monitorPopupForHash - unable to find hash in url, timing out\");\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorPopupTimeoutError());\r\n                }\r\n            }, _this.config.system.pollIntervalMilliseconds);\r\n        });\r\n    };\r\n    /**\r\n     * Waits for user interaction in logout popup window\r\n     * @param popupWindow\r\n     * @returns\r\n     */\r\n    PopupClient.prototype.waitForLogoutPopup = function (popupWindow) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.logger.verbose(\"PopupHandler.waitForLogoutPopup - polling started\");\r\n            var intervalId = setInterval(function () {\r\n                // Window is closed\r\n                if (popupWindow.closed) {\r\n                    _this.logger.error(\"PopupHandler.waitForLogoutPopup - window closed\");\r\n                    _this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    resolve();\r\n                }\r\n                var href = Constants.EMPTY_STRING;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (StringUtils.isEmpty(href) || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                _this.logger.verbose(\"PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing.\");\r\n                clearInterval(intervalId);\r\n                _this.cleanPopup(popupWindow);\r\n                resolve();\r\n            }, _this.config.system.pollIntervalMilliseconds);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @param popupWindowAttributes\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    PopupClient.prototype.openPopup = function (urlNavigate, popupParams) {\r\n        try {\r\n            var popupWindow = void 0;\r\n            // Popup window passed in, setting url to navigate to\r\n            if (popupParams.popup) {\r\n                popupWindow = popupParams.popup;\r\n                this.logger.verbosePii(\"Navigating popup window to: \" + urlNavigate);\r\n                popupWindow.location.assign(urlNavigate);\r\n            }\r\n            else if (typeof popupParams.popup === \"undefined\") {\r\n                // Popup will be undefined if it was not passed in\r\n                this.logger.verbosePii(\"Opening popup window to: \" + urlNavigate);\r\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes);\r\n            }\r\n            // Popup will be null if popups are blocked\r\n            if (!popupWindow) {\r\n                throw BrowserAuthError.createEmptyWindowCreatedError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw BrowserAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    };\r\n    /**\r\n     * Helper function to set popup window dimensions and position\r\n     * @param urlNavigate\r\n     * @param popupName\r\n     * @param popupWindowAttributes\r\n     * @returns\r\n     */\r\n    PopupClient.prototype.openSizedPopup = function (urlNavigate, popupName, popupWindowAttributes) {\r\n        var _a, _b, _c, _d;\r\n        /**\r\n         * adding winLeft and winTop to account for dual monitor\r\n         * using screenLeft and screenTop for IE8 and earlier\r\n         */\r\n        var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n        var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n        /**\r\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n         * using document.documentElement.clientWidth for IE8 and earlier\r\n         */\r\n        var winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n        var winHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n        var width = (_a = popupWindowAttributes.popupSize) === null || _a === void 0 ? void 0 : _a.width;\r\n        var height = (_b = popupWindowAttributes.popupSize) === null || _b === void 0 ? void 0 : _b.height;\r\n        var top = (_c = popupWindowAttributes.popupPosition) === null || _c === void 0 ? void 0 : _c.top;\r\n        var left = (_d = popupWindowAttributes.popupPosition) === null || _d === void 0 ? void 0 : _d.left;\r\n        if (!width || width < 0 || width > winWidth) {\r\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\r\n            width = BrowserConstants.POPUP_WIDTH;\r\n        }\r\n        if (!height || height < 0 || height > winHeight) {\r\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\r\n            height = BrowserConstants.POPUP_HEIGHT;\r\n        }\r\n        if (!top || top < 0 || top > winHeight) {\r\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\r\n            top = Math.max(0, ((winHeight / 2) - (BrowserConstants.POPUP_HEIGHT / 2)) + winTop);\r\n        }\r\n        if (!left || left < 0 || left > winWidth) {\r\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\r\n            left = Math.max(0, ((winWidth / 2) - (BrowserConstants.POPUP_WIDTH / 2)) + winLeft);\r\n        }\r\n        return window.open(urlNavigate, popupName, \"width=\" + width + \", height=\" + height + \", top=\" + top + \", left=\" + left + \", scrollbars=yes\");\r\n    };\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    PopupClient.prototype.unloadWindow = function (e) {\r\n        this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\r\n        if (this.currentWindow) {\r\n            this.currentWindow.close();\r\n        }\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        e.preventDefault();\r\n    };\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    PopupClient.prototype.cleanPopup = function (popupWindow) {\r\n        if (popupWindow) {\r\n            // Close window.\r\n            popupWindow.close();\r\n        }\r\n        // Remove window unload function\r\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n    };\r\n    /**\r\n     * Generates the name for the popup based on the client id and request\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    PopupClient.prototype.generatePopupName = function (scopes, authority) {\r\n        return BrowserConstants.POPUP_NAME_PREFIX + \".\" + this.config.auth.clientId + \".\" + scopes.join(\"-\") + \".\" + authority + \".\" + this.correlationId;\r\n    };\r\n    /**\r\n     * Generates the name for the popup based on the client id and request for logouts\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    PopupClient.prototype.generateLogoutPopupName = function (request) {\r\n        var homeAccountId = request.account && request.account.homeAccountId;\r\n        return BrowserConstants.POPUP_NAME_PREFIX + \".\" + this.config.auth.clientId + \".\" + homeAccountId + \".\" + this.correlationId;\r\n    };\r\n    return PopupClient;\r\n}(StandardInteractionClient));\n\nexport { PopupClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}