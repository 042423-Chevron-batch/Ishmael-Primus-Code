{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy\";\nimport { retryPolicy } from \"./retryPolicy\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants\";\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nexport const exponentialRetryPolicyName = \"exponentialRetryPolicy\";\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nexport function exponentialRetryPolicy(options = {}) {\n  var _a;\n  return retryPolicy([exponentialRetryStrategy(Object.assign(Object.assign({}, options), {\n    ignoreSystemErrors: true\n  }))], {\n    maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT\n  });\n}","map":{"version":3,"names":["exponentialRetryStrategy","retryPolicy","DEFAULT_RETRY_POLICY_COUNT","exponentialRetryPolicyName","exponentialRetryPolicy","options","_a","Object","assign","ignoreSystemErrors","maxRetries"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/exponentialRetryPolicy.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy\";\nimport { retryPolicy } from \"./retryPolicy\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants\";\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nexport const exponentialRetryPolicyName = \"exponentialRetryPolicy\";\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nexport function exponentialRetryPolicy(options = {}) {\n    var _a;\n    return retryPolicy([\n        exponentialRetryStrategy(Object.assign(Object.assign({}, options), { ignoreSystemErrors: true })),\n    ], {\n        maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT,\n    });\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,wBAAwB,QAAQ,6CAA6C;AACtF,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,0BAA0B,QAAQ,cAAc;AACzD;AACA;AACA;AACA,OAAO,MAAMC,0BAA0B,GAAG,wBAAwB;AAClE;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;EACjD,IAAIC,EAAE;EACN,OAAOL,WAAW,CAAC,CACfD,wBAAwB,CAACO,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,OAAO,CAAC,EAAE;IAAEI,kBAAkB,EAAE;EAAK,CAAC,CAAC,CAAC,CACpG,EAAE;IACCC,UAAU,EAAE,CAACJ,EAAE,GAAGD,OAAO,CAACK,UAAU,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGJ;EAC3E,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}