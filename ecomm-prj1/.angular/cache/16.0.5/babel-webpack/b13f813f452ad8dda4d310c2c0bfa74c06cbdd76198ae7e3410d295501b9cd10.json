{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst TVP_ROW_TOKEN = Buffer.from([0x01]);\nconst TVP_END_TOKEN = Buffer.from([0x00]);\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst TVP = {\n  id: 0xF3,\n  type: 'TVPTYPE',\n  name: 'TVP',\n  declaration: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    return value.name + ' readonly';\n  },\n  generateTypeInfo(parameter) {\n    var _parameter$value, _parameter$value2;\n    const databaseName = '';\n    const schema = ((_parameter$value = parameter.value) === null || _parameter$value === void 0 ? void 0 : _parameter$value.schema) ?? '';\n    const typeName = ((_parameter$value2 = parameter.value) === null || _parameter$value2 === void 0 ? void 0 : _parameter$value2.name) ?? '';\n    const bufferLength = 1 + 1 + Buffer.byteLength(databaseName, 'ucs2') + 1 + Buffer.byteLength(schema, 'ucs2') + 1 + Buffer.byteLength(typeName, 'ucs2');\n    const buffer = new _writableTrackingBuffer.default(bufferLength, 'ucs2');\n    buffer.writeUInt8(this.id);\n    buffer.writeBVarchar(databaseName);\n    buffer.writeBVarchar(schema);\n    buffer.writeBVarchar(typeName);\n    return buffer.data;\n  },\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    const {\n      columns\n    } = parameter.value;\n    const buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(columns.length, 0);\n    return buffer;\n  },\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      yield TVP_END_TOKEN;\n      yield TVP_END_TOKEN;\n      return;\n    }\n    const {\n      columns,\n      rows\n    } = parameter.value;\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const column = columns[i];\n      const buff = Buffer.alloc(6); // UserType\n\n      buff.writeUInt32LE(0x00000000, 0); // Flags\n\n      buff.writeUInt16LE(0x0000, 4);\n      yield buff; // TYPE_INFO\n\n      yield column.type.generateTypeInfo(column); // ColName\n\n      yield Buffer.from([0x00]);\n    }\n    yield TVP_END_TOKEN;\n    for (let i = 0, length = rows.length; i < length; i++) {\n      yield TVP_ROW_TOKEN;\n      const row = rows[i];\n      for (let k = 0, len2 = row.length; k < len2; k++) {\n        const column = columns[k];\n        const value = row[k];\n        const param = {\n          value: column.type.validate(value, parameter.collation),\n          length: column.length,\n          scale: column.scale,\n          precision: column.precision\n        }; // TvpColumnData\n\n        yield column.type.generateParameterLength(param, options);\n        yield* column.type.generateParameterData(param, options);\n      }\n    }\n    yield TVP_END_TOKEN;\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n    if (typeof value !== 'object') {\n      throw new TypeError('Invalid table.');\n    }\n    if (!Array.isArray(value.columns)) {\n      throw new TypeError('Invalid table.');\n    }\n    if (!Array.isArray(value.rows)) {\n      throw new TypeError('Invalid table.');\n    }\n    return value;\n  }\n};\nvar _default = TVP;\nexports.default = _default;\nmodule.exports = TVP;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_writableTrackingBuffer","_interopRequireDefault","require","obj","__esModule","TVP_ROW_TOKEN","Buffer","from","TVP_END_TOKEN","NULL_LENGTH","TVP","id","type","name","declaration","parameter","generateTypeInfo","_parameter$value","_parameter$value2","databaseName","schema","typeName","bufferLength","byteLength","buffer","writeUInt8","writeBVarchar","data","generateParameterLength","options","columns","alloc","writeUInt16LE","length","generateParameterData","rows","i","len","column","buff","writeUInt32LE","row","k","len2","param","validate","collation","scale","precision","TypeError","Array","isArray","_default","module"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/tedious/lib/data-types/tvp.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst TVP_ROW_TOKEN = Buffer.from([0x01]);\nconst TVP_END_TOKEN = Buffer.from([0x00]);\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst TVP = {\n  id: 0xF3,\n  type: 'TVPTYPE',\n  name: 'TVP',\n  declaration: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    return value.name + ' readonly';\n  },\n\n  generateTypeInfo(parameter) {\n    var _parameter$value, _parameter$value2;\n\n    const databaseName = '';\n    const schema = ((_parameter$value = parameter.value) === null || _parameter$value === void 0 ? void 0 : _parameter$value.schema) ?? '';\n    const typeName = ((_parameter$value2 = parameter.value) === null || _parameter$value2 === void 0 ? void 0 : _parameter$value2.name) ?? '';\n    const bufferLength = 1 + 1 + Buffer.byteLength(databaseName, 'ucs2') + 1 + Buffer.byteLength(schema, 'ucs2') + 1 + Buffer.byteLength(typeName, 'ucs2');\n    const buffer = new _writableTrackingBuffer.default(bufferLength, 'ucs2');\n    buffer.writeUInt8(this.id);\n    buffer.writeBVarchar(databaseName);\n    buffer.writeBVarchar(schema);\n    buffer.writeBVarchar(typeName);\n    return buffer.data;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const {\n      columns\n    } = parameter.value;\n    const buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(columns.length, 0);\n    return buffer;\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      yield TVP_END_TOKEN;\n      yield TVP_END_TOKEN;\n      return;\n    }\n\n    const {\n      columns,\n      rows\n    } = parameter.value;\n\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const column = columns[i];\n      const buff = Buffer.alloc(6); // UserType\n\n      buff.writeUInt32LE(0x00000000, 0); // Flags\n\n      buff.writeUInt16LE(0x0000, 4);\n      yield buff; // TYPE_INFO\n\n      yield column.type.generateTypeInfo(column); // ColName\n\n      yield Buffer.from([0x00]);\n    }\n\n    yield TVP_END_TOKEN;\n\n    for (let i = 0, length = rows.length; i < length; i++) {\n      yield TVP_ROW_TOKEN;\n      const row = rows[i];\n\n      for (let k = 0, len2 = row.length; k < len2; k++) {\n        const column = columns[k];\n        const value = row[k];\n        const param = {\n          value: column.type.validate(value, parameter.collation),\n          length: column.length,\n          scale: column.scale,\n          precision: column.precision\n        }; // TvpColumnData\n\n        yield column.type.generateParameterLength(param, options);\n        yield* column.type.generateParameterData(param, options);\n      }\n    }\n\n    yield TVP_END_TOKEN;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'object') {\n      throw new TypeError('Invalid table.');\n    }\n\n    if (!Array.isArray(value.columns)) {\n      throw new TypeError('Invalid table.');\n    }\n\n    if (!Array.isArray(value.rows)) {\n      throw new TypeError('Invalid table.');\n    }\n\n    return value;\n  }\n};\nvar _default = TVP;\nexports.default = _default;\nmodule.exports = TVP;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,uBAAuB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,6CAA6C,CAAC,CAAC;AAE5G,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEJ,OAAO,EAAEI;EAAI,CAAC;AAAE;AAE9F,MAAME,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AACzC,MAAMC,aAAa,GAAGF,MAAM,CAACC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AACzC,MAAME,WAAW,GAAGH,MAAM,CAACC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7C,MAAMG,GAAG,GAAG;EACVC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,KAAK;EACXC,WAAW,EAAE,SAAAA,CAAUC,SAAS,EAAE;IAChC,MAAMjB,KAAK,GAAGiB,SAAS,CAACjB,KAAK,CAAC,CAAC;;IAE/B,OAAOA,KAAK,CAACe,IAAI,GAAG,WAAW;EACjC,CAAC;EAEDG,gBAAgBA,CAACD,SAAS,EAAE;IAC1B,IAAIE,gBAAgB,EAAEC,iBAAiB;IAEvC,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,MAAM,GAAG,CAAC,CAACH,gBAAgB,GAAGF,SAAS,CAACjB,KAAK,MAAM,IAAI,IAAImB,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACG,MAAM,KAAK,EAAE;IACtI,MAAMC,QAAQ,GAAG,CAAC,CAACH,iBAAiB,GAAGH,SAAS,CAACjB,KAAK,MAAM,IAAI,IAAIoB,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACL,IAAI,KAAK,EAAE;IACzI,MAAMS,YAAY,GAAG,CAAC,GAAG,CAAC,GAAGhB,MAAM,CAACiB,UAAU,CAACJ,YAAY,EAAE,MAAM,CAAC,GAAG,CAAC,GAAGb,MAAM,CAACiB,UAAU,CAACH,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,GAAGd,MAAM,CAACiB,UAAU,CAACF,QAAQ,EAAE,MAAM,CAAC;IACtJ,MAAMG,MAAM,GAAG,IAAIxB,uBAAuB,CAACD,OAAO,CAACuB,YAAY,EAAE,MAAM,CAAC;IACxEE,MAAM,CAACC,UAAU,CAAC,IAAI,CAACd,EAAE,CAAC;IAC1Ba,MAAM,CAACE,aAAa,CAACP,YAAY,CAAC;IAClCK,MAAM,CAACE,aAAa,CAACN,MAAM,CAAC;IAC5BI,MAAM,CAACE,aAAa,CAACL,QAAQ,CAAC;IAC9B,OAAOG,MAAM,CAACG,IAAI;EACpB,CAAC;EAEDC,uBAAuBA,CAACb,SAAS,EAAEc,OAAO,EAAE;IAC1C,IAAId,SAAS,CAACjB,KAAK,IAAI,IAAI,EAAE;MAC3B,OAAOW,WAAW;IACpB;IAEA,MAAM;MACJqB;IACF,CAAC,GAAGf,SAAS,CAACjB,KAAK;IACnB,MAAM0B,MAAM,GAAGlB,MAAM,CAACyB,KAAK,CAAC,CAAC,CAAC;IAC9BP,MAAM,CAACQ,aAAa,CAACF,OAAO,CAACG,MAAM,EAAE,CAAC,CAAC;IACvC,OAAOT,MAAM;EACf,CAAC;EAED,CAACU,qBAAqBA,CAACnB,SAAS,EAAEc,OAAO,EAAE;IACzC,IAAId,SAAS,CAACjB,KAAK,IAAI,IAAI,EAAE;MAC3B,MAAMU,aAAa;MACnB,MAAMA,aAAa;MACnB;IACF;IAEA,MAAM;MACJsB,OAAO;MACPK;IACF,CAAC,GAAGpB,SAAS,CAACjB,KAAK;IAEnB,KAAK,IAAIsC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGP,OAAO,CAACG,MAAM,EAAEG,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAClD,MAAME,MAAM,GAAGR,OAAO,CAACM,CAAC,CAAC;MACzB,MAAMG,IAAI,GAAGjC,MAAM,CAACyB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE9BQ,IAAI,CAACC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;;MAEnCD,IAAI,CAACP,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC;MAC7B,MAAMO,IAAI,CAAC,CAAC;;MAEZ,MAAMD,MAAM,CAAC1B,IAAI,CAACI,gBAAgB,CAACsB,MAAM,CAAC,CAAC,CAAC;;MAE5C,MAAMhC,MAAM,CAACC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3B;IAEA,MAAMC,aAAa;IAEnB,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEH,MAAM,GAAGE,IAAI,CAACF,MAAM,EAAEG,CAAC,GAAGH,MAAM,EAAEG,CAAC,EAAE,EAAE;MACrD,MAAM/B,aAAa;MACnB,MAAMoC,GAAG,GAAGN,IAAI,CAACC,CAAC,CAAC;MAEnB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEC,IAAI,GAAGF,GAAG,CAACR,MAAM,EAAES,CAAC,GAAGC,IAAI,EAAED,CAAC,EAAE,EAAE;QAChD,MAAMJ,MAAM,GAAGR,OAAO,CAACY,CAAC,CAAC;QACzB,MAAM5C,KAAK,GAAG2C,GAAG,CAACC,CAAC,CAAC;QACpB,MAAME,KAAK,GAAG;UACZ9C,KAAK,EAAEwC,MAAM,CAAC1B,IAAI,CAACiC,QAAQ,CAAC/C,KAAK,EAAEiB,SAAS,CAAC+B,SAAS,CAAC;UACvDb,MAAM,EAAEK,MAAM,CAACL,MAAM;UACrBc,KAAK,EAAET,MAAM,CAACS,KAAK;UACnBC,SAAS,EAAEV,MAAM,CAACU;QACpB,CAAC,CAAC,CAAC;;QAEH,MAAMV,MAAM,CAAC1B,IAAI,CAACgB,uBAAuB,CAACgB,KAAK,EAAEf,OAAO,CAAC;QACzD,OAAOS,MAAM,CAAC1B,IAAI,CAACsB,qBAAqB,CAACU,KAAK,EAAEf,OAAO,CAAC;MAC1D;IACF;IAEA,MAAMrB,aAAa;EACrB,CAAC;EAEDqC,QAAQ,EAAE,SAAAA,CAAU/C,KAAK,EAAE;IACzB,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,OAAO,IAAI;IACb;IAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,MAAM,IAAImD,SAAS,CAAC,gBAAgB,CAAC;IACvC;IAEA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACrD,KAAK,CAACgC,OAAO,CAAC,EAAE;MACjC,MAAM,IAAImB,SAAS,CAAC,gBAAgB,CAAC;IACvC;IAEA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACrD,KAAK,CAACqC,IAAI,CAAC,EAAE;MAC9B,MAAM,IAAIc,SAAS,CAAC,gBAAgB,CAAC;IACvC;IAEA,OAAOnD,KAAK;EACd;AACF,CAAC;AACD,IAAIsD,QAAQ,GAAG1C,GAAG;AAClBb,OAAO,CAACE,OAAO,GAAGqD,QAAQ;AAC1BC,MAAM,CAACxD,OAAO,GAAGa,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}