{"ast":null,"code":"/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\n\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { AuthError, PerformanceEvents, Constants, StringUtils, PromptValue, UrlString, ProtocolUtils } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { InteractionType } from '../utils/BrowserConstants.js';\nimport { SilentHandler } from '../interaction_handler/SilentHandler.js';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.js';\nimport { NativeInteractionClient } from './NativeInteractionClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar SilentIframeClient = /** @class */function (_super) {\n  __extends(SilentIframeClient, _super);\n  function SilentIframeClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n    var _this = _super.call(this, config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) || this;\n    _this.apiId = apiId;\n    _this.nativeStorage = nativeStorageImpl;\n    return _this;\n  }\n  /**\r\n   * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n   * @param request\r\n   */\n  SilentIframeClient.prototype.acquireToken = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var acquireTokenMeasurement, silentRequest, serverTelemetryManager, authClient, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n            this.logger.verbose(\"acquireTokenByIframe called\");\n            acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n            // Check that we have some SSO data\n            if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\n              this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n            }\n            // Check that prompt is set to none or no_session, throw error if it is set to anything else.\n            if (request.prompt && request.prompt !== PromptValue.NONE && request.prompt !== PromptValue.NO_SESSION) {\n              acquireTokenMeasurement.endMeasurement({\n                success: false\n              });\n              throw BrowserAuthError.createSilentPromptValueError(request.prompt);\n            }\n            // Create silent request\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n            return [4 /*yield*/, this.initializeAuthorizationRequest(__assign(__assign({}, request), {\n              prompt: request.prompt || PromptValue.NONE\n            }), InteractionType.Silent)];\n          case 1:\n            silentRequest = _a.sent();\n            this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n            serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 5,, 6]);\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n            return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions)];\n          case 3:\n            authClient = _a.sent();\n            this.logger.verbose(\"Auth code client created\");\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentIframeClientTokenHelper, request.correlationId);\n            return [4 /*yield*/, this.silentTokenHelper(authClient, silentRequest).then(function (result) {\n              acquireTokenMeasurement.endMeasurement({\n                success: true,\n                fromCache: false,\n                requestId: result.requestId\n              });\n              return result;\n            })];\n          case 4:\n            return [2 /*return*/, _a.sent()];\n          case 5:\n            e_1 = _a.sent();\n            if (e_1 instanceof AuthError) {\n              e_1.setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e_1);\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            acquireTokenMeasurement.endMeasurement({\n              errorCode: e_1 instanceof AuthError && e_1.errorCode || undefined,\n              subErrorCode: e_1 instanceof AuthError && e_1.subError || undefined,\n              success: false\n            });\n            throw e_1;\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Currently Unsupported\r\n   */\n  SilentIframeClient.prototype.logout = function () {\n    // Synchronous so we must reject\n    return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n  };\n  /**\r\n   * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n   * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n   * @param navigateUrl\r\n   * @param userRequestScopes\r\n   */\n  SilentIframeClient.prototype.silentTokenHelper = function (authClient, silentRequest) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authCodeRequest, navigateUrl, silentHandler, msalFrame, hash, serverParams, state, nativeInteractionClient, userRequestState;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientTokenHelper, silentRequest.correlationId);\n            // Create auth code request and generate PKCE params\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, silentRequest.correlationId);\n            return [4 /*yield*/, this.initializeAuthorizationCodeRequest(silentRequest)];\n          case 1:\n            authCodeRequest = _a.sent();\n            // Create authorize request url\n            this.performanceClient.setPreQueueTime(PerformanceEvents.GetAuthCodeUrl, silentRequest.correlationId);\n            return [4 /*yield*/, authClient.getAuthCodeUrl(__assign(__assign({}, silentRequest), {\n              nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme)\n            }))];\n          case 2:\n            navigateUrl = _a.sent();\n            silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient);\n            // Get the frame handle for the silent request\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerInitiateAuthRequest, silentRequest.correlationId);\n            return [4 /*yield*/, silentHandler.initiateAuthRequest(navigateUrl)];\n          case 3:\n            msalFrame = _a.sent();\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerMonitorIframeForHash, silentRequest.correlationId);\n            return [4 /*yield*/, silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout)];\n          case 4:\n            hash = _a.sent();\n            serverParams = UrlString.getDeserializedHash(hash);\n            state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Silent, authCodeRequest.correlationId);\n            if (serverParams.accountId) {\n              this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n              if (!this.nativeMessageHandler) {\n                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n              }\n              nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, this.correlationId);\n              userRequestState = ProtocolUtils.parseRequestState(this.browserCrypto, state).userRequestState;\n              return [2 /*return*/, nativeInteractionClient.acquireToken(__assign(__assign({}, silentRequest), {\n                state: userRequestState,\n                prompt: silentRequest.prompt || PromptValue.NONE\n              })).finally(function () {\n                _this.browserStorage.cleanRequestByState(state);\n              })];\n            }\n            // Handle response from hash string\n            this.performanceClient.setPreQueueTime(PerformanceEvents.HandleCodeResponseFromHash, silentRequest.correlationId);\n            return [2 /*return*/, silentHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient)];\n        }\n      });\n    });\n  };\n  return SilentIframeClient;\n}(StandardInteractionClient);\nexport { SilentIframeClient };","map":{"version":3,"names":["__extends","__awaiter","__generator","__assign","AuthError","PerformanceEvents","Constants","StringUtils","PromptValue","UrlString","ProtocolUtils","StandardInteractionClient","BrowserAuthError","InteractionType","SilentHandler","NativeMessageHandler","NativeInteractionClient","SilentIframeClient","_super","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","apiId","performanceClient","nativeStorageImpl","nativeMessageHandler","correlationId","_this","call","nativeStorage","prototype","acquireToken","request","acquireTokenMeasurement","silentRequest","serverTelemetryManager","authClient","e_1","_a","label","addQueueMeasurement","SilentIframeClientAcquireToken","verbose","startMeasurement","isEmpty","loginHint","sid","account","username","warning","prompt","NONE","NO_SESSION","endMeasurement","success","createSilentPromptValueError","setPreQueueTime","StandardInteractionClientInitializeAuthorizationRequest","initializeAuthorizationRequest","Silent","sent","browserStorage","updateCacheEntries","state","nonce","authority","EMPTY_STRING","initializeServerTelemetryManager","trys","push","StandardInteractionClientCreateAuthCodeClient","createAuthCodeClient","azureCloudOptions","SilentIframeClientTokenHelper","silentTokenHelper","then","result","fromCache","requestId","setCorrelationId","cacheFailedRequest","cleanRequestByState","errorCode","undefined","subErrorCode","subError","logout","Promise","reject","createSilentLogoutUnsupportedError","authCodeRequest","navigateUrl","silentHandler","msalFrame","hash","serverParams","nativeInteractionClient","userRequestState","StandardInteractionClientInitializeAuthorizationCodeRequest","initializeAuthorizationCodeRequest","GetAuthCodeUrl","getAuthCodeUrl","nativeBroker","isNativeAvailable","authenticationScheme","system","SilentHandlerInitiateAuthRequest","initiateAuthRequest","SilentHandlerMonitorIframeForHash","monitorIframeForHash","iframeHashTimeout","getDeserializedHash","validateAndExtractStateFromHash","accountId","createNativeConnectionNotEstablishedError","parseRequestState","finally","HandleCodeResponseFromHash","handleCodeResponseFromHash","networkClient"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.js"],"sourcesContent":["/*! @azure/msal-browser v2.37.1 2023-06-07 */\n'use strict';\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { AuthError, PerformanceEvents, Constants, StringUtils, PromptValue, UrlString, ProtocolUtils } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { InteractionType } from '../utils/BrowserConstants.js';\nimport { SilentHandler } from '../interaction_handler/SilentHandler.js';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.js';\nimport { NativeInteractionClient } from './NativeInteractionClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SilentIframeClient = /** @class */ (function (_super) {\r\n    __extends(SilentIframeClient, _super);\r\n    function SilentIframeClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        var _this = _super.call(this, config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) || this;\r\n        _this.apiId = apiId;\r\n        _this.nativeStorage = nativeStorageImpl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n     * @param request\r\n     */\r\n    SilentIframeClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenMeasurement, silentRequest, serverTelemetryManager, authClient, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\r\n                        this.logger.verbose(\"acquireTokenByIframe called\");\r\n                        acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\r\n                        // Check that we have some SSO data\r\n                        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\r\n                            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\r\n                        }\r\n                        // Check that prompt is set to none or no_session, throw error if it is set to anything else.\r\n                        if (request.prompt && (request.prompt !== PromptValue.NONE) && (request.prompt !== PromptValue.NO_SESSION)) {\r\n                            acquireTokenMeasurement.endMeasurement({\r\n                                success: false\r\n                            });\r\n                            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\r\n                        }\r\n                        // Create silent request\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\r\n                        return [4 /*yield*/, this.initializeAuthorizationRequest(__assign(__assign({}, request), { prompt: request.prompt || PromptValue.NONE }), InteractionType.Silent)];\r\n                    case 1:\r\n                        silentRequest = _a.sent();\r\n                        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 6]);\r\n                        // Initialize the client\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        this.logger.verbose(\"Auth code client created\");\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.SilentIframeClientTokenHelper, request.correlationId);\r\n                        return [4 /*yield*/, this.silentTokenHelper(authClient, silentRequest).then(function (result) {\r\n                                acquireTokenMeasurement.endMeasurement({\r\n                                    success: true,\r\n                                    fromCache: false,\r\n                                    requestId: result.requestId\r\n                                });\r\n                                return result;\r\n                            })];\r\n                    case 4: return [2 /*return*/, _a.sent()];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (e_1 instanceof AuthError) {\r\n                            e_1.setCorrelationId(this.correlationId);\r\n                        }\r\n                        serverTelemetryManager.cacheFailedRequest(e_1);\r\n                        this.browserStorage.cleanRequestByState(silentRequest.state);\r\n                        acquireTokenMeasurement.endMeasurement({\r\n                            errorCode: e_1 instanceof AuthError && e_1.errorCode || undefined,\r\n                            subErrorCode: e_1 instanceof AuthError && e_1.subError || undefined,\r\n                            success: false\r\n                        });\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    SilentIframeClient.prototype.logout = function () {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\r\n    };\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    SilentIframeClient.prototype.silentTokenHelper = function (authClient, silentRequest) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authCodeRequest, navigateUrl, silentHandler, msalFrame, hash, serverParams, state, nativeInteractionClient, userRequestState;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientTokenHelper, silentRequest.correlationId);\r\n                        // Create auth code request and generate PKCE params\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, silentRequest.correlationId);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(silentRequest)];\r\n                    case 1:\r\n                        authCodeRequest = _a.sent();\r\n                        // Create authorize request url\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.GetAuthCodeUrl, silentRequest.correlationId);\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(__assign(__assign({}, silentRequest), { nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme) }))];\r\n                    case 2:\r\n                        navigateUrl = _a.sent();\r\n                        silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient);\r\n                        // Get the frame handle for the silent request\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerInitiateAuthRequest, silentRequest.correlationId);\r\n                        return [4 /*yield*/, silentHandler.initiateAuthRequest(navigateUrl)];\r\n                    case 3:\r\n                        msalFrame = _a.sent();\r\n                        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerMonitorIframeForHash, silentRequest.correlationId);\r\n                        return [4 /*yield*/, silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout)];\r\n                    case 4:\r\n                        hash = _a.sent();\r\n                        serverParams = UrlString.getDeserializedHash(hash);\r\n                        state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Silent, authCodeRequest.correlationId);\r\n                        if (serverParams.accountId) {\r\n                            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n                            if (!this.nativeMessageHandler) {\r\n                                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\r\n                            }\r\n                            nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, this.correlationId);\r\n                            userRequestState = ProtocolUtils.parseRequestState(this.browserCrypto, state).userRequestState;\r\n                            return [2 /*return*/, nativeInteractionClient.acquireToken(__assign(__assign({}, silentRequest), { state: userRequestState, prompt: silentRequest.prompt || PromptValue.NONE })).finally(function () {\r\n                                    _this.browserStorage.cleanRequestByState(state);\r\n                                })];\r\n                        }\r\n                        // Handle response from hash string\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.HandleCodeResponseFromHash, silentRequest.correlationId);\r\n                        return [2 /*return*/, silentHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SilentIframeClient;\r\n}(StandardInteractionClient));\n\nexport { SilentIframeClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}