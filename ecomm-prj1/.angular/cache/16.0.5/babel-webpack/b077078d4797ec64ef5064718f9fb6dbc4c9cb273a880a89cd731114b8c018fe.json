{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isError } from \"@azure/core-util\";\nimport { custom } from \"./util/inspect\";\nimport { Sanitizer } from \"./util/sanitizer\";\nconst errorSanitizer = new Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nclass RestError extends Error {\n  constructor(message, options = {}) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = options.code;\n    this.statusCode = options.statusCode;\n    this.request = options.request;\n    this.response = options.response;\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n  /**\n   * Logging method for util.inspect in Node\n   */\n  [custom]() {\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n  }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\nexport { RestError };\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e) {\n  if (e instanceof RestError) {\n    return true;\n  }\n  return isError(e) && e.name === \"RestError\";\n}","map":{"version":3,"names":["isError","custom","Sanitizer","errorSanitizer","RestError","Error","constructor","message","options","name","code","statusCode","request","response","Object","setPrototypeOf","prototype","sanitize","REQUEST_SEND_ERROR","PARSE_ERROR","isRestError","e"],"sources":["C:/Users/ishma/Revature/Ishmael-Primus-Code-/ecomm-prj1/node_modules/@azure/core-rest-pipeline/dist-esm/src/restError.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isError } from \"@azure/core-util\";\nimport { custom } from \"./util/inspect\";\nimport { Sanitizer } from \"./util/sanitizer\";\nconst errorSanitizer = new Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nclass RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        this.request = options.request;\n        this.response = options.response;\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [custom]() {\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n    }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\nexport { RestError };\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e) {\n    if (e instanceof RestError) {\n        return true;\n    }\n    return isError(e) && e.name === \"RestError\";\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,MAAMC,cAAc,GAAG,IAAID,SAAS,EAAE;AACtC;AACA;AACA;AACA,MAAME,SAAS,SAASC,KAAK,CAAC;EAC1BC,WAAWA,CAACC,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC/B,KAAK,CAACD,OAAO,CAAC;IACd,IAAI,CAACE,IAAI,GAAG,WAAW;IACvB,IAAI,CAACC,IAAI,GAAGF,OAAO,CAACE,IAAI;IACxB,IAAI,CAACC,UAAU,GAAGH,OAAO,CAACG,UAAU;IACpC,IAAI,CAACC,OAAO,GAAGJ,OAAO,CAACI,OAAO;IAC9B,IAAI,CAACC,QAAQ,GAAGL,OAAO,CAACK,QAAQ;IAChCC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEX,SAAS,CAACY,SAAS,CAAC;EACpD;EACA;AACJ;AACA;EACI,CAACf,MAAM,IAAI;IACP,OAAQ,cAAa,IAAI,CAACM,OAAQ,OAAMJ,cAAc,CAACc,QAAQ,CAAC,IAAI,CAAE,EAAC;EAC3E;AACJ;AACA;AACA;AACA;AACA;AACA;AACAb,SAAS,CAACc,kBAAkB,GAAG,oBAAoB;AACnD;AACA;AACA;AACA;AACAd,SAAS,CAACe,WAAW,GAAG,aAAa;AACrC,SAASf,SAAS;AAClB;AACA;AACA;AACA;AACA,OAAO,SAASgB,WAAWA,CAACC,CAAC,EAAE;EAC3B,IAAIA,CAAC,YAAYjB,SAAS,EAAE;IACxB,OAAO,IAAI;EACf;EACA,OAAOJ,OAAO,CAACqB,CAAC,CAAC,IAAIA,CAAC,CAACZ,IAAI,KAAK,WAAW;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}